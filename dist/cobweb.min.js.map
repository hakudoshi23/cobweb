{"version":3,"sources":["ajax.js","array.js","html.js","obj.js","tree.js","events.js","logger.js","cobweb.js","modules.js","asset/mesh.js","asset/shader.js","math/camera.js","math/octree.js","math/plane.js","math/ray.js","pane/pane-header.js","pane/pane-types.js","pane/panes.js","math/geometry/geometry.js","math/halfEdge/halfedge-cache.js","math/halfEdge/halfedge.js","pane/surface/surface.js","pane/surface/interaction/common-interaction.js","pane/surface/interaction/object-interaction.js","pane/surface/interaction/surface-interaction.js","pane/surface/render/render-solid-cache.js","pane/surface/render/render-solid.js","pane/surface/render/surface-render.js","pane/surface/interaction/edit/edit-interaction-action-all.js","pane/surface/interaction/edit/edit-interaction-action-move.js","pane/surface/interaction/edit/edit-interaction-render-cache.js","pane/surface/interaction/edit/edit-interaction-render.js","pane/surface/interaction/edit/edit-interaction-select.js","pane/surface/interaction/edit/edit-interaction.js","graphic.js","scene.js"],"names":["ajax","options","Object","assign","defaultAjaxOptions","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","success","response","error","method","params","objToParams","data","urlWithParams","url","open","async","send","get","Ajax","getJSON","JSON","parse","post","obj","key","encodeURIComponent","slice","window","safeExtend","prototype","property","value","Array","a","concat","i","length","j","splice","callback","s4","Math","floor","random","toString","substring","HTMLElement","oldClassNames","newClassNames","arguments","className","trim","replace","split","unique","join","queryClassNames","currentClassNames","index","name","indexOf","removeClassNames","removeEach","forEach","attr","__data_cache","WeakMap","elAttrs","undefined","set","setAttribute","getAttribute","removeAttribute","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","matches","document","ownerDocument","querySelectorAll","item","query","parentElement","current","clientHeight","style","height","clientWidth","width","guid","overlap","querySelector","newObj","hasOwnProperty","clone","target","varArgs","TypeError","to","nextSource","nextKey","call","defaults","TreeNode","parent","children","isRoot","add","child","constructor","push","remove","dfs","check","out","bfs","extend","_TreeNode","create","EventHandler","isDebug","listeners","trigger","console","debug","apply","on","off","array","reset","own","keys","Logger","instance","handlers","addHandler","level","ALL","args","DEBUG","INFO","info","WARNING","warn","ERROR","log","warning","tmp","levelHandlers","handler","removeHandler","NONE","defaultOptions","container","selector","Cobweb","Error","addClass","logger","events","modules","Modules","onLoadedAll","names","topologicalSort","sortedNames","module","dependencies","depName","nextName","candidates","getInitialCandidates","dependant","dependantName","allDependenciesMet","loadedUntilNow","runCallback","callbacks","all","init","ex","dependencyModule","moduleName","buildHalfEdge","objSource","mesh","vertices","line","startsWith","vertex","map","number","parseFloat","HalfEdgeMesh","addVertices","faceVertices","parseInt","addFace","asset","shader","firstSource","Shader","Camera","center","rotation","distance","projection","mat4","getViewMatrix","view","eye","getPosition","lookAt","getUpDirection","vec3","rotateX","rotateY","getDirection","direction","sub","normalize","getRay","ray","canvasCoords","canvasSize","Ray","start","auxMat","multiply","invert","transformMat4","up","vRotation","PI","computeLocalAxis","left","forward","cross","canContain","aabb","min","max","findContainingParent","result","maxItems","maxDepth","padding","OctreeNode","depth","items","root","getAllItems","addItems","addItem","splitIfNeeded","removeItem","removed","mergeIfNeeded","updateDimensions","redistributeItems","subItems","getCollidingNodes","nodes","collidingPoint","geo","rayAABBCollision","getCollidingItems","node","parentAabb","half","scale","ref","mul","containingParent","Octree","_addItem","onVerticesMove","newItems","allItems","updateBounds","fill","Number","MAX_VALUE","copy","Plane","point","normal","fromPoints","b","onCreateCallback","pane","header","createHeader","appendChild","div","createElement","oldPane","newPane","oldType","attrData","setType","types","typeCallbacks","onPaneType","paneHeader","onCreateHeader","dataset","paneType","onPaneCreate","onPaneSplit","origin","onPaneResize","internal","Pane","separator","size","getBarycentricCoordinates","p1","p2","p3","v0","getVectorFromPoints","v1","v2","d00","dot","d01","d11","d20","d21","denom","getNormal","v3","tmp1","tmp2","output","rayFaceCollision","triangles","triangulateFace","triangle","rayTriangleCollision","triangleNormal","rayPlaneCollision","bary","planePoint","planeNormal","numer","abs","t","minB","maxB","whichPlane","inside","quadrant","Float32Array","maxT","candidatePlane","closestPointsBetweenSegments","a0","a1","b0","b1","p_a","p_b","sc","tc","u","subtract","v","w","c","d","e","D","dP","rayPointDistance","aux","len","pointPointDistance","triangulated","computePointsCenter","points","findClosestPointIndex","position","closestIndex","newDistance","findClosestPoint","findClosestFace","faces","centers","face","computeCenter","superConstructor","cachedHalfEdgeMesh","heMesh","cache","meshes","builder","builders","onCreate","onClean","onVerticesChange","addBuilder","buildEdge","end","edge","HalfEdgeFace","opposite","findOppositeEdge","next","_halfEdge","outEdges","opposites","filter","he","VertexGetFaces","VertexComputeNormal","getFaces","computeRawNormal","computeNormal","bounds","halfEdges","isArray","ownIndex","he1","he2","last","prev","clear","halfEdge","getEdges","getVertices","getVerticesTriangulated","triplet","onSurfacePaneType","canvas","id","surfaceIndex","addEventListener","event","focus","surface","camera","updateCanvasSize","onCreateSurfaceHeader","label","innerHTML","context","getContext","headerHeight","imgData","createImageData","buffer","Uint8Array","perspective","DEG2RAD","surfaces","parentNode","combine","originalRotation","delta","upNormalMouseDown","clampRotations","getCoordsDelta","initial","rotations","pi2","mouseDownCoords","interactions","common","onMouseWheel","realCoords","wheelDelta","detail","onMouseMove","moving","onMouseDown","which","equals","onMouseUp","object","isHit","hitPoint","scene","getObjects","testRayBBox","bounding","model","selected","getLocalCoordinates","type","onKeyDown","onKeyUp","onClick","layerX","layerY","onContextMenu","preventDefault","onSurfaceEvent","getInteractionCallbacks","keepRunning","setInteraction","interaction","interactionName","onRender","tabIndex","oncontextmenu","onkeydown","onkeyup","onmousewheel","onmousemove","onmousedown","onmouseup","onclick","initialValue","solidBuilder","halfEdgeMesh","buffers","normals","indices","Uint16Array","GL","Mesh","load","vertexBuffers","dirty","upload","renderObject","primitive","indexBufferName","temp","uniforms","u_mvp","u_model","draw","renderBounds","octree","updateBoundsModel","boundsModel","identity","lerp","translate","solidShader","wireframeShader","colors","wireframe","grid","lines","colorsArray","bufferIndex","createVertexBuffer","axisX","axisZ","renders","solid","lightDirection","u_lightvector","graphics","gl","LINES","setRender","u_color","render","getRender","renderName","panes","edit","actions","selection","isEmpty","addAll","action","initialCoords","vec2","move","lastCoords","objects","selectedObj","originalPosition","currentRay","initialRay","cameraDirection","hitPointInitial","hitPointCurrent","selectionCenter","getCenter","isControlDown","round","sceneObj","getObjectByName","restore","wireframeBuilder","verticesBuilder","color","_selected","POINTS","toggleVertex","toggle","selectedVertices","allSelected","includes","toggleFace","arrayName","initObjectIfNeeded","delObjectIfNeeded","edges","objSelection","getFacesFromVertices","vertexSelectionMargin","rayVertices","uniqueFaces","closestFace","vertexDistance","isMouseDown","isShiftDown","delta2d","setAction","runAction","shiftDown","shiftKey","ctrlKey","callbackName","drawRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","mainRender","readPixels","RGBA","UNSIGNED_BYTE","putImageData","Graphics","screen","animate","ondraw","renderTargets","clearColor","enable","DEPTH_TEST","rootNode","objectCount","addObject","TRIANGLES"],"mappings":"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","file":"cobweb.min.js","sourcesContent":["((function(){\r\n    'use strict';\r\n\r\n    var defaultAjaxOptions = {\r\n        method: 'GET',\r\n        url: '',\r\n        data: {},\r\n        async: true,\r\n        success: null,\r\n        error: null\r\n    };\r\n\r\n    function ajax (options) {\r\n        options = Object.assign({}, defaultAjaxOptions, options);\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200) {\r\n                    if (options.success) options.success(this.response);\r\n                } else {\r\n                    if (options.error) error.success(this.response);\r\n                }\r\n            }\r\n        };\r\n        if (options.method === 'GET') {\r\n            var params = objToParams(options.data);\r\n            var urlWithParams = options.url + (params ? '?' + params : '');\r\n            xhttp.open(options.method, urlWithParams, options.async);\r\n            xhttp.send();\r\n        } else if (options.method === 'POST') {\r\n            xhttp.open(options.method, options.url, options.async);\r\n            xhttp.send(options.data);\r\n        }\r\n        return xhttp;\r\n    }\r\n\r\n    function get (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function getJSON (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: function (response) {\r\n                success(JSON.parse(response));\r\n            },\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function post (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'POST'\r\n        });\r\n    }\r\n\r\n    window.Ajax = {\r\n        ajax: ajax,\r\n        get: get,\r\n        getJSON: getJSON,\r\n        post: post\r\n    };\r\n\r\n    function objToParams (obj) {\r\n        var params = '';\r\n        for (var key in obj) {\r\n            var nextParam = key + '=' + encodeURIComponent(obj[key]);\r\n            params += '&' + nextParam;\r\n        }\r\n        return params.slice(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Array.prototype, 'unique', function() {\r\n        var a = this.concat();\r\n        for(var i = 0; i < a.length; ++i)\r\n            for(var j = i + 1; j < a.length; ++j)\r\n                if(a[i] === a[j]) a.splice(j--, 1);\r\n        return a;\r\n    });\r\n\r\n    safeExtend(Array.prototype, 'forEach', function(callback) {\r\n        for (var i = 0; i < this.length; i++)\r\n            callback(this[i], i, this);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(HTMLElement.prototype, 'addClass', function () {\r\n        var oldClassNames, newClassNames;\r\n        for(var i in arguments){\r\n            oldClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            newClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            this.className = oldClassNames.concat(newClassNames).unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'hasClass', function () {\r\n        var queryClassNames, currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n        for(var i in arguments){\r\n            queryClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            for (var index = 0; index < queryClassNames.length; index++) {\r\n                var name = queryClassNames[index];\r\n                if (currentClassNames.indexOf(name) == -1)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'removeClass', function () {\r\n        var index = 0, currentClassNames, removeClassNames;\r\n        var removeEach = function (name) {\r\n            index = currentClassNames.indexOf(name);\r\n            if (index != -1)\r\n                currentClassNames.splice(index, 1);\r\n        };\r\n        for(var i in arguments){\r\n            currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames.forEach(removeEach);\r\n            this.className = currentClassNames.unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'data', function (attr, value) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        var elAttrs = window.__data_cache.get(this) || {};\r\n        if (value !== undefined) {\r\n            elAttrs[attr] = value;\r\n            window.__data_cache.set(this, elAttrs);\r\n        } else {\r\n            if (attr) return elAttrs && elAttrs[attr];\r\n            else return elAttrs;\r\n        }\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'setData', function (data) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        window.__data_cache.set(this, data);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attr', function (name, value) {\r\n        if (value !== undefined)\r\n            this.setAttribute(name, value);\r\n        else if (value === null)\r\n            this.removeAttribute(name);\r\n        else\r\n            return this.getAttribute(name);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attrData', function (name, value) {\r\n        return this.attr('data-' + name, value);\r\n    });\r\n\r\n    safeExtend(Element.prototype, 'matches',\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;\r\n        }\r\n    );\r\n\r\n    safeExtend(HTMLElement.prototype, 'parent', function (query) {\r\n        if (!query) return this.parentElement;\r\n        var current = this.parentElement;\r\n        while (!current.matches(query))\r\n            current = current.parentElement;\r\n        return current;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'height', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.height = value + 'px';\r\n            else\r\n                this.style.height = value;\r\n        } else\r\n            return this.clientHeight;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'width', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.width = value + 'px';\r\n            else\r\n                this.style.width = value;\r\n        } else\r\n            return this.clientWidth;\r\n    });\r\n\r\n    safeExtend(window, 'guid', function () {\r\n        return 'GUID-' + s4() + '-' + s4() + '-' + s4();\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'guid', function () {\r\n        var guid = null, overlap = null;\r\n        do {\r\n            guid = window.guid();\r\n            overlap = document.querySelector('#' + guid);\r\n        } while(overlap);\r\n        this.attr('id', guid);\r\n        return guid;\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16).substring(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Object, 'clone', function (obj) {\r\n        var newObj = {};\r\n        for (var property in obj)\r\n            if (obj.hasOwnProperty(property)) {\r\n                var value = obj[property];\r\n                if (typeof value === 'object')\r\n                    newObj[property] = Object.clone(obj[property]);\r\n                else\r\n                    newObj[property] = obj[property];\r\n            }\r\n        return newObj;\r\n    });\r\n\r\n    safeExtend(Object, 'assign', function(target, varArgs) {\r\n        if (target === null)\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        var to = Object(target);\r\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n            if (nextSource !== null) {\r\n                for (var nextKey in nextSource) {\r\n                    if (hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return to;\r\n    });\r\n\r\n    safeExtend(Object, 'extend', function(options, defaults) {\r\n        return Object.assign({}, defaults, options);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var TreeNode = function (parent, data) {\r\n        this.parent = parent || null;\r\n        this.data = data || {};\r\n        this.children = [];\r\n    };\r\n\r\n    window.TreeNode = TreeNode;\r\n\r\n    TreeNode.prototype.isRoot = function () {\r\n        return !this.parent;\r\n    };\r\n\r\n    TreeNode.prototype.add = function (data) {\r\n        var child = new this.constructor(this, data);\r\n        this.children.push(child);\r\n        return child;\r\n    };\r\n\r\n    TreeNode.prototype.remove = function (index) {\r\n        this.children.slice(index, 1);\r\n        return this;\r\n    };\r\n\r\n    TreeNode.prototype.dfs = function (check) {\r\n        var out = [];\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n            out.concat(this.children[i].dfs(check));\r\n        }\r\n        return out;\r\n    };\r\n\r\n    TreeNode.prototype.bfs = function (check) {\r\n        var out = [], i;\r\n        for (i = 0; i < this.children.length; i++)\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n        for (i = 0; i < this.children.length; i++)\r\n            out.concat(this.children[i].bfs(check));\r\n        return out;\r\n    };\r\n\r\n    TreeNode.extend = function () {\r\n        var _TreeNode = function (parent, data) {\r\n            TreeNode.call(this, parent, data);\r\n        };\r\n        _TreeNode.prototype = Object.create(TreeNode.prototype);\r\n        _TreeNode.prototype.constructor = _TreeNode;\r\n        return new _TreeNode();\r\n    };\r\n})());\r\n","((function() {\r\n    'use strict';\r\n\r\n    var EventHandler = function (isDebug) {\r\n        this.isDebug = !!isDebug;\r\n        this.listeners = {};\r\n    };\r\n\r\n    EventHandler.prototype.trigger = function() {\r\n        var name = arguments[0];\r\n        var listeners = this.listeners[name] || [];\r\n        Array.prototype.splice.call(arguments, 0, 1);\r\n        if (this.isDebug) console.debug(name, arguments);\r\n        for (var i = 0; i < listeners.length; i++)\r\n            listeners[i].apply(null, arguments);\r\n    };\r\n\r\n    EventHandler.prototype.on = function(name, callback) {\r\n        if (!this.listeners[name]) this.listeners[name] = [];\r\n        this.listeners[name].push(callback);\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name) {\r\n        delete this.listeners[name];\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name, callback) {\r\n        if (this.listeners[name]) {\r\n            var array = this.listeners[name];\r\n            if (array.indexOf(callback) > -1) array.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    EventHandler.prototype.reset = function() {\r\n        var own = this;\r\n        Object.keys(this.listeners).forEach(function(key) {\r\n            delete own.listeners[key];\r\n        });\r\n    };\r\n\r\n    window.EventHandler = EventHandler;\r\n})());\r\n","/* jshint loopfunc:true */\r\n\r\n((function(){\r\n    'use strict';\r\n\r\n    var Logger = function (instance) {\r\n        this.handlers = [];\r\n\r\n        this.addHandler(this.level.ALL, function (level, args) {\r\n            if (Logger.prototype.level.DEBUG === level) {\r\n                console.debug.apply(this, args);\r\n            } else if (Logger.prototype.level.INFO === level) {\r\n                console.info.apply(this, args);\r\n            } else if (Logger.prototype.level.WARNING === level) {\r\n                console.warn.apply(this, args);\r\n            } else if (Logger.prototype.level.ERROR === level) {\r\n                console.error.apply(this, args);\r\n            }\r\n        });\r\n    };\r\n\r\n    Logger.prototype.debug = function () {\r\n        this.log(Logger.prototype.level.DEBUG, arguments);\r\n    };\r\n\r\n    Logger.prototype.info = function () {\r\n        this.log(Logger.prototype.level.INFO, arguments);\r\n    };\r\n\r\n    Logger.prototype.warning = function () {\r\n        this.log(Logger.prototype.level.WARNING, arguments);\r\n    };\r\n\r\n    Logger.prototype.error = function () {\r\n        this.log(Logger.prototype.level.ERROR, arguments);\r\n    };\r\n\r\n    Logger.prototype.log = function (level, args) {\r\n        var tmp = level;\r\n        var levelHandlers = this.handlers[tmp] || [];\r\n        while (tmp >= 0) {\r\n            levelHandlers.forEach(function (handler) {\r\n                handler(level, args);\r\n            });\r\n            levelHandlers = this.handlers[--tmp] || [];\r\n        }\r\n    };\r\n\r\n    Logger.prototype.addHandler = function (level, callback) {\r\n        if (!this.handlers[level])\r\n            this.handlers[level] = [];\r\n        this.handlers[level].push(callback);\r\n    };\r\n\r\n    Logger.prototype.removeHandler = function (level, callback) {\r\n        var levelHandlers = this.handlers[level];\r\n        if (levelHandlers) {\r\n            var index = levelHandlers.indexOf(callback);\r\n            if (index > -1)\r\n                levelHandlers.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    Logger.prototype.level = {\r\n        ALL: 0,\r\n        DEBUG: 1,\r\n        INFO: 2,\r\n        WARNING: 3,\r\n        ERROR: 4,\r\n        NONE: 5,\r\n    };\r\n\r\n    window.Logger = Logger;\r\n})());\r\n","(function(){\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        container: {\r\n            selector: '#cobweb'\r\n        }\r\n    };\r\n\r\n    var Cobweb = function (options) {\r\n        this.options = Object.assign({}, defaultOptions, options);\r\n        var instance = this;\r\n\r\n        this.container = document.querySelector(this.options.container.selector);\r\n        if (!this.container)\r\n            throw new Error('Invalid container selector: \\'' +\r\n                this.options.container.selector + '\\'');\r\n        this.container.addClass('cb-container');\r\n        this.container.data('instance', this);\r\n\r\n        this.logger = new Logger(this, true);\r\n        this.events = new EventHandler(true);\r\n        this.modules = new Modules([this], {\r\n            onLoadedAll: function (names) {\r\n                instance.events.trigger('modules.loaded.all', names);\r\n                instance.events.trigger('app.loaded');\r\n            }\r\n        });\r\n    };\r\n\r\n    window.Cobweb = Cobweb;\r\n}());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Modules = function (params, callbacks) {\r\n        callbacks = callbacks || {};\r\n        var modules = Modules.prototype.all;\r\n        try {\r\n            var sortedNames = topologicalSort(modules);\r\n            for (var i = 0; i < sortedNames.length; i++ ) {\r\n                var name = sortedNames[i];\r\n                var module = modules[name];\r\n                try {\r\n                    module.init.apply(this, params);\r\n                    runCallback(callbacks, 'onLoaded', [name, module]);\r\n                } catch (ex) {\r\n                    console.error('Error loading module:', name, ex);\r\n                    runCallback(callbacks, 'onError', [ex, name, module]);\r\n                }\r\n            }\r\n            runCallback(callbacks, 'onLoadedAll', [sortedNames]);\r\n        } catch (ex) {\r\n            console.error('Error loading modules:', ex);\r\n        }\r\n    };\r\n\r\n    Modules.prototype.all = {};\r\n    Modules.prototype.add = function (name, init, dependencies) {\r\n        dependencies = dependencies || [];\r\n\r\n        var dependant = [];\r\n        var dependencyModule, i;\r\n        for (var moduleName in this.all) {\r\n            var module = this.all[moduleName];\r\n            for (i = 0; i < module.dependencies.length; i++)\r\n                if (module.dependencies[i] === name)\r\n                    dependant.push(moduleName);\r\n        }\r\n        for (i = 0; i < dependencies.length; i++) {\r\n            dependencyModule = this.all[dependencies[i]];\r\n            if (dependencyModule) dependencyModule.dependant.push(name);\r\n        }\r\n\r\n        this.all[name] = {\r\n            dependencies: dependencies,\r\n            dependant: dependant,\r\n            init: init\r\n        };\r\n    };\r\n\r\n    window.Modules = Modules;\r\n\r\n    function topologicalSort (modules) {\r\n        var sortedNames = [];\r\n\r\n        var module = null, i = 0;\r\n        for (var name in modules) {\r\n            module = modules[name];\r\n            for (i = 0; i < module.dependencies.length; i++) {\r\n                var depName = module.dependencies[i];\r\n                if (!modules[depName])\r\n                    throw new Error('Missing module: ' + depName);\r\n            }\r\n        }\r\n\r\n        var nextName = null;\r\n        var candidates = getInitialCandidates(modules);\r\n        while (candidates.length > 0) {\r\n            nextName = candidates.splice(0, 1)[0];\r\n            module = modules[nextName];\r\n            if (module) {\r\n                sortedNames.push(nextName);\r\n                for (i = 0; i < module.dependant.length; i++) {\r\n                    var dependantName = module.dependant[i];\r\n                    if (allDependenciesMet(sortedNames, modules[dependantName]))\r\n                        candidates.push(dependantName);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Object.keys(modules).length !== sortedNames.length)\r\n            throw new Error('Dependency cycle!');\r\n\r\n        return sortedNames;\r\n    }\r\n\r\n    function getInitialCandidates (modules) {\r\n        var candidates = [];\r\n        for (var name in modules)\r\n            if (modules[name].dependencies.length === 0)\r\n                candidates.push(name);\r\n        return candidates;\r\n    }\r\n\r\n    function allDependenciesMet (loadedUntilNow, module) {\r\n        for (var i = 0; i < module.dependencies.length; i++)\r\n            if (loadedUntilNow.indexOf(module.dependencies[i]) === -1) return false;\r\n        return true;\r\n    }\r\n\r\n    function runCallback (callbacks, name, params) {\r\n        var callback = callbacks[name];\r\n        var isFunction = typeof callback === 'function';\r\n        if (isFunction) callback.apply(null, params);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('mesh', function (instance) {\r\n        instance.asset = instance.asset || {};\r\n        instance.asset.mesh = {\r\n            get: function (name, callback) {\r\n                Ajax.get('asset/mesh/' + name + '.obj', function (response) {\r\n                    callback(buildHalfEdge(response));\r\n                });\r\n            }\r\n        };\r\n    });\r\n\r\n    function buildHalfEdge (objSource) {\r\n        var mesh = null;\r\n        var vertices = [];\r\n        var lines = objSource.split(/\\r?\\n/);\r\n        lines.forEach(function (line) {\r\n            if (line.startsWith('v')) {\r\n                var vertex = line.substring(2).split(' ').map(function (number) {\r\n                    return parseFloat(number);\r\n                });\r\n                vertices.push(vertex);\r\n            } else if (line.startsWith('f')) {\r\n                if (mesh === null) {\r\n                    mesh = new Math.HalfEdgeMesh();\r\n                    mesh.addVertices(vertices);\r\n                }\r\n                var faceVertices = line.substring(2).split(' ').map(function (index) {\r\n                    return vertices[parseInt(index) - 1];\r\n                });\r\n                mesh.addFace(faceVertices);\r\n            }\r\n        });\r\n        return mesh;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('shader', function (instance) {\r\n        instance.asset = instance.asset || {};\r\n        instance.asset.shader = {\r\n            get: function (name, callback) {\r\n                var shader = null, firstSource = null;\r\n                Ajax.get('asset/shader/' + name + '.vert', function (response) {\r\n                    if (firstSource) {\r\n                        shader = new Shader(response, firstSource);\r\n                        callback(shader);\r\n                    } firstSource = response;\r\n                });\r\n                Ajax.get('asset/shader/' + name + '.frag', function (response) {\r\n                    if (firstSource) {\r\n                        shader = new Shader(firstSource, response);\r\n                        callback(shader);\r\n                    } firstSource = response;\r\n                });\r\n            }\r\n        };\r\n    });\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Camera = function (center, rotation, distance) {\r\n        this.center = center || [0, 0, 0];\r\n        this.rotation = rotation || [2.8, 0.5];\r\n        this.distance = distance || 15;\r\n        this.projection = mat4.create();\r\n    };\r\n\r\n    Camera.prototype.getViewMatrix = function (view) {\r\n        view = view || mat4.create();\r\n        var eye = [0, 0, 0];\r\n        this.getPosition(eye);\r\n        mat4.lookAt(view, eye, this.center, this.getUpDirection());\r\n        return view;\r\n    };\r\n\r\n    Camera.prototype.getPosition = function (eye) {\r\n        eye = eye || vec3.create();\r\n        vec3.set(eye, 0, 0, -this.distance);\r\n        vec3.rotateX(eye, eye, this.rotation[1]);\r\n        vec3.rotateY(eye, eye, -this.rotation[0]);\r\n        return eye;\r\n    };\r\n\r\n    Camera.prototype.getDirection = function (direction) {\r\n        direction = direction || vec3.create();\r\n        var eye = this.getPosition();\r\n        vec3.sub(direction, this.center, eye);\r\n        vec3.normalize(direction, direction);\r\n        return direction;\r\n    };\r\n\r\n    Camera.prototype.getRay = function (ray, canvasCoords, canvasSize) {\r\n        ray = ray || new Math.Ray();\r\n        this.getPosition(ray.start);\r\n        vec3.set(ray.direction, canvasCoords[0] / (canvasSize[0] * 0.5) - 1.0,\r\n            canvasCoords[1] / (canvasSize[1] * 0.5) - 1.0, 1);\r\n        var auxMat = mat4.create();\r\n        mat4.multiply(auxMat, this.projection, this.getViewMatrix());\r\n        mat4.invert(auxMat, auxMat);\r\n        vec3.transformMat4(ray.direction, ray.direction, auxMat);\r\n        vec3.normalize(ray.direction, ray.direction);\r\n        return ray;\r\n    };\r\n\r\n    Camera.prototype.getUpDirection = function (up) {\r\n        up = up || vec3.create();\r\n        var vRotation = this.rotation[1];\r\n        if (vRotation >= Math.PI / 2 &&\r\n            vRotation <= ((Math.PI * 3) / 2))\r\n            vec3.set(up, 0, 1, 0);\r\n        else vec3.set(up, 0, -1, 0);\r\n        return up;\r\n    };\r\n\r\n    Camera.prototype.computeLocalAxis = function () {\r\n        var left = [0, 0, 0];\r\n        var up = [0, 0, 0];\r\n\r\n        var forward = this.getDirection();\r\n        vec3.cross(left, forward, [0, 1, 0]);\r\n        vec3.cross(up, forward, left);\r\n\r\n        return {up: up, left: left};\r\n    };\r\n\r\n    window.Math.Camera = Camera;\r\n})());\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tvar defaultOptions = {\r\n\t\tmaxItems: 20,\r\n\t\tmaxDepth: 5,\r\n\t\tpadding: 0.1\r\n\t};\r\n\r\n\tvar OctreeNode = function (parent, depth) {\r\n\t\tthis.items = [];\r\n\t\tthis.children = null;\r\n\t\tthis.depth = depth || 0;\r\n\t\tthis.parent = parent || null;\r\n\t\tthis.aabb = { max: [0, 0, 0], min: [0, 0, 0] };\r\n\r\n\t\tthis.root = this;\r\n\t\twhile (this.root.parent !== null)\r\n\t\t\tthis.root = this.root.parent;\r\n\t};\r\n\r\n\tOctreeNode.prototype.getAllItems = function (container) {\r\n\t\tcontainer = container || [];\r\n\t\tvar i;\r\n        if (!this.children) {\r\n\t\t\tcontainer = container.concat(this.items);\r\n\t\t} else {\r\n            for (i = 0; i < this.children.length; i++)\r\n                container = this.children[i].getAllItems(container);\r\n        }\r\n\t\treturn container;\r\n\t};\r\n\r\n\tOctreeNode.prototype.addItems = function (items) {\r\n\t\tvar result = false;\r\n\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\tvar item = items[i];\r\n\t\t\tresult |= this.addItem(item);\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tOctreeNode.prototype.addItem = function (item) {\r\n\t\tif (this.canContain(item)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < 8; i++)\r\n\t\t\t\t\tif (this.children[i].addItem(item))\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.items.push(item);\r\n\t\t\t\tthis.splitIfNeeded();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tOctreeNode.prototype.removeItem = function (item) {\r\n\t\tvar removed = false;\r\n\t\tvar index = this.items.indexOf(item);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.items.splice(index, 1);\r\n\t\t\tthis.mergeIfNeeded();\r\n\t\t\tremoved = true;\r\n\t\t} else {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\t\tremoved |= this.children[i].removeItem(item);\r\n\t\t\t\t\tif (removed) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (removed) this.mergeIfNeeded();\r\n\t\treturn removed;\r\n\t};\r\n\r\n\tOctreeNode.prototype.splitIfNeeded = function () {\r\n\t\tif (this.root.options.maxItems < this.items.length &&\r\n\t\t\tthis.root.options.maxDepth > this.depth) {\r\n\t\t\tthis.children = [];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tthis.children[i] = new OctreeNode(this, this.depth + 1);\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t\t\t}\r\n\t\t\tthis.redistributeItems(this.items);\n\t\t\tthis.items = [];\r\n\t\t}\r\n\t};\r\n\r\n\tOctreeNode.prototype.mergeIfNeeded = function () {\r\n\t\tif (this.children) {\r\n\t\t\tvar canMerge = false;\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tthis.children[i].mergeIfNeeded();\r\n\t\t\t\tcanMerge = !this.children[i].children;\r\n\t\t\t\tif (!canMerge) return false;\r\n\t\t\t}\r\n\t\t\tvar subItems = this.getAllItems();\r\n\t\t\tif (this.root.options.maxItems > subItems.length) {\r\n\t\t\t\tthis.children = null;\n\t\t\t\tthis.redistributeItems(subItems);\r\n\t\t\t\treturn true;\r\n\t\t\t} else return false;\r\n\t\t} else return false;\r\n\t};\r\n\r\n\tOctreeNode.prototype.canContain = function (item) {\r\n\t\treturn canContain(item, this.aabb);\r\n\t};\r\n\r\n\tOctreeNode.prototype.getCollidingNodes = function (ray) {\r\n\t\tvar nodes = [];\r\n\t\tvar aabb = this.aabb;\r\n\t\tvar collidingPoint = [0, 0, 0];\r\n\t\tif (Math.geo.rayAABBCollision(ray.start, ray.direction,\r\n\t\t\tthis.aabb.min, this.aabb.max, collidingPoint)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\t\tvar child = this.children[i];\r\n\t\t\t\t\tnodes = nodes.concat(child.getCollidingNodes(ray));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnodes.push(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nodes;\r\n\t};\r\n\r\n\tOctreeNode.prototype.getCollidingItems = function (ray) {\r\n\t\tvar items = [];\r\n\t\tthis.getCollidingNodes(ray).forEach(function (node) {\r\n\t\t\titems = items.concat(node.items);\r\n\t\t});\r\n\t\treturn items;\r\n\t};\r\n\r\n\tOctreeNode.prototype.updateDimensions = function (parentAabb, index) {\r\n\t\tvar half = [0, 0, 0];\r\n\t\tvec3.sub(half, parentAabb.max, parentAabb.min);\r\n\t\tvec3.scale(half, half, 0.5);\r\n\t\tvar ref = [!(index & 1), !(index & 2), !(index & 4)];\r\n\t\tvec3.mul(this.aabb.min, half, ref);\r\n\t\tvec3.add(this.aabb.min, this.aabb.min, parentAabb.min);\r\n\t\tvec3.add(this.aabb.max, this.aabb.min, half);\r\n\t\tif (this.children)\r\n\t\t\tfor (var i = 0; i < this.children.length; i++)\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t};\r\n\r\n\tOctreeNode.prototype.redistributeItems = function (items) {\r\n\t\titems = items || this.items;\r\n\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\tvar item = items[i];\r\n\t\t\tvar containingParent = findContainingParent(this, item);\r\n\t\t\tif (containingParent === null) {\r\n\t\t\t\tconsole.warn('Recomputing bounds...');\r\n\t\t\t\tthis.root.updateDimensions([item]);\r\n\t\t\t\tcontainingParent = findContainingParent(this, item);\r\n\t\t\t}\r\n\t\t\tcontainingParent.addItem(item);\r\n\t\t}\r\n\t};\r\n\r\n\tvar Octree = function (options) {\r\n\t\tthis.options = Object.assign({}, defaultOptions, options);\r\n\t\tOctreeNode.call(this);\r\n\t};\r\n\r\n\tOctree.prototype = Object.create(OctreeNode.prototype);\r\n\tOctree.prototype.constructor = OctreeNode;\r\n\r\n\tvar _addItem = Octree.prototype.addItem;\r\n\tOctree.prototype.addItem = function (item) {\r\n\t\tif (!this.canContain(item))\r\n\t\t\tthis.updateDimensions([item]);\r\n\t\treturn _addItem.call(this, item);\r\n\t};\r\n\r\n\tOctree.prototype.onVerticesMove = function (items) {\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tif (this.removeItem(items[i]))\r\n\t\t\t\tthis.addItem(items[i]);\r\n\t};\r\n\r\n\tOctree.prototype.updateDimensions = function (newItems) {\r\n\t\tvar allItems = this.getAllItems(newItems);\r\n\t\tthis.updateBounds(allItems);\r\n\t\tif (this.children) {\r\n\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tOctree.prototype.updateBounds = function (items) {\r\n\t\tvar max = [0, 0, 0].fill(-Number.MAX_VALUE);\r\n\t\tvar min = [0, 0, 0].fill(Number.MAX_VALUE);\r\n\t\tvar padding = this.options.padding;\r\n\t\titems.forEach(function (item) {\r\n\t\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\t\tmin[j] = Math.min(min[j], item[j] - padding);\r\n\t\t\t\tmax[j] = Math.max(max[j], item[j] + padding);\r\n\t\t\t}\r\n\t\t});\r\n\t\tvec3.copy(this.aabb.min, min);\r\n\t\tvec3.copy(this.aabb.max, max);\r\n\t};\r\n\r\n\tMath.Octree = Octree;\r\n\r\n\tfunction canContain (item, aabb) {\r\n\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\tif (item[j] < aabb.min[j]) return false;\r\n\t\t\tif (item[j] > aabb.max[j]) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction findContainingParent (current, item) {\r\n\t\tvar result = current;\r\n\t\twhile (result && !result.canContain(item))\r\n\t\t\tresult = result.parent;\r\n\t\treturn result;\r\n\t}\r\n})();\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Plane = function (point, normal) {\r\n        this.normal = normal || [0, 1, 0];\r\n        this.point = point || vec3.create();\r\n        vec3.normalize(this.normal, this.normal);\r\n    };\r\n\r\n    window.Math.Plane = Plane;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Ray = function (start, direction) {\r\n        this.direction = direction || [0, 0, 1];\r\n        this.start = start || vec3.create();\r\n        vec3.normalize(this.direction, this.direction);\r\n    };\r\n\r\n    Ray.fromPoints = function (a, b) {\r\n        var direction = vec3.create();\r\n        vec3.sub(direction, b, a);\r\n        return new Ray(a, direction);\r\n    };\r\n\r\n    window.Math.Ray = Ray;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-header', function (instance) {\r\n        instance.events.on('pane.create', function (pane) {\r\n            onCreateCallback(pane, instance);\r\n        });\r\n    }, ['pane-types']);\r\n\r\n    function onCreateCallback (pane, instance) {\r\n        var header = createHeader();\r\n        pane.appendChild(header);\r\n    }\r\n\r\n    function createHeader () {\r\n        var div = document.createElement('div');\r\n        div.className = 'pane-header';\r\n        return div;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-types', function (instance) {\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var oldType = oldPane.attrData('pane-type');\r\n            if (oldType) instance.pane.setType(newPane, oldType);\r\n        });\r\n\r\n        instance.pane.types = {};\r\n\r\n        instance.pane.setType = function (pane, name) {\r\n            if (this.types[name]) {\r\n                var typeCallbacks = this.types[name];\r\n                typeCallbacks.onPaneType(pane, instance);\r\n                var paneHeader = pane.querySelector('.pane-header');\r\n                typeCallbacks.onCreateHeader(paneHeader, instance);\r\n                pane.dataset.paneType = name;\r\n            }\r\n        };\r\n    }, ['pane']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane', function (instance) {\r\n        instance.events.on('app.loaded', function () {\r\n            instance.pane.internal = new Pane({\r\n                container: instance.options.container.selector,\r\n                separator: {\r\n                    size: 3\r\n                },\r\n                callbacks: {\r\n                    onPaneCreate: onPaneCreate,\r\n                    onPaneSplit: onPaneSplit,\r\n                    onPaneResize: onPaneResize,\r\n                    //onPaneMerge: onPaneMerge,\r\n                    //onPaneDestroy: onPaneDestroy,\r\n                }\r\n            });\r\n\r\n            var root = instance.pane.internal.container.querySelector('.pane');\r\n            instance.pane.setType(root, 'surface');\r\n        });\r\n\r\n        instance.pane = {};\r\n\r\n        function onPaneCreate (pane) {\r\n            instance.events.trigger('pane.create', pane);\r\n        }\r\n\r\n        function onPaneSplit (origin, newPane) {\r\n            instance.events.trigger('pane.split', origin, newPane);\r\n        }\r\n\r\n        function onPaneResize (pane) {\r\n            instance.events.trigger('pane.resize', pane);\r\n        }\r\n\r\n        function onPaneMerge (merger, toRemove) {\r\n            console.debug('onPaneMerge', merger, toRemove);\r\n        }\r\n\r\n        function onPaneDestroy (pane) {\r\n            console.debug('onPaneDestroy', pane);\r\n        }\r\n    });\r\n})());\r\n","(function () {\r\n    'use strict';\r\n\r\n    var EPSILON = 0.000001;\r\n\r\n    Math.geo = Math.geo || {};\r\n\r\n    Math.geo.rayFaceCollision = function (start, direction, vertices, result) {\r\n        var triangles = Math.geo.triangulateFace(vertices);\r\n        for (var i = 0; i < triangles.length; i++) {\r\n            var triangle = triangles[i];\r\n            if (Math.geo.rayTriangleCollision(start, direction,\r\n                triangle[0], triangle[1], triangle[2], result))\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Math.geo.rayTriangleCollision = function (start, direction, v1, v2, v3, result) {\r\n        result = result || [0, 0, 0];\r\n    \tvar triangleNormal = getNormal(v1, v2, v3);\r\n        if (Math.geo.rayPlaneCollision(start, direction, v1, triangleNormal, result)) {\r\n            var bary = getBarycentricCoordinates(v1, v2, v3, result);\r\n        \treturn (bary[0] <= 1 && bary[0] >= 0) &&\r\n                (bary[1] <= 1 && bary[1] >= 0) &&\r\n                (bary[2] <= 1 && bary[2] >= 0);\r\n        }\r\n    \treturn false;\r\n    };\r\n\r\n    Math.geo.rayPlaneCollision = function (start, direction, planePoint, planeNormal, result) {\r\n\t\tvar numer = vec3.dot(planePoint, planeNormal) -\r\n            vec3.dot(planeNormal, start);\r\n\t\tvar denom = vec3.dot(planeNormal, direction);\r\n\t\tif (Math.abs(denom) < EPSILON) return false;\r\n\t\tvar t = numer / denom;\r\n\t\tif (t < 0.0) return false;\r\n\t\tif (result) {\r\n            vec3.scale(result, direction, t);\r\n            vec3.add(result, start, result);\r\n        }\r\n\t\treturn true;\r\n    };\r\n\r\n    //TODO: refactor to reduce number of operations\r\n    Math.geo.rayAABBCollision = function (start, direction, minB, maxB, result) {\r\n        result = result || vec3.create();\r\n\r\n\t\tvar inside = true;\r\n\t\tvar quadrant = new Float32Array(3);\r\n\t\tvar i = 0|0;\r\n\t\tvar whichPlane;\r\n\t\tvar maxT = new Float32Array(3);\r\n\t\tvar candidatePlane = new Float32Array(3);\r\n\r\n\t\t/* Find candidate planes; this loop can be avoided if\r\n\t\trays cast all from the eye(assume perpsective view) */\r\n\t\tfor (i=0; i < 3; ++i)\r\n\t\t\tif(start[i] < minB[i]) {\r\n\t\t\t\tquadrant[i] = 1;\r\n\t\t\t\tcandidatePlane[i] = minB[i];\r\n\t\t\t\tinside = false;\r\n\t\t\t}else if (start[i] > maxB[i]) {\r\n\t\t\t\tquadrant[i] = 0;\r\n\t\t\t\tcandidatePlane[i] = maxB[i];\r\n\t\t\t\tinside = false;\r\n\t\t\t}else\t{\r\n\t\t\t\tquadrant[i] = 2;\r\n\t\t\t}\r\n\r\n\t\t/* Ray origin inside bounding box */\r\n\t\tif(inside)\t{\r\n\t\t\tvec3.copy(result, start);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/* Calculate T distances to candidate planes */\r\n\t\tfor (i = 0; i < 3; ++i)\r\n\t\t\tif (quadrant[i] !== 2 && direction[i] !== 0)\r\n\t\t\t\tmaxT[i] = (candidatePlane[i] - start[i]) / direction[i];\r\n\t\t\telse\r\n\t\t\t\tmaxT[i] = -1;\r\n\r\n\t\t/* Get largest of the maxT's for final choice of intersection */\r\n\t\twhichPlane = 0;\r\n\t\tfor (i = 1; i < 3; i++)\r\n\t\t\tif (maxT[whichPlane] < maxT[i])\r\n\t\t\t\twhichPlane = i;\r\n\r\n\t\t/* Check final candidate actually inside box */\r\n\t\tif (maxT[whichPlane] < 0) return false;\r\n\t\tif (maxT[whichPlane] > Number.MAX_VALUE) return false; //NOT TESTED\r\n\r\n\t\tfor (i = 0; i < 3; ++i)\r\n\t\t\tif (whichPlane != i) {\r\n\t\t\t\tresult[i] = start[i] + maxT[whichPlane] * direction[i];\r\n\t\t\t\tif (result[i] < minB[i] || result[i] > maxB[i])\r\n\t\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tresult[i] = candidatePlane[i];\r\n\t\t\t}\r\n\t\treturn true;\r\n    };\r\n\r\n    //TODO: refactor to reduce number of operations\r\n    Math.geo.closestPointsBetweenSegments = function (a0,a1, b0,b1, p_a, p_b) {\r\n\t\tvar u = vec3.subtract( vec3.create(), a1, a0 );\r\n\t\tvar v = vec3.subtract( vec3.create(), b1, b0 );\r\n\t\tvar w = vec3.subtract( vec3.create(), a0, b0 );\r\n\r\n\t\tvar a = vec3.dot(u,u);         // always >= 0\r\n\t\tvar b = vec3.dot(u,v);\r\n\t\tvar c = vec3.dot(v,v);         // always >= 0\r\n\t\tvar d = vec3.dot(u,w);\r\n\t\tvar e = vec3.dot(v,w);\r\n\t\tvar D = a*c - b*b;        // always >= 0\r\n\t\tvar sc, tc;\r\n\r\n\t\t// compute the line parameters of the two closest points\r\n\t\tif (D < EPSILON) {          // the lines are almost parallel\r\n\t\t\tsc = 0.0;\r\n\t\t\ttc = (b>c ? d/b : e/c);    // use the largest denominator\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsc = (b*e - c*d) / D;\r\n\t\t\ttc = (a*e - b*d) / D;\r\n\t\t}\r\n\r\n\t\t// get the difference of the two closest points\r\n\t\tif(p_a)\tvec3.add(p_a, a0, vec3.scale(vec3.create(),u,sc));\r\n\t\tif(p_b)\tvec3.add(p_b, b0, vec3.scale(vec3.create(),v,tc));\r\n\r\n\t\tvar dP = vec3.add( vec3.create(), w, vec3.subtract( vec3.create(), vec3.scale(vec3.create(),u,sc) , vec3.scale(vec3.create(),v,tc)) );  // =  L1(sc) - L2(tc)\r\n\t\treturn vec3.length(dP);   // return the closest distance\r\n\t};\r\n\r\n    Math.geo.rayPointDistance = function (start, direction, point) {\r\n        var aux = [0, 0, 0];\r\n        vec3.sub(aux, point, start);\r\n        vec3.cross(aux, direction, aux);\r\n        return vec3.len(aux);\r\n    };\r\n\r\n    Math.geo.pointPointDistance = function (p1, p2) {\r\n        var aux = [0, 0, 0];\r\n        vec3.sub(aux, p2, p1);\r\n        return vec3.len(aux);\r\n    };\r\n\r\n    Math.geo.triangulateFace = function (vertices) {\r\n        var triangulated = [];\r\n        for (var i = 0; i < vertices.length - 2; i++) {\r\n            triangulated.push([vertices[0], vertices[i + 1], vertices[i + 2]]);\r\n        }\r\n        return triangulated;\r\n    };\r\n\r\n    Math.geo.computePointsCenter = function (points) {\r\n        if (!points || points.length === 0) return null;\r\n        var center = [0, 0, 0];\r\n        points.forEach(function(point) {\r\n            vec3.add(center, center, point);\r\n        });\r\n        vec3.scale(center, center, 1 / points.length);\r\n        return center;\r\n    };\r\n\r\n    Math.geo.findClosestPointIndex = function (position, points) {\r\n        if (!points || !points.length) return null;\r\n        var distance = Math.geo.pointPointDistance(position, points[0]);\r\n        var closestIndex = 0;\r\n        for (var i = 1; i < points.length; i++) {\r\n            var newDistance = Math.geo.pointPointDistance(position, points[i]);\r\n            if (newDistance < distance) {\r\n                distance = newDistance;\r\n                closestIndex = i;\r\n            }\r\n        }\r\n        return closestIndex;\r\n    };\r\n\r\n    Math.geo.findClosestPoint = function (position, points) {\r\n        if (!points || !points.length) return null;\r\n        var index = Math.geo.findClosestPointIndex(position, points);\r\n        return points[index];\r\n    };\r\n\r\n    Math.geo.findClosestFace = function (position, faces) {\r\n        if (!faces || !faces.length) return null;\r\n        var centers = faces.map(function (face) {\r\n            return face.computeCenter();\r\n        });\r\n        var index = Math.geo.findClosestPointIndex(position, centers);\r\n        return faces[index];\r\n    };\r\n\r\n    function getBarycentricCoordinates (p1, p2, p3, point) {\r\n        var v0 = getVectorFromPoints(p1, p2);\r\n        var v1 = getVectorFromPoints(p1, p3);\r\n        var v2 = getVectorFromPoints(p1, point);\r\n\r\n    \tvar d00 = vec3.dot(v0, v0);\r\n    \tvar d01 = vec3.dot(v0, v1);\r\n    \tvar d11 = vec3.dot(v1, v1);\r\n    \tvar d20 = vec3.dot(v2, v0);\r\n    \tvar d21 = vec3.dot(v2, v1);\r\n    \tvar denom = d00 * d11 - d01 * d01;\r\n\r\n        var result = [(d11 * d20 - d01 * d21) / denom,\r\n            (d00 * d21 - d01 * d20) / denom, 0];\r\n        result[2] = 1 - result[0] - result[1];\r\n    \treturn result;\r\n    }\r\n\r\n    function getNormal (v1, v2, v3) {\r\n        var tmp1 = vec3.create();\r\n        var tmp2 = vec3.create();\r\n        vec3.sub(tmp1, v2, v1);\r\n        vec3.sub(tmp2, v3, v1);\r\n        vec3.cross(tmp1, tmp1, tmp2);\r\n        return tmp1;\r\n    }\r\n\r\n    function getVectorFromPoints (a, b) {\r\n        var output = vec3.create();\r\n        vec3.sub(output, b, a);\r\n        return output;\r\n    }\r\n})();\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('halfedge-cache', function (instance) {\r\n        var superConstructor = Math.HalfEdgeMesh;\r\n        var cachedHalfEdgeMesh = function () {\r\n            superConstructor.call(this);\r\n            var heMesh = this;\r\n            this.cache = {\r\n                meshes: {},\r\n                get: function (key) {\r\n                    var e = this.meshes[key];\r\n                    var builder = Math.HalfEdgeMesh.prototype.builders[key];\r\n                    if (!e) {\r\n                        e = builder.onCreate(heMesh);\r\n                        this.meshes[key] = e;\r\n                    }\r\n                    builder.onClean(e);\r\n                    return e;\r\n                },\r\n                onVerticesChange: function (vertices) {\r\n                    for (var key in this.meshes) {\r\n                        var e = this.meshes[key];\r\n                        var builder = Math.HalfEdgeMesh.prototype.builders[key];\r\n                        if (builder.onVerticesChange)\r\n                            builder.onVerticesChange(vertices, e);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        cachedHalfEdgeMesh.prototype = Object.create(Math.HalfEdgeMesh.prototype);\r\n        cachedHalfEdgeMesh.prototype.constructor = cachedHalfEdgeMesh;\r\n\r\n        Math.HalfEdgeMesh = cachedHalfEdgeMesh;\r\n\r\n        Math.HalfEdgeMesh.prototype.builders = {};\r\n        Math.HalfEdgeMesh.prototype.addBuilder = function (key, builder) {\r\n            this.builders[key] = builder;\r\n        };\r\n\r\n    }, ['halfedge']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('halfedge', function (instance) {\r\n        Math.HalfEdgeMesh = HalfEdgeMesh;\r\n    });\r\n\r\n    var HalfEdgeMesh = function () {\r\n        this.bounds = new Math.Octree();\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.addVertices = function (vertices) {\r\n        if (arguments.length > 1) this.addVertices.apply(this, arguments);\r\n        if (!Array.isArray(vertices)) return;\r\n        this.bounds.addItems(vertices);\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertex = vertices[i];\r\n            var index = this.vertices.indexOf(vertex);\r\n            if (index < 0) {\r\n                var _halfEdge = {};\r\n                _halfEdge.computeNormal = VertexComputeNormal;\r\n                _halfEdge.ownIndex = this.vertices.length;\r\n                _halfEdge.getFaces = VertexGetFaces;\r\n                _halfEdge.outEdges = [];\r\n                vertex._halfEdge = _halfEdge;\r\n                this.vertices.push(vertex);\r\n            } else {\r\n                console.error('addVertices: Adding vertex twice!', vertex);\r\n            }\r\n        }\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.addFace = function (vertices) {\r\n        if (arguments.length > 1) this.addFace.apply(this, arguments);\r\n        if (!Array.isArray(vertices)) return;\r\n        if (vertices.length >= 3) {\r\n            var he1 = buildEdge(vertices[0], vertices[1]);\r\n            var he2 = buildEdge(vertices[1], vertices[2], he1.face);\r\n            he1.next = he2;\r\n            this.halfEdges.push(he1, he2);\r\n            if (vertices.length >= 3) {\r\n                var last, prev = he2;\r\n                for (var i = 2; i < vertices.length - 1; i++) {\r\n                    last = buildEdge(vertices[i], vertices[i + 1], he1.face);\r\n                    if (!he2.next) he2.next = last;\r\n                    last.next = prev;\r\n                    this.halfEdges.push(last);\r\n                    prev = last;\r\n                }\r\n                last = buildEdge(vertices[i], vertices[0], he1.face);\r\n                last.next = he1;\r\n                this.halfEdges.push(last);\r\n                prev.next = last;\r\n            }\r\n            this.faces.push(he1.face);\r\n        } else {\r\n            console.error('addFace: 3 or more vertices needed to form a face!');\r\n        }\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.onVerticesChange = function (vertex) {\r\n        if (this.cache && this.cache.onVerticesChange)\r\n            this.cache.onVerticesChange(vertex);\r\n        this.bounds.onVerticesMove(vertex);\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.clear = function () {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    };\r\n\r\n    function buildEdge (start, end, face) {\r\n        var edge = {};\r\n        edge.vertex = end;\r\n        edge.face = face ? face : new HalfEdgeFace(edge);\r\n        edge.opposite = findOppositeEdge(start, end) || edge;\r\n        edge.next = null;\r\n        start._halfEdge.outEdges.push(edge);\r\n        return edge;\r\n    }\r\n\r\n    function findOppositeEdge(start, end) {\r\n        var opposites = end._halfEdge.outEdges.filter(function (he) {\r\n            return he.vertex === start;\r\n        });\r\n        return (opposites && opposites[0]) ? opposites[0] : null;\r\n    }\r\n\r\n    function VertexGetFaces () {\r\n        return this.outEdges.map(function (edge) {\r\n            return edge.face;\r\n        });\r\n    }\r\n\r\n    function VertexComputeNormal () {\r\n        var normal = [0, 0, 0];\r\n        this.getFaces().forEach(function (face) {\r\n            vec3.add(normal, normal, face.computeRawNormal());\r\n        });\r\n        vec3.normalize(normal, normal);\r\n        return normal;\r\n    }\r\n\r\n    var HalfEdgeFace = function (halfEdge) {\r\n        this.halfEdge = halfEdge;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getEdges = function () {\r\n        var output = [];\r\n        var he = this.halfEdge;\r\n        while (he.next !== this.halfEdge) {\r\n            output.push(he);\r\n            he = he.next;\r\n            if (he === null) {\r\n                var a = 0;\r\n                console.debug(this, a);\r\n            }\r\n        }\r\n        output.push(he);\r\n        return output;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getVertices = function () {\r\n        return this.getEdges().map(function (edge) {\r\n            return edge.vertex;\r\n        });\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getVerticesTriangulated = function () {\r\n        var triangulated = [];\r\n        var vertices = this.getVertices();\r\n        for (var i = 0; i < vertices.length - 2; i++) {\r\n            triangulated.push([vertices[0], vertices[i + 1], vertices[i + 2]]);\r\n        }\r\n        return triangulated;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeRawNormal = function () {\r\n        var normal = [0, 0, 0];\r\n        this.getVerticesTriangulated().forEach(function (triplet) {\r\n            var triangleNormal = computeNormal(triplet[0], triplet[1], triplet[2]);\r\n            vec3.add(normal, normal, triangleNormal);\r\n        });\r\n        return normal;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeNormal = function () {\r\n        var normal = this.computeRawNormal();\r\n        vec3.normalize(normal, normal);\r\n        return normal;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeCenter = function () {\r\n        return Math.geo.computePointsCenter(this.getVertices());\r\n    };\r\n\r\n    function computeNormal (v1, v2, v3) {\r\n        var tmp1 = vec3.create();\r\n        var tmp2 = vec3.create();\r\n        vec3.sub(tmp1, v2, v1);\r\n        vec3.sub(tmp2, v3, v1);\r\n        vec3.cross(tmp1, tmp1, tmp2);\r\n        return tmp1;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface', function (instance) {\r\n        instance.pane.types.surface = {\r\n            onPaneType: onSurfacePaneType,\r\n            onCreateHeader: onCreateSurfaceHeader\r\n        };\r\n\r\n        instance.events.on('pane.resize', function (pane) {\r\n            if (pane.attrData('pane-type') === 'surface')\r\n                updateCanvasSize(instance, pane);\r\n        });\r\n\r\n        window.addEventListener('resize', function (event) {\r\n            var surfaces = instance.pane.internal.container\r\n                .querySelectorAll('.pane canvas');\r\n            for (var i = 0; i < surfaces.length; i++) {\r\n                updateCanvasSize(instance, surfaces[i].parentNode);\r\n            }\r\n        });\r\n\r\n        instance.surface = {};\r\n    }, ['pane-types']);\r\n\r\n    var surfaceIndex = 0;\r\n    function onSurfacePaneType (pane, instance) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.id = 'surface' + (surfaceIndex++);\r\n        canvas.addEventListener('mouseover', function (event) {\r\n            event.target.focus();\r\n        });\r\n        canvas.className = 'surface';\r\n        pane.appendChild(canvas);\r\n\r\n        instance.surface.map = instance.surface.map || {};\r\n        instance.surface.map[canvas.id] = {\r\n            camera: new Math.Camera()\r\n        };\r\n\r\n        updateCanvasSize(instance, pane);\r\n\r\n        instance.events.trigger('surface.create', canvas);\r\n    }\r\n\r\n    function onCreateSurfaceHeader (header, instance) {\r\n        var label = document.createElement('label');\r\n        label.innerHTML = 'Surface Pane';\r\n        header.appendChild(label);\r\n    }\r\n\r\n    function updateCanvasSize (instance, pane) {\r\n        var canvas = pane.querySelector('canvas');\r\n        var context = canvas.getContext('2d');\r\n        var data = instance.surface.map[canvas.id];\r\n\r\n        var header = pane.querySelector('.pane-header');\r\n        var headerHeight = header ? header.height() : 0;\r\n\r\n        var width = pane.width(), height = pane.height() - headerHeight;\r\n        data.imgData = context.createImageData(width, height);\r\n        data.buffer = new Uint8Array(width * height * 4);\r\n\r\n        canvas.height = height;\r\n        canvas.width = width;\r\n\r\n        mat4.perspective(data.camera.projection, 45 * DEG2RAD, width / height, 0.1, 1000);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var originalRotation = null;\r\n    var mouseDownCoords = null;\r\n\r\n    Modules.prototype.add('common-interaction', function (instance) {\r\n        instance.surface.interactions.common = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n\r\n                var data = instance.surface.map[canvas.id];\r\n                data.camera.distance -= (delta * data.camera.distance) / 25;\r\n\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                if (event.target.dataset.moving) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n                    if (data) {\r\n                        var delta = getCoordsDelta(mouseDownCoords, realCoords);\r\n                        combine(data.camera, originalRotation, delta);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 3) {\r\n                    event.target.dataset.moving = 'true';\r\n                    upNormalMouseDown = vec3.equals(data.camera.getUpDirection(), [0, 1, 0]);\r\n                    originalRotation = data.camera.rotation.slice();\r\n                    mouseDownCoords = realCoords;\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 3) {\r\n                    delete event.target.dataset.moving;\r\n                    var data = instance.surface.map[event.target.id];\r\n                    mouseDownCoords = null;\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n    }, ['surface-interaction']);\r\n\r\n    var upNormalMouseDown = true;\r\n    function combine (surface, originalRotation, delta) {\r\n        if (!originalRotation) return;\r\n        if (!upNormalMouseDown) delta[0] = -delta[0];\r\n\r\n        var rotation = surface.rotation;\r\n        rotation[0] = originalRotation[0] + delta[0] * 0.005;\r\n        rotation[1] = originalRotation[1] + delta[1] * 0.005;\r\n        clampRotations(rotation);\r\n    }\r\n\r\n    function getCoordsDelta (initial, current) {\r\n        if (!initial) return [0, 0];\r\n        return [\r\n            initial[0] - current[0],\r\n            current[1] - initial[1]\r\n        ];\r\n    }\r\n\r\n    function clampRotations (rotations) {\r\n        var pi2 = Math.PI * 2;\r\n        if (rotations[0] < 0) rotations[0] = pi2 + rotations[0];\r\n        if (rotations[0] >= pi2) rotations[0] = rotations[0] - pi2;\r\n        if (rotations[1] < 0) rotations[1] = pi2 + rotations[1];\r\n        if (rotations[1] >= pi2) rotations[1] = rotations[1] - pi2;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('object-interaction', function (instance) {\r\n        instance.surface.interactions.object = {\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 1) {\r\n                    var ray = data.camera.getRay(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    var isHit = false, hitPoint = vec3.create();\r\n                    instance.scene.getObjects().forEach(function (node) {\r\n                        isHit = geo.testRayBBox(ray.start, ray.direction, node.data.mesh.bounding, node.data.model, hitPoint);\r\n                        if (isHit) {\r\n                            node.data.selected = true;\r\n                        } else delete node.data.selected;\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-interaction', function (instance) {\r\n        instance.surface.interactions = {};\r\n\r\n        instance.surface.setInteraction = function (surface, name) {\r\n            surface.dataset.interaction = name;\r\n        };\r\n\r\n        instance.surface.getInteractionCallbacks = function (surface) {\r\n            var interactionName = surface.dataset.interaction;\r\n            return instance.surface.interactions[interactionName];\r\n        };\r\n\r\n        instance.surface.onRender = function (canvas, surface) {\r\n            var keepRunning = true;\r\n            var callbacks = instance.surface.getInteractionCallbacks(canvas);\r\n            if (callbacks.onRender) keepRunning = callbacks.onRender(surface);\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                common.onRender(surface);\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            surface.tabIndex = 1000;\r\n\r\n            surface.oncontextmenu = onContextMenu;\r\n\r\n            surface.onkeydown = onSurfaceEvent;\r\n            surface.onkeyup = onSurfaceEvent;\r\n\r\n            surface.onmousewheel = onSurfaceEvent;\r\n            surface.onmousemove = onSurfaceEvent;\r\n            surface.onmousedown = onSurfaceEvent;\r\n            surface.onmouseup = onSurfaceEvent;\r\n            surface.onclick = onSurfaceEvent;\r\n        });\r\n\r\n        function onSurfaceEvent (event) {\r\n            var callbacks = instance.surface.getInteractionCallbacks(event.target);\r\n            var keepRunning = runCallback(callbacks, event);\r\n            if (keepRunning === undefined) keepRunning = true;\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                runCallback(common, event);\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var initialValue = oldPane.dataset.interaction;\r\n            newPane.dataset.interaction = initialValue;\r\n        });\r\n    }, ['surface']);\r\n\r\n    function runCallback (callbacks, event) {\r\n        var realCoords = getLocalCoordinates(event);\r\n        switch (event.type) {\r\n            case 'keydown': if (callbacks.onKeyDown) return callbacks.onKeyDown(event); break;\r\n            case 'keyup': if (callbacks.onKeyUp) return callbacks.onKeyUp(event); break;\r\n\r\n            case 'mousewheel': if (callbacks.onMouseWheel) return callbacks.onMouseWheel(event, realCoords); break;\r\n            case 'mousemove': if (callbacks.onMouseMove) return callbacks.onMouseMove(event, realCoords); break;\r\n            case 'mousedown': if (callbacks.onMouseDown) return callbacks.onMouseDown(event, realCoords); break;\r\n            case 'mouseup': if (callbacks.onMouseUp) return callbacks.onMouseUp(event, realCoords); break;\r\n            case 'click': if (callbacks.onClick) return callbacks.onClick(event, realCoords); break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getLocalCoordinates (event) {\r\n        return [event.layerX, event.layerY];\r\n    }\r\n\r\n    function onContextMenu (event) {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('render-solid-cache', function (instance) {\r\n        Math.HalfEdgeMesh.prototype.addBuilder('render-solid', solidBuilder);\r\n    }, ['halfedge-cache']);\r\n\r\n    var solidBuilder = {\r\n        onCreate: function (halfEdgeMesh) {\r\n            var buffers = {\r\n                vertices: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                normals: new Float32Array(halfEdgeMesh.vertices.length * 3)\r\n            };\r\n\r\n            var indices = [];\r\n            halfEdgeMesh.faces.forEach(function (face) {\r\n                var faceNormal = face.computeNormal();\r\n                face.getVerticesTriangulated().forEach(function (t) {\r\n                    indices.push(t[0]._halfEdge.ownIndex,\r\n                        t[1]._halfEdge.ownIndex, t[2]._halfEdge.ownIndex);\r\n                });\r\n            });\r\n            buffers.triangles = new Uint16Array(indices);\r\n            var mesh = GL.Mesh.load(buffers);\r\n            this.onVerticesChange(halfEdgeMesh.vertices, mesh);\r\n\r\n            return mesh;\r\n        },\r\n        onVerticesChange: function (vertices, mesh) {\r\n            var buffer = mesh.vertexBuffers;\r\n            for (var i = 0; i < vertices.length; i++) {\r\n                var vertex = vertices[i];\r\n                var index = vertex._halfEdge.ownIndex;\r\n                for (var j = 0; j < 3; j++)\r\n                    buffer.vertices.data[index * 3 + j] = vertex[j];\r\n                var normal = vertex._halfEdge.computeNormal();\r\n                for (j = 0; j < 3; j++)\r\n                    buffer.normals.data[index * 3 + j] = normal[j];\r\n            }\r\n            buffer.vertices.dirty = true;\r\n            buffer.normals.dirty = true;\r\n        },\r\n        onClean: function (mesh) {\r\n            if (mesh.vertexBuffers.vertices.dirty) {\r\n                mesh.vertexBuffers.vertices.upload();\r\n                delete mesh.vertexBuffers.vertices.dirty;\r\n            }\r\n            if (mesh.vertexBuffers.normals.dirty) {\r\n                mesh.vertexBuffers.normals.upload();\r\n                delete mesh.vertexBuffers.normals.dirty;\r\n            }\r\n        }\r\n    };\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var solidShader = null;\r\n    var wireframeShader = null;\r\n\r\n    Modules.prototype.add('render-solid', function (instance) {\r\n        instance.asset.shader.get('solid', function (s) {\r\n            solidShader = s;\r\n        });\r\n        instance.asset.shader.get('wireframe', function (s) {\r\n            wireframeShader = s;\r\n        });\r\n\r\n        var bounds = GL.Mesh.load({\r\n            vertices: new Float32Array([\r\n                0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, -0.5, 0.5, -0.5, -0.5, 0.5,\r\n                0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5, -0.5, -0.5, -0.5, -0.5, -0.5,\r\n            ]),\r\n            colors: new Float32Array([\r\n                0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1,\r\n                0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1\r\n            ]),\r\n            wireframe: new Uint16Array([\r\n                0, 1, 1, 3, 3, 2, 2, 0,\r\n                4, 5, 5, 7, 7, 6, 6, 4,\r\n                0, 4, 1, 5, 2, 6, 3, 7\r\n            ])\r\n        });\r\n        var grid = GL.Mesh.grid({lines:17,size:16});\r\n        var colorsArray = [];\r\n        grid.vertexBuffers.vertices.forEach(function (vertex, bufferIndex) {\r\n            colorsArray.push(0.4, 0.4, 0.4, 1);\r\n        });\r\n        grid.createVertexBuffer('colors', 'a_color', 4, new Float32Array(colorsArray));\r\n        var axisX = GL.Mesh.load({\r\n            vertices: new Float32Array([-8, 0.001, 0, 8, 0.001, 0]),\r\n            colors: new Float32Array([1, 0, 0, 1, 1, 0, 0, 1])\r\n        });\r\n        var axisZ = GL.Mesh.load({\r\n            vertices: new Float32Array([0, 0.001, -8, 0, 0.001, 8]),\r\n            colors: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1])\r\n        });\r\n\r\n        instance.surface.renders.solid = function (surface) {\r\n            var lightDirection = vec3.create();\r\n            surface.camera.getPosition(lightDirection);\r\n            vec3.add(lightDirection, lightDirection, [1, 2, 0]);\r\n            vec3.normalize(lightDirection, lightDirection);\r\n            uniforms.u_lightvector = lightDirection;\r\n\r\n            renderObject(surface, grid, wireframeShader, instance.graphics.gl.LINES);\r\n            renderObject(surface, axisX, wireframeShader, instance.graphics.gl.LINES);\r\n            renderObject(surface, axisZ, wireframeShader, instance.graphics.gl.LINES);\r\n            instance.scene.getObjects().forEach(function (node) {\r\n                var mesh = node.data.mesh.cache.get('render-solid');\r\n                renderBounds(surface, wireframeShader, bounds, node.data.mesh.bounds, instance.graphics.gl.LINES);\r\n                renderObject(surface, mesh, solidShader, node.data.primitive, node.data.model);\r\n            });\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setRender(surface, 'solid');\r\n        });\r\n    }, ['surface-render', 'shader', 'render-solid-cache']);\r\n\r\n    var uniforms = {\r\n        u_color: [0.5, 0.5, 0.5, 1],\r\n        u_lightvector: null,\r\n        u_model: null,\r\n        u_mvp: mat4.create()\r\n    };\r\n\r\n    var temp = mat4.create();\r\n    function renderObject (surface, mesh, shader, primitive, model, indexBufferName) {\r\n        model = model || mat4.create();\r\n\r\n        surface.camera.getViewMatrix(temp);\r\n        mat4.multiply(temp, surface.camera.projection, temp);\r\n        mat4.multiply(uniforms.u_mvp, temp, model);\r\n\r\n        uniforms.u_model = model;\r\n\r\n        if (shader) {\r\n            shader.uniforms(uniforms);\r\n            if (mesh instanceof Math.HalfEdgeMesh) {\r\n                if (mesh) shader.draw(mesh, primitive, indexBufferName);\r\n            } else {\r\n                shader.draw(mesh, primitive, indexBufferName);\r\n            }\r\n        }\r\n    }\r\n\r\n    var boundsModel = mat4.create();\r\n    function renderBounds (surface, shader, bounds, octree, primitive) {\r\n        updateBoundsModel(boundsModel, octree);\r\n        renderObject(surface, bounds, shader, primitive, boundsModel, 'wireframe');\r\n        if (octree.children)\r\n            for (var i = 0; i < octree.children.length; i++)\r\n                renderBounds(surface, shader, bounds, octree.children[i], primitive);\r\n    }\r\n\r\n    function updateBoundsModel (model, octree) {\r\n        mat4.identity(model);\r\n        var scale = [0, 0, 0], position = [0, 0, 0];\r\n        vec3.lerp(position, octree.aabb.min, octree.aabb.max, 0.5);\r\n        mat4.translate(model, model, position);\r\n        vec3.sub(scale, octree.aabb.max, octree.aabb.min);\r\n        mat4.scale(model, model, scale);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-render', function (instance) {\r\n        instance.surface.renders = {};\r\n\r\n        instance.surface.setRender = function (surface, name) {\r\n            surface.dataset.render = name;\r\n        };\r\n\r\n        instance.surface.getRender = function (surface) {\r\n            var renderName = surface.dataset.render;\r\n            return instance.surface.renders[renderName];\r\n        };\r\n\r\n        var panes = document.querySelectorAll('.pane');\r\n        for (var i = 0; i < panes.length; i++) {\r\n            if (panes[i].dataset.paneType == 'surface') {\r\n                var canvas = panes[i].querySelector('canvas');\r\n                canvas.dataset.render = 'solid';\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            newPane.attrData('surface-render', oldPane.attrData('surface-render'));\r\n        });\r\n    }, ['surface']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action-all', function (instance) {\r\n        instance.surface.interactions.edit.actions.all = {\r\n            init: function (context, event) {\r\n                if (!context.selection.isEmpty()) context.selection.clear();\r\n                else {\r\n                    var selection = context.selection;\r\n                    instance.scene.getObjects().forEach(function (object) {\r\n                        var result = selection.addAll(object.data);\r\n                        object.data.mesh.cache.onVerticesChange(result);\r\n                    });\r\n                }\r\n                context.action = null;\r\n            }\r\n        };\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action-move', function (instance) {\r\n        var initialCoords = vec2.create();\r\n\r\n        instance.surface.interactions.edit.actions.move = {\r\n            init: function (context, event) {\r\n                vec2.copy(initialCoords, context.lastCoords);\r\n                for (var name in context.selection.objects) {\r\n                    var selectedObj = context.selection.objects[name];\r\n                    for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                        var vertex = selectedObj.vertices[i];\r\n                        vertex.originalPosition = vertex.slice();\r\n                    }\r\n                }\r\n            },\r\n            onMouseMove: function (context, event) {\r\n                if (!context.selection.isEmpty()) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n\r\n                    var currentRay = data.camera.getRay(null, context.lastCoords,\r\n                        [canvas.width, canvas.height]);\r\n                    var initialRay = data.camera.getRay(null, initialCoords,\r\n                        [canvas.width, canvas.height]);\r\n                    var cameraDirection = data.camera.getDirection();\r\n\r\n                    var hitPointInitial = [0, 0, 0], hitPointCurrent = [0, 0, 0];\r\n\r\n                    var selectionCenter = context.selection.getCenter();\r\n                    Math.geo.rayPlaneCollision(currentRay.start, currentRay.direction,\r\n                        selectionCenter, cameraDirection, hitPointCurrent);\r\n                    Math.geo.rayPlaneCollision(initialRay.start, initialRay.direction,\r\n                        selectionCenter, cameraDirection, hitPointInitial);\r\n                    var delta = vec3.sub(vec3.create(), hitPointCurrent, hitPointInitial);\r\n\r\n                    if (context.isControlDown)\r\n                        for (var j = 0; j < 3; j++)\r\n                            delta[j] = Math.round(delta[j]);\r\n\r\n                    for (var name in context.selection.objects) {\r\n                        var hitPoint = [0, 0, 0];\r\n                        var selectedObj = context.selection.objects[name];\r\n                        var sceneObj = instance.scene.getObjectByName(name);\r\n\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            if (vertex.originalPosition)\r\n                                vec3.add(vertex, vertex.originalPosition, delta);\r\n                        }\r\n                        sceneObj.mesh.onVerticesChange(selectedObj.vertices);\r\n                    }\r\n                }\r\n            },\r\n            onMouseDown: function (context, event) {\r\n                if (event.which === 1 || event.which === 3) {\r\n                    var restore = event.which === 3;\r\n                    for (var name in context.selection.objects) {\r\n                        var selectedObj = context.selection.objects[name];\r\n                        var sceneObj = instance.scene.getObjectByName(name);\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            if (vertex.originalPosition) {\r\n                                if (restore)\r\n                                    vec3.copy(vertex, vertex.originalPosition);\r\n                                delete vertex.originalPosition;\r\n                            }\r\n                        }\r\n                        sceneObj.mesh.bounds.updateDimensions();\r\n                        sceneObj.mesh.onVerticesChange(sceneObj.mesh.vertices);\r\n                    }\r\n                }\r\n                context.action = null;\r\n            },\r\n            onMouseUp: function (context, event) {\r\n            }\r\n        };\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-render-cache', function (instance) {\r\n        Math.HalfEdgeMesh.prototype.addBuilder('edit-interaction-render-wireframe', wireframeBuilder);\r\n        Math.HalfEdgeMesh.prototype.addBuilder('edit-interaction-render-vertices', verticesBuilder);\r\n    }, ['edit-interaction', 'shader']);\r\n\r\n    var wireframeBuilder = {\r\n        onCreate: function (halfEdgeMesh) {\r\n            var buffers = {\r\n                vertices: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                colors: new Float32Array(halfEdgeMesh.vertices.length * 4)\r\n            };\r\n\r\n            var indices = [];\r\n            halfEdgeMesh.faces.forEach(function (face) {\r\n                face.getVertices().forEach(function (vertex, i, array) {\r\n                    var index = i >= array.length - 1 ? 0 : i + 1;\r\n                    indices.push(vertex._halfEdge.ownIndex);\r\n                    indices.push(array[index]._halfEdge.ownIndex);\r\n                });\r\n            });\r\n            buffers.lines = new Uint16Array(indices);\r\n            var mesh = GL.Mesh.load(buffers);\r\n            this.onVerticesChange(halfEdgeMesh.vertices, mesh);\r\n\r\n            return mesh;\r\n        },\r\n        onVerticesChange: function (vertices, mesh) {\r\n            var buffer = mesh.vertexBuffers;\r\n            for (var i = 0; i < vertices.length; i++) {\r\n                var vertex = vertices[i];\r\n                var index = vertex._halfEdge.ownIndex;\r\n                for (var j = 0; j < 3; j++)\r\n                    buffer.vertices.data[index * 3 + j] = vertex[j];\r\n                var color = vertex._selected ? [1, 0.4, 0.1, 1] : [0, 0, 0, 1];\r\n                for (j = 0; j < 4; j++)\r\n                    buffer.colors.data[index * 4 + j] = color[j];\r\n            }\r\n            buffer.vertices.dirty = true;\r\n            buffer.colors.dirty = true;\r\n        },\r\n        onClean: function (mesh) {\r\n            if (mesh.vertexBuffers.vertices.dirty) {\r\n                mesh.vertexBuffers.vertices.upload();\r\n                delete mesh.vertexBuffers.vertices.dirty;\r\n            }\r\n            if (mesh.vertexBuffers.colors.dirty) {\r\n                mesh.vertexBuffers.colors.upload();\r\n                delete mesh.vertexBuffers.colors.dirty;\r\n            }\r\n        }\r\n    };\r\n\r\n    var verticesBuilder = {\r\n        onCreate: function (halfEdgeMesh) {\r\n            var buffers = {\r\n                vertices: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                colors: new Float32Array(halfEdgeMesh.vertices.length * 4)\r\n            };\r\n\r\n            var mesh = GL.Mesh.load(buffers);\r\n            this.onVerticesChange(halfEdgeMesh.vertices, mesh);\r\n\r\n            return mesh;\r\n        },\r\n        onVerticesChange: function (vertices, mesh) {\r\n            var buffer = mesh.vertexBuffers;\r\n            for (var i = 0; i < vertices.length; i++) {\r\n                var vertex = vertices[i];\r\n                var index = vertex._halfEdge.ownIndex;\r\n                for (var j = 0; j < 3; j++)\r\n                    buffer.vertices.data[index * 3 + j] = vertex[j];\r\n                var color = vertex._selected ? [1, 0.4, 0.1, 1] : [0, 0, 0, 1];\r\n                for (j = 0; j < 4; j++)\r\n                    buffer.colors.data[index * 4 + j] = color[j];\r\n            }\r\n            buffer.vertices.dirty = true;\r\n            buffer.colors.dirty = true;\r\n        },\r\n        onClean: function (mesh) {\r\n            if (mesh.vertexBuffers.vertices.dirty) {\r\n                mesh.vertexBuffers.vertices.upload();\r\n                delete mesh.vertexBuffers.vertices.dirty;\r\n            }\r\n            if (mesh.vertexBuffers.colors.dirty) {\r\n                mesh.vertexBuffers.colors.upload();\r\n                delete mesh.vertexBuffers.colors.dirty;\r\n            }\r\n        }\r\n    };\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var shader = null;\r\n\r\n    Modules.prototype.add('edit-interaction-render', function (instance) {\r\n        instance.asset.shader.get('wireframe', function (s) {\r\n            shader = s;\r\n        });\r\n\r\n        var uniforms = {\r\n            u_mvp: mat4.create()\r\n        };\r\n\r\n        var temp = mat4.create();\r\n        instance.surface.interactions.edit.onRender = function (surface) {\r\n            instance.scene.getObjects().forEach(function (node) {\r\n                var obj = node.data;\r\n\r\n                surface.camera.getViewMatrix(temp);\r\n                mat4.multiply(temp, surface.camera.projection, temp);\r\n                mat4.multiply(uniforms.u_mvp, temp, obj.model);\r\n\r\n                if (shader) {\r\n                    shader.uniforms(uniforms);\r\n                    if (obj.mesh instanceof Math.HalfEdgeMesh) {\r\n                        var wireframe = obj.mesh.cache.get('edit-interaction-render-wireframe');\r\n                        var vertices = obj.mesh.cache.get('edit-interaction-render-vertices');\r\n                        shader.draw(wireframe, instance.graphics.gl.LINES);\r\n                        shader.draw(vertices, instance.graphics.gl.POINTS);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    }, ['edit-interaction', 'shader', 'edit-interaction-render-cache']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-selection', function (instance) {\r\n        instance.surface.interactions.edit.selection = {\r\n            objects: {},\r\n            addAll: function (object) {\r\n                var result = [];\r\n                var selection = this;\r\n                object.mesh.vertices.forEach(function (vertex) {\r\n                    toggleVertex(selection, object, vertex);\r\n                    result.push(vertex);\r\n                });\r\n                return result;\r\n            },\r\n            add: function (ray, object, camera) {\r\n                var position = camera.getPosition();\r\n                var selection = this;\r\n\r\n                var result = {\r\n                    vertex: null,\r\n                    face: null\r\n                };\r\n\r\n                var vertexSelectionMargin = camera.distance / 200;\r\n                var vertices = object.mesh.bounds.getCollidingItems(ray);\r\n                var rayVertices = vertices.filter(function (vertex) {\r\n                    return Math.geo.rayPointDistance(ray.start, ray.direction, vertex) <= vertexSelectionMargin;\r\n                });\r\n                var vertex = Math.geo.findClosestPoint(position, rayVertices);\r\n                if (vertex) result.vertex = vertex;\r\n\r\n                var uniqueFaces = getFacesFromVertices(vertices);\r\n                uniqueFaces = uniqueFaces.filter(function (face) {\r\n                    return Math.geo.rayFaceCollision(ray.start, ray.direction,\r\n                        face.getVertices());\r\n                });\r\n                var closestFace = Math.geo.findClosestFace(position, uniqueFaces);\r\n                if (closestFace) result.face = closestFace;\r\n\r\n                var vertexDistance = result.vertex ? Math.geo.pointPointDistance(position, result.vertex) : Number.MAX_VALUE;\r\n                var faceDistance = result.face ? Math.geo.pointPointDistance(position, result.face.computeCenter()) : Number.MAX_VALUE;\r\n\r\n                if (faceDistance > vertexDistance) {\r\n                    result.face = null;\r\n                    toggleVertex(selection, object, result.vertex);\r\n                } else {\r\n                    result.vertex = null;\r\n                    toggleFace(selection, object, result.face);\r\n                }\r\n\r\n                return result;\r\n            },\r\n            getCenter: function () {\r\n                var name = Object.keys(this.objects)[0];\r\n                return Math.geo.computePointsCenter(this.objects[name].vertices);\r\n            },\r\n            clear: function () {\r\n                for (var name in this.objects) {\r\n                    var selectedObj = this.objects[name];\r\n                    var sceneObj = instance.scene.getObjectByName(name);\r\n                    for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                        var vertex = selectedObj.vertices[i];\r\n                        if (vertex._selected)\r\n                            delete vertex._selected;\r\n                    }\r\n                    sceneObj.mesh.onVerticesChange(selectedObj.vertices);\r\n                }\r\n                this.objects = {};\r\n            },\r\n            isEmpty: function () {\r\n                return !Object.keys(this.objects).length;\r\n            }\r\n        };\r\n\r\n    }, ['edit-interaction']);\r\n\r\n    function toggleVertex (selection, object, vertex) {\r\n        if (vertex) {\r\n            if (toggle(selection, object, vertex, 'vertices')) {\r\n                vertex._selected = true;\r\n                vertex._halfEdge.getFaces().forEach(function (face) {\r\n                    var selectedVertices = selection.objects[object.name].vertices;\r\n                    var faceVertices = face.getVertices();\r\n                    var allSelected = true;\r\n                    faceVertices.forEach(function (vertex) {\r\n                        allSelected &= selectedVertices.includes(vertex);\r\n                    });\r\n                    if (allSelected && !face._selected)\r\n                        toggleFace(selection, object, face);\r\n                });\r\n            } else delete vertex._selected;\r\n        }\r\n    }\r\n\r\n    function toggleEdge (selection, object, edge) {\r\n        if (edge) {\r\n            if (toggle(selection, object, edge, 'edges')) {\r\n                edge._selected = true;\r\n            } else delete edge._selected;\r\n        }\r\n    }\r\n\r\n    function toggleFace (selection, object, face) {\r\n        if (face) {\r\n            if (toggle(selection, object, face, 'faces')) {\r\n                face._selected = true;\r\n                face.getVertices().forEach(function (vertex) {\r\n                    if (!vertex._selected)\r\n                        toggleVertex(selection, object, vertex);\r\n                });\r\n            } else delete face._selected;\r\n        }\r\n    }\r\n\r\n    function toggle (selection, object, item, arrayName) {\r\n        initObjectIfNeeded(selection, object);\r\n        var array = selection.objects[object.name][arrayName];\r\n        var index = array.indexOf(item);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n            delObjectIfNeeded(selection, object);\r\n            return false;\r\n        } else {\r\n            array.push(item);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function initObjectIfNeeded (selection, object) {\r\n        var name = object.name;\r\n        if (!selection.objects[name]) {\r\n            selection.objects[name] = {\r\n                faces: [],\r\n                edges: [],\r\n                vertices: []\r\n            };\r\n        }\r\n    }\r\n\r\n    function delObjectIfNeeded (selection, object) {\r\n        var name = object.name;\r\n        if (selection.objects[name]) {\r\n            var objSelection = selection.objects[name];\r\n            if (!objSelection.vertices.length &&\r\n                !objSelection.vertices.length &&\r\n                !objSelection.vertices.length)\r\n                delete selection.objects[name];\r\n        }\r\n    }\r\n\r\n    function getEdgesFromVertices (vertices) {\r\n        var edges = [];\r\n        vertices.forEach(function (vertex) {\r\n            vertex._halfEdge.outEdges.forEach(function (edge) {\r\n                if (edges.indexOf(edge) === -1)\r\n                    edges.push(edge);\r\n            });\r\n        });\r\n        return edges;\r\n    }\r\n\r\n    function getFacesFromVertices (vertices) {\r\n        var faces = [];\r\n        vertices.forEach(function (vertex) {\r\n            vertex._halfEdge.getFaces().forEach(function (face) {\r\n                if (faces.indexOf(face) === -1)\r\n                    faces.push(face);\r\n            });\r\n        });\r\n        return faces;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction', function (instance) {\r\n        var mouseDownCoords = vec2.create();\r\n\r\n        instance.surface.interactions.edit = {\r\n            actions: {},\r\n            action: null,\r\n            isMouseDown: false,\r\n            isShiftDown: false,\r\n            isControlDown: false,\r\n            lastCoords: [0, 0],\r\n            onMouseMove: function (event, realCoords) {\r\n                vec2.copy(this.lastCoords, realCoords);\r\n                if (this.isMouseDown && !this.action) {\r\n                    var delta2d = vec2.sub(vec2.create(), mouseDownCoords, realCoords);\r\n                    if (vec2.length(delta2d) > 5) this.setAction('move', event);\r\n                }\r\n                this.runAction('onMouseMove', event, realCoords);\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 1) this.isMouseDown = false;\r\n                this.runAction('onMouseUp', event, realCoords);\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                if (!this.action) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n\r\n                    if (event.which === 1) {\r\n                        this.isMouseDown = true;\r\n\r\n                        var ray = data.camera.getRay(null, realCoords,\r\n                            [canvas.width, canvas.height]);\r\n\r\n                        var selection = this.selection;\r\n                        var shiftDown = this.isShiftDown;\r\n                        instance.scene.getObjects().forEach(function (node) {\r\n                            if (!shiftDown) selection.clear();\r\n                            var result = selection.add(ray, node.data, data.camera);\r\n                            if (result.vertex)\r\n                                node.data.mesh.cache.onVerticesChange([result.vertex]);\r\n                            if (result.face)\r\n                                node.data.mesh.cache.onVerticesChange(result.face.getVertices());\r\n                        });\r\n                        return false;\r\n                    }\r\n                }\r\n                this.runAction('onMouseDown', event, realCoords);\r\n                return true;\r\n            },\r\n            onKeyDown: function (event, realCoords) {\r\n                this.isShiftDown = event.shiftKey;\r\n                this.isShiftDown = event.ctrlKey;\r\n                if (event.key === 'a') this.setAction('all', event);\r\n                else if (event.key === 'g') this.setAction('move', event);\r\n            },\r\n            onKeyUp: function (event, realCoords) {\r\n                this.isShiftDown = event.shiftKey;\r\n                this.isShiftDown = event.ctrlKey;\r\n            },\r\n            setAction: function (name, event) {\r\n                if (name && this.actions[name]) {\r\n                    this.action = name;\r\n                    this.runAction('init', event);\r\n                }\r\n            },\r\n            runAction : function (callbackName, event) {\r\n                if (this.action && this.actions[this.action]) {\r\n                    var callback = this.actions[this.action][callbackName];\r\n                    if (callback) callback(this, event);\r\n                }\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setInteraction(surface, 'edit');\r\n        });\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Graphics = function (instance) {\r\n        this.gl = GL.create({\r\n            height: screen.height,\r\n            width: screen.width\r\n        });\r\n        this.gl.animate();\r\n        this.gl.ondraw = function () {\r\n            var renderTargets = document.querySelectorAll('canvas');\r\n            for (var i = 0; i < renderTargets.length; i++)\r\n                drawRenderTarget(instance, renderTargets[i]);\r\n        };\r\n        this.gl.clearColor(0.349, 0.349, 0.349, 1);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n    };\r\n\r\n    Modules.prototype.add('graphics', function (instance) {\r\n        instance.graphics = new Graphics(instance);\r\n    });\r\n\r\n    function drawRenderTarget (instance, canvas) {\r\n        var data = instance.surface.map[canvas.id];\r\n        var gl = instance.graphics.gl;\r\n\r\n        var width  = canvas.clientWidth, height = canvas.clientHeight;\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.viewport(0, 0, width, height);\r\n\r\n        var mainRender = instance.surface.getRender(canvas);\r\n        if (mainRender) mainRender(data);\r\n        instance.surface.onRender(canvas, data);\r\n\r\n        var context = canvas.getContext('2d');\r\n        if (context) {\r\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data.buffer);\r\n            data.imgData.data.set(data.buffer);\r\n            context.putImageData(data.imgData, 0, 0);\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var objectCount = 0;\r\n\r\n    Modules.prototype.add('scene', function (instance) {\r\n        instance.scene = TreeNode.extend();\r\n\r\n        instance.scene.addObject = function (info) {\r\n            if (!info.primitive) info.primitive = instance.graphics.gl.TRIANGLES;\r\n            if (!info.model) info.model = mat4.create();\r\n            if (!info.type) info.type = 'object';\r\n            if (!info.name) info.name = 'object_' + (objectCount++);\r\n            this.add(info);\r\n        };\r\n\r\n        instance.scene.getObjectByName = function (name) {\r\n            return getObjectByName(this, name);\r\n        };\r\n\r\n        instance.scene.getObjects = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'object';\r\n            });\r\n        };\r\n\r\n        instance.asset.mesh.get('monkey', function (mesh) {\r\n            instance.scene.addObject({mesh: mesh});\r\n        });\r\n    }, ['graphics']);\r\n\r\n    function getObjectByName (rootNode, name) {\r\n        for (var i = 0; i < rootNode.children.length; i++) {\r\n            var child = rootNode.children[i];\r\n            if (child.data.name === name) {\r\n                return child.data;\r\n            } else {\r\n                var node = getObjectByName(child, name);\r\n                if (node) return node.data;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n})());\r\n"]}