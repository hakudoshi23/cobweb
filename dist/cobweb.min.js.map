{"version":3,"sources":["ajax.js","array.js","html.js","obj.js","tree.js","events.js","logger.js","cobweb.js","modules.js","math/camera.js","math/plane.js","math/ray.js","pane/pane-header.js","pane/pane-types.js","pane/panes.js","math/halfEdge/halfEdge-cube.js","math/halfEdge/halfEdge-face.js","math/halfEdge/halfEdge-mesh.js","math/halfEdge/halfEdge.js","pane/surface/surface.js","pane/surface/interaction/common-interaction.js","pane/surface/interaction/edit-interaction.js","pane/surface/interaction/object-interaction.js","pane/surface/interaction/surface-interaction.js","pane/surface/render/render-solid.js","pane/surface/render/surface-render.js","graphic.js","scene.js"],"names":["ajax","options","Object","assign","defaultAjaxOptions","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","success","response","error","method","params","objToParams","data","urlWithParams","url","open","async","send","get","Ajax","getJSON","JSON","parse","post","obj","key","nextParam","encodeURIComponent","slice","window","safeExtend","prototype","property","value","Array","a","concat","i","length","j","splice","callback","s4","Math","floor","random","toString","substring","HTMLElement","oldClassNames","newClassNames","arguments","className","trim","replace","split","unique","join","queryClassNames","currentClassNames","index","name","indexOf","removeClassNames","removeEach","forEach","attr","__data_cache","WeakMap","elAttrs","undefined","set","setAttribute","getAttribute","removeAttribute","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","matches","document","ownerDocument","querySelectorAll","item","query","parentElement","current","clientHeight","style","height","clientWidth","width","guid","overlap","querySelector","newObj","hasOwnProperty","clone","target","varArgs","TypeError","to","nextSource","nextKey","call","defaults","TreeNode","parent","children","isRoot","add","child","constructor","push","remove","dfs","check","out","bfs","extend","_TreeNode","create","EventHandler","isDebug","listeners","trigger","console","debug","apply","on","off","array","reset","own","keys","Logger","instance","handlers","addHandler","level","ALL","args","DEBUG","INFO","info","WARNING","warn","ERROR","log","warning","tmp","levelHandlers","handler","removeHandler","NONE","defaultOptions","container","selector","Cobweb","Error","addClass","logger","events","modules","Modules","onLoadedAll","names","topologicalSort","sortedNames","module","dependencies","depName","nextName","candidates","getInitialCandidates","dependant","dependantName","allDependenciesMet","loadedUntilNow","runCallback","callbacks","isFunction","all","init","ex","dependencyModule","moduleName","Camera","center","rotation","distance","projection","mat4","getViewMatrix","view","eye","getCameraPosition","lookAt","getUpDirection","vec3","rotateX","rotateY","getCameraDirection","direction","sub","normalize","getRayFromCamera","ray","canvasCoords","canvasSize","Ray","start","auxMat","multiply","invert","transformMat4","up","vRotation","PI","Plane","point","normal","fromPoints","b","onCreateCallback","pane","header","createHeader","appendChild","div","createElement","oldPane","newPane","oldType","attrData","setType","types","typeCallbacks","onPaneType","paneHeader","onCreateHeader","dataset","paneType","onPaneCreate","onPaneSplit","origin","onPaneResize","internal","Pane","separator","size","root","cube","mesh","HalfEdgeMesh","vhandle","addVertices","face_vhandles","addFace","HalfEdgeCube","computeNormal","v1","v2","v3","tmp1","tmp2","cross","HalfEdgeFace","halfEdge","getEdges","output","he","next","getVertices","map","edge","vertex","getVerticesTriangulated","triangulated","vertices","computeRawNormal","triplet","triangleNormal","VertexGetFaces","outEdges","face","VertexComputeNormal","getFaces","halfEdges","faces","isArray","ownIndex","he1","HalfEdge","he2","last","prev","onVertexChange","buffer","vertexBuffers","onVertexChangeIndex","indices","clear","getMesh","gl","buffers","Float32Array","triangles","ts","Uint16Array","GL","Mesh","load","end","opposite","findOpposite","opposites","filter","onSurfacePaneType","canvas","id","surfaceIndex","surface","camera","updateCanvasSize","onCreateSurfaceHeader","label","innerHTML","context","getContext","headerHeight","imgData","createImageData","Uint8Array","perspective","DEG2RAD","addEventListener","event","surfaces","parentNode","combine","originalRotation","delta","upNormalMouseDown","clampRotations","getCoordsDelta","initial","rotations","pi2","mouseDownCoords","interactions","common","onMouseWheel","realCoords","max","min","wheelDelta","detail","onMouseMove","moving","onMouseDown","which","equals","onMouseUp","onClick","edit","isHit","hitPoint","scene","getObjects","node","geo","testRayBBox","bounding","model","selected","setInteraction","object","getLocalCoordinates","type","layerX","layerY","onSurfaceEvent","getInteractionCallbacks","keepRunning","onContextMenu","preventDefault","interaction","interactionName","oncontextmenu","onmousewheel","onmousemove","onmousedown","onmouseup","onclick","initialValue","renderObject","shader","temp","uniforms","u_mvp","u_color","u_model","draw","primitive","firstSource","grid","Shader","graphics","LINES","lines","renders","solid","lightDirection","u_lightvector","setRender","render","getRender","renderName","panes","drawRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","readPixels","RGBA","UNSIGNED_BYTE","putImageData","Graphics","screen","animate","ondraw","renderTargets","clearColor","enable","DEPTH_TEST","TRIANGLES","color","intensity","getLights"],"mappings":"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","file":"cobweb.min.js","sourcesContent":["((function(){\r\n    'use strict';\r\n\r\n    var defaultAjaxOptions = {\r\n        method: 'GET',\r\n        url: '',\r\n        data: {},\r\n        async: true,\r\n        success: null,\r\n        error: null\r\n    };\r\n\r\n    function ajax (options) {\r\n        options = Object.assign({}, defaultAjaxOptions, options);\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200) {\r\n                    if (options.success) options.success(this.response);\r\n                } else {\r\n                    if (options.error) error.success(this.response);\r\n                }\r\n            }\r\n        };\r\n        if (options.method === 'GET') {\r\n            var params = objToParams(options.data);\r\n            var urlWithParams = options.url + (params ? '?' + params : '');\r\n            xhttp.open(options.method, urlWithParams, options.async);\r\n            xhttp.send();\r\n        } else if (options.method === 'POST') {\r\n            xhttp.open(options.method, options.url, options.async);\r\n            xhttp.send(options.data);\r\n        }\r\n        return xhttp;\r\n    }\r\n\r\n    function get (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function getJSON (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: function (response) {\r\n                success(JSON.parse(response));\r\n            },\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function post (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'POST'\r\n        });\r\n    }\r\n\r\n    window.Ajax = {\r\n        ajax: ajax,\r\n        get: get,\r\n        getJSON: getJSON,\r\n        post: post\r\n    };\r\n\r\n    function objToParams (obj) {\r\n        var params = '';\r\n        for (var key in obj) {\r\n            var nextParam = key + '=' + encodeURIComponent(obj[key]);\r\n            params += '&' + nextParam;\r\n        }\r\n        return params.slice(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Array.prototype, 'unique', function() {\r\n        var a = this.concat();\r\n        for(var i = 0; i < a.length; ++i)\r\n            for(var j = i + 1; j < a.length; ++j)\r\n                if(a[i] === a[j]) a.splice(j--, 1);\r\n        return a;\r\n    });\r\n\r\n    safeExtend(Array.prototype, 'forEach', function(callback) {\r\n        for (var i = 0; i < this.length; i++)\r\n            callback(this[i], i, this);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(HTMLElement.prototype, 'addClass', function () {\r\n        var oldClassNames, newClassNames;\r\n        for(var i in arguments){\r\n            oldClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            newClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            this.className = oldClassNames.concat(newClassNames).unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'hasClass', function () {\r\n        var queryClassNames, currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n        for(var i in arguments){\r\n            queryClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            for (var index = 0; index < queryClassNames.length; index++) {\r\n                var name = queryClassNames[index];\r\n                if (currentClassNames.indexOf(name) == -1)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'removeClass', function () {\r\n        var index = 0, currentClassNames, removeClassNames;\r\n        var removeEach = function (name) {\r\n            index = currentClassNames.indexOf(name);\r\n            if (index != -1)\r\n                currentClassNames.splice(index, 1);\r\n        };\r\n        for(var i in arguments){\r\n            currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames.forEach(removeEach);\r\n            this.className = currentClassNames.unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'data', function (attr, value) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        var elAttrs = window.__data_cache.get(this) || {};\r\n        if (value !== undefined) {\r\n            elAttrs[attr] = value;\r\n            window.__data_cache.set(this, elAttrs);\r\n        } else {\r\n            if (attr) return elAttrs && elAttrs[attr];\r\n            else return elAttrs;\r\n        }\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'setData', function (data) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        window.__data_cache.set(this, data);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attr', function (name, value) {\r\n        if (value !== undefined)\r\n            this.setAttribute(name, value);\r\n        else if (value === null)\r\n            this.removeAttribute(name);\r\n        else\r\n            return this.getAttribute(name);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attrData', function (name, value) {\r\n        return this.attr('data-' + name, value);\r\n    });\r\n\r\n    safeExtend(Element.prototype, 'matches',\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;\r\n        }\r\n    );\r\n\r\n    safeExtend(HTMLElement.prototype, 'parent', function (query) {\r\n        if (!query) return this.parentElement;\r\n        var current = this.parentElement;\r\n        while (!current.matches(query))\r\n            current = current.parentElement;\r\n        return current;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'height', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.height = value + 'px';\r\n            else\r\n                this.style.height = value;\r\n        } else\r\n            return this.clientHeight;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'width', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.width = value + 'px';\r\n            else\r\n                this.style.width = value;\r\n        } else\r\n            return this.clientWidth;\r\n    });\r\n\r\n    safeExtend(window, 'guid', function () {\r\n        return 'GUID-' + s4() + '-' + s4() + '-' + s4();\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'guid', function () {\r\n        var guid = null, overlap = null;\r\n        do {\r\n            guid = window.guid();\r\n            overlap = document.querySelector('#' + guid);\r\n        } while(overlap);\r\n        this.attr('id', guid);\r\n        return guid;\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16).substring(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Object, 'clone', function (obj) {\r\n        var newObj = {};\r\n        for (var property in obj)\r\n            if (obj.hasOwnProperty(property)) {\r\n                var value = obj[property];\r\n                if (typeof value === 'object')\r\n                    newObj[property] = Object.clone(obj[property]);\r\n                else\r\n                    newObj[property] = obj[property];\r\n            }\r\n        return newObj;\r\n    });\r\n\r\n    safeExtend(Object, 'assign', function(target, varArgs) {\r\n        if (target === null)\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        var to = Object(target);\r\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n            if (nextSource !== null) {\r\n                for (var nextKey in nextSource) {\r\n                    if (hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return to;\r\n    });\r\n\r\n    safeExtend(Object, 'extend', function(options, defaults) {\r\n        return Object.assign({}, defaults, options);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var TreeNode = function (parent, data) {\r\n        this.parent = parent || null;\r\n        this.data = data || {};\r\n        this.children = [];\r\n    };\r\n\r\n    window.TreeNode = TreeNode;\r\n\r\n    TreeNode.prototype.isRoot = function () {\r\n        return !this.parent;\r\n    };\r\n\r\n    TreeNode.prototype.add = function (data) {\r\n        var child = new this.constructor(this, data);\r\n        this.children.push(child);\r\n        return child;\r\n    };\r\n\r\n    TreeNode.prototype.remove = function (index) {\r\n        this.children.slice(index, 1);\r\n        return this;\r\n    };\r\n\r\n    TreeNode.prototype.dfs = function (check) {\r\n        var out = [];\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n            out.concat(this.children[i].dfs(check));\r\n        }\r\n        return out;\r\n    };\r\n\r\n    TreeNode.prototype.bfs = function (check) {\r\n        var out = [], i;\r\n        for (i = 0; i < this.children.length; i++)\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n        for (i = 0; i < this.children.length; i++)\r\n            out.concat(this.children[i].bfs(check));\r\n        return out;\r\n    };\r\n\r\n    TreeNode.extend = function () {\r\n        var _TreeNode = function (parent, data) {\r\n            TreeNode.call(this, parent, data);\r\n        };\r\n        _TreeNode.prototype = Object.create(TreeNode.prototype);\r\n        _TreeNode.prototype.constructor = _TreeNode;\r\n        return new _TreeNode();\r\n    };\r\n})());\r\n","((function() {\r\n    'use strict';\r\n\r\n    var EventHandler = function (isDebug) {\r\n        this.isDebug = !!isDebug;\r\n        this.listeners = {};\r\n    };\r\n\r\n    EventHandler.prototype.trigger = function() {\r\n        var name = arguments[0];\r\n        var listeners = this.listeners[name] || [];\r\n        Array.prototype.splice.call(arguments, 0, 1);\r\n        if (this.isDebug) console.debug(name, arguments);\r\n        for (var i = 0; i < listeners.length; i++)\r\n            listeners[i].apply(null, arguments);\r\n    };\r\n\r\n    EventHandler.prototype.on = function(name, callback) {\r\n        if (!this.listeners[name]) this.listeners[name] = [];\r\n        this.listeners[name].push(callback);\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name) {\r\n        delete this.listeners[name];\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name, callback) {\r\n        if (this.listeners[name]) {\r\n            var array = this.listeners[name];\r\n            if (array.indexOf(callback) > -1) array.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    EventHandler.prototype.reset = function() {\r\n        var own = this;\r\n        Object.keys(this.listeners).forEach(function(key) {\r\n            delete own.listeners[key];\r\n        });\r\n    };\r\n\r\n    window.EventHandler = EventHandler;\r\n})());\r\n","/* jshint loopfunc:true */\r\n\r\n((function(){\r\n    'use strict';\r\n\r\n    var Logger = function (instance) {\r\n        this.handlers = [];\r\n\r\n        this.addHandler(this.level.ALL, function (level, args) {\r\n            if (Logger.prototype.level.DEBUG === level) {\r\n                console.debug.apply(this, args);\r\n            } else if (Logger.prototype.level.INFO === level) {\r\n                console.info.apply(this, args);\r\n            } else if (Logger.prototype.level.WARNING === level) {\r\n                console.warn.apply(this, args);\r\n            } else if (Logger.prototype.level.ERROR === level) {\r\n                console.error.apply(this, args);\r\n            }\r\n        });\r\n    };\r\n\r\n    Logger.prototype.debug = function () {\r\n        this.log(Logger.prototype.level.DEBUG, arguments);\r\n    };\r\n\r\n    Logger.prototype.info = function () {\r\n        this.log(Logger.prototype.level.INFO, arguments);\r\n    };\r\n\r\n    Logger.prototype.warning = function () {\r\n        this.log(Logger.prototype.level.WARNING, arguments);\r\n    };\r\n\r\n    Logger.prototype.error = function () {\r\n        this.log(Logger.prototype.level.ERROR, arguments);\r\n    };\r\n\r\n    Logger.prototype.log = function (level, args) {\r\n        var tmp = level;\r\n        var levelHandlers = this.handlers[tmp] || [];\r\n        while (tmp >= 0) {\r\n            levelHandlers.forEach(function (handler) {\r\n                handler(level, args);\r\n            });\r\n            levelHandlers = this.handlers[--tmp] || [];\r\n        }\r\n    };\r\n\r\n    Logger.prototype.addHandler = function (level, callback) {\r\n        if (!this.handlers[level])\r\n            this.handlers[level] = [];\r\n        this.handlers[level].push(callback);\r\n    };\r\n\r\n    Logger.prototype.removeHandler = function (level, callback) {\r\n        var levelHandlers = this.handlers[level];\r\n        if (levelHandlers) {\r\n            var index = levelHandlers.indexOf(callback);\r\n            if (index > -1)\r\n                levelHandlers.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    Logger.prototype.level = {\r\n        ALL: 0,\r\n        DEBUG: 1,\r\n        INFO: 2,\r\n        WARNING: 3,\r\n        ERROR: 4,\r\n        NONE: 5,\r\n    };\r\n\r\n    window.Logger = Logger;\r\n})());\r\n","(function(){\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        container: {\r\n            selector: '#cobweb',\r\n            className: 'cb-container'\r\n        }\r\n    };\r\n\r\n    var Cobweb = function (options) {\r\n        this.options = Object.assign({}, defaultOptions, options);\r\n        var instance = this;\r\n\r\n\r\n        this.container = document.querySelector(this.options.container.selector);\r\n        if (!this.container)\r\n            throw new Error('Invalid container selector: \\'' +\r\n                this.options.container.selector + '\\'');\r\n        this.container.addClass(this.options.container.className);\r\n        this.container.data('instance', this);\r\n\r\n        this.logger = new Logger(this, true);\r\n        this.events = new EventHandler(true);\r\n        this.modules = new Modules([this], {\r\n            onLoadedAll: function (names) {\r\n                instance.events.trigger('modules.loaded.all', names);\r\n                instance.events.trigger('app.loaded');\r\n            }\r\n        });\r\n    };\r\n\r\n    window.Cobweb = Cobweb;\r\n}());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Modules = function (params, callbacks) {\r\n        callbacks = callbacks || {};\r\n        var modules = Modules.prototype.all;\r\n        try {\r\n            var sortedNames = topologicalSort(modules);\r\n            for (var i = 0; i < sortedNames.length; i++ ) {\r\n                var name = sortedNames[i];\r\n                var module = modules[name];\r\n                try {\r\n                    module.init.apply(this, params);\r\n                    runCallback(callbacks, 'onLoaded', [name, module]);\r\n                } catch (ex) {\r\n                    console.error('Error loading module:', name, ex);\r\n                    runCallback(callbacks, 'onError', [ex, name, module]);\r\n                }\r\n            }\r\n            runCallback(callbacks, 'onLoadedAll', [sortedNames]);\r\n        } catch (ex) {\r\n            console.error('Error loading modules:', ex);\r\n        }\r\n    };\r\n\r\n    Modules.prototype.all = {};\r\n    Modules.prototype.add = function (name, init, dependencies) {\r\n        dependencies = dependencies || [];\r\n\r\n        var dependant = [];\r\n        var dependencyModule, i;\r\n        for (var moduleName in this.all) {\r\n            var module = this.all[moduleName];\r\n            for (i = 0; i < module.dependencies.length; i++)\r\n                if (module.dependencies[i] === name)\r\n                    dependant.push(moduleName);\r\n        }\r\n        for (i = 0; i < dependencies.length; i++) {\r\n            dependencyModule = this.all[dependencies[i]];\r\n            if (dependencyModule) dependencyModule.dependant.push(name);\r\n        }\r\n\r\n        this.all[name] = {\r\n            dependencies: dependencies,\r\n            dependant: dependant,\r\n            init: init\r\n        };\r\n    };\r\n\r\n    window.Modules = Modules;\r\n\r\n    function topologicalSort (modules) {\r\n        var sortedNames = [];\r\n\r\n        var module = null, i = 0;\r\n        for (var name in modules) {\r\n            module = modules[name];\r\n            for (i = 0; i < module.dependencies.length; i++) {\r\n                var depName = module.dependencies[i];\r\n                if (!modules[depName])\r\n                    throw new Error('Missing module: ' + depName);\r\n            }\r\n        }\r\n\r\n        var nextName = null;\r\n        var candidates = getInitialCandidates(modules);\r\n        while (candidates.length > 0) {\r\n            nextName = candidates.splice(0, 1)[0];\r\n            module = modules[nextName];\r\n            if (module) {\r\n                sortedNames.push(nextName);\r\n                for (i = 0; i < module.dependant.length; i++) {\r\n                    var dependantName = module.dependant[i];\r\n                    if (allDependenciesMet(sortedNames, modules[dependantName]))\r\n                        candidates.push(dependantName);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Object.keys(modules).length !== sortedNames.length)\r\n            throw new Error('Dependency cycle!');\r\n\r\n        return sortedNames;\r\n    }\r\n\r\n    function getInitialCandidates (modules) {\r\n        var candidates = [];\r\n        for (var name in modules)\r\n            if (modules[name].dependencies.length === 0)\r\n                candidates.push(name);\r\n        return candidates;\r\n    }\r\n\r\n    function allDependenciesMet (loadedUntilNow, module) {\r\n        for (var i = 0; i < module.dependencies.length; i++)\r\n            if (loadedUntilNow.indexOf(module.dependencies[i]) === -1) return false;\r\n        return true;\r\n    }\r\n\r\n    function runCallback (callbacks, name, params) {\r\n        var callback = callbacks[name];\r\n        var isFunction = typeof callback === 'function';\r\n        if (isFunction) callback.apply(null, params);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Camera = function (center, rotation, distance) {\r\n        this.center = center || [0, 0, 0];\r\n        this.rotation = rotation || [-0.5, -0.5];\r\n        this.distance = distance || 12;\r\n        this.projection = mat4.create();\r\n    };\r\n\r\n    Camera.prototype.getViewMatrix = function (view) {\r\n        view = view || mat4.create();\r\n        var eye = [0, 0, 0];\r\n        this.getCameraPosition(eye);\r\n        mat4.lookAt(view, eye, this.center, this.getUpDirection());\r\n        return view;\r\n    };\r\n\r\n    Camera.prototype.getCameraPosition = function (eye) {\r\n        eye = eye || vec3.create();\r\n        vec3.set(eye, 0, 0, -this.distance);\r\n        vec3.rotateX(eye, eye, this.rotation[1]);\r\n        vec3.rotateY(eye, eye, -this.rotation[0]);\r\n        return eye;\r\n    };\r\n\r\n    Camera.prototype.getCameraDirection = function (direction) {\r\n        direction = direction || vec3.create();\r\n        var eye = this.getCameraPosition();\r\n        vec3.sub(direction, this.center, eye);\r\n        vec3.normalize(direction, direction);\r\n        return direction;\r\n    };\r\n\r\n    Camera.prototype.getRayFromCamera = function (ray, canvasCoords, canvasSize) {\r\n        ray = ray || new Math.Ray();\r\n        this.getCameraPosition(ray.start);\r\n        vec3.set(ray.direction, canvasCoords[0] / (canvasSize[0] * 0.5) - 1.0,\r\n            canvasCoords[1] / (canvasSize[1] * 0.5) - 1.0, 1);\r\n        var auxMat = mat4.create();\r\n        mat4.multiply(auxMat, this.projection, this.getViewMatrix());\r\n        mat4.invert(auxMat, auxMat);\r\n        vec3.transformMat4(ray.direction, ray.direction, auxMat);\r\n        vec3.normalize(ray.direction, ray.direction);\r\n        return ray;\r\n    };\r\n\r\n    Camera.prototype.getUpDirection = function (up) {\r\n        up = up || vec3.create();\r\n        var vRotation = this.rotation[1];\r\n        if (vRotation >= Math.PI / 2 &&\r\n            vRotation <= ((Math.PI * 3) / 2))\r\n            vec3.set(up, 0, -1, 0);\r\n        else vec3.set(up, 0, 1, 0);\r\n        return up;\r\n    };\r\n\r\n    window.Math.Camera = Camera;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Plane = function (point, normal) {\r\n        this.normal = normal || [0, 1, 0];\r\n        this.point = point || vec3.create();\r\n        vec3.normalize(this.normal, this.normal);\r\n    };\r\n\r\n    window.Math.Plane = Plane;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Ray = function (start, direction) {\r\n        this.direction = direction || [0, 0, 1];\r\n        this.start = start || vec3.create();\r\n        vec3.normalize(this.direction, this.direction);\r\n    };\r\n\r\n    Ray.fromPoints = function (a, b) {\r\n        var direction = vec3.create();\r\n        vec3.sub(direction, b, a);\r\n        return new Ray(a, direction);\r\n    };\r\n\r\n    window.Math.Ray = Ray;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-header', function (instance) {\r\n        instance.events.on('pane.create', function (pane) {\r\n            onCreateCallback(pane, instance);\r\n        });\r\n    }, ['pane-types']);\r\n\r\n    function onCreateCallback (pane, instance) {\r\n        var header = createHeader();\r\n        pane.appendChild(header);\r\n    }\r\n\r\n    function createHeader () {\r\n        var div = document.createElement('div');\r\n        div.className = 'pane-header';\r\n        return div;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-types', function (instance) {\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var oldType = oldPane.attrData('pane-type');\r\n            if (oldType) instance.pane.setType(newPane, oldType);\r\n        });\r\n\r\n        instance.pane.types = {};\r\n\r\n        instance.pane.setType = function (pane, name) {\r\n            if (this.types[name]) {\r\n                var typeCallbacks = this.types[name];\r\n                typeCallbacks.onPaneType(pane, instance);\r\n                var paneHeader = pane.querySelector('.pane-header');\r\n                typeCallbacks.onCreateHeader(paneHeader, instance);\r\n                pane.dataset.paneType = name;\r\n            }\r\n        };\r\n    }, ['pane']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane', function (instance) {\r\n        instance.events.on('app.loaded', function () {\r\n            instance.pane.internal = new Pane({\r\n                container: instance.options.container.selector,\r\n                separator: {\r\n                    size: 3\r\n                },\r\n                callbacks: {\r\n                    onPaneCreate: onPaneCreate,\r\n                    onPaneSplit: onPaneSplit,\r\n                    onPaneResize: onPaneResize,\r\n                    //onPaneMerge: onPaneMerge,\r\n                    //onPaneDestroy: onPaneDestroy,\r\n                }\r\n            });\r\n\r\n            var root = instance.pane.internal.container.querySelector('.pane');\r\n            instance.pane.setType(root, 'surface');\r\n        });\r\n\r\n        instance.pane = {};\r\n\r\n        function onPaneCreate (pane) {\r\n            instance.events.trigger('pane.create', pane);\r\n        }\r\n\r\n        function onPaneSplit (origin, newPane) {\r\n            instance.events.trigger('pane.split', origin, newPane);\r\n        }\r\n\r\n        function onPaneResize (pane) {\r\n            instance.events.trigger('pane.resize', pane);\r\n        }\r\n\r\n        function onPaneMerge (merger, toRemove) {\r\n            console.debug('onPaneMerge', merger, toRemove);\r\n        }\r\n\r\n        function onPaneDestroy (pane) {\r\n            console.debug('onPaneDestroy', pane);\r\n        }\r\n    });\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('math-halfEdge-cube', function (instance) {\r\n        function cube () {\r\n            var mesh = new Math.HalfEdgeMesh();\r\n\r\n            var vhandle = [];\r\n            vhandle[0] = [-1, -1,  1];\r\n            vhandle[1] = [ 1, -1,  1];\r\n            vhandle[2] = [ 1,  1,  1];\r\n            vhandle[3] = [-1,  1,  1];\r\n            vhandle[4] = [-1, -1, -1];\r\n            vhandle[5] = [ 1, -1, -1];\r\n            vhandle[6] = [ 1,  1, -1];\r\n            vhandle[7] = [-1,  1, -1];\r\n            mesh.addVertices(vhandle);\r\n\r\n            var face_vhandles = [];\r\n            face_vhandles.push(vhandle[0]);\r\n            face_vhandles.push(vhandle[1]);\r\n            face_vhandles.push(vhandle[2]);\r\n            face_vhandles.push(vhandle[3]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[7]);\r\n            face_vhandles.push(vhandle[6]);\r\n            face_vhandles.push(vhandle[5]);\r\n            face_vhandles.push(vhandle[4]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[1]);\r\n            face_vhandles.push(vhandle[0]);\r\n            face_vhandles.push(vhandle[4]);\r\n            face_vhandles.push(vhandle[5]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[2]);\r\n            face_vhandles.push(vhandle[1]);\r\n            face_vhandles.push(vhandle[5]);\r\n            face_vhandles.push(vhandle[6]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[3]);\r\n            face_vhandles.push(vhandle[2]);\r\n            face_vhandles.push(vhandle[6]);\r\n            face_vhandles.push(vhandle[7]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[0]);\r\n            face_vhandles.push(vhandle[3]);\r\n            face_vhandles.push(vhandle[7]);\r\n            face_vhandles.push(vhandle[4]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            return mesh;\r\n        }\r\n\r\n        Math.HalfEdgeCube = cube;\r\n    }, ['math-halfEdgeMesh']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('math-halfEdge-face', function (instance) {\r\n        var HalfEdgeFace = function (halfEdge) {\r\n            this.halfEdge = halfEdge;\r\n        };\r\n\r\n        HalfEdgeFace.prototype.getEdges = function () {\r\n            var output = [];\r\n            var he = this.halfEdge;\r\n            while (he.next !== this.halfEdge) {\r\n                output.push(he);\r\n                he = he.next;\r\n            }\r\n            output.push(he);\r\n            return output;\r\n        };\r\n\r\n        HalfEdgeFace.prototype.getVertices = function () {\r\n            return this.getEdges().map(function (edge) {\r\n                return edge.vertex;\r\n            });\r\n        };\r\n\r\n        HalfEdgeFace.prototype.getVerticesTriangulated = function () {\r\n            var triangulated = [];\r\n            var vertices = this.getVertices();\r\n            for (var i = 0; i < vertices.length - 2; i++) {\r\n                triangulated.push([vertices[0], vertices[i + 1], vertices[i + 2]]);\r\n            }\r\n            return triangulated;\r\n        };\r\n\r\n        HalfEdgeFace.prototype.computeRawNormal = function () {\r\n            var normal = [0, 0, 0];\r\n            this.getVerticesTriangulated().forEach(function (triplet) {\r\n                var triangleNormal = computeNormal(triplet[0], triplet[1], triplet[2]);\r\n                vec3.add(normal, normal, triangleNormal);\r\n            });\r\n            return normal;\r\n        };\r\n\r\n        HalfEdgeFace.prototype.computeNormal = function () {\r\n            var normal = this.computeRawNormal();\r\n            vec3.normalize(normal, normal);\r\n            return normal;\r\n        };\r\n\r\n        Math.HalfEdgeFace = HalfEdgeFace;\r\n    });\r\n\r\n    function computeNormal (v1, v2, v3) {\r\n        var tmp1 = vec3.create();\r\n        var tmp2 = vec3.create();\r\n        vec3.sub(tmp1, v2, v1);\r\n        vec3.sub(tmp2, v3, v1);\r\n        vec3.cross(tmp1, tmp1, tmp2);\r\n        return tmp1;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('math-halfEdgeMesh', function (instance) {\r\n        var HalfEdgeMesh = function () {\r\n            this.halfEdges = [];\r\n            this.vertices = [];\r\n            this.faces = [];\r\n\r\n            this.mesh = null;\r\n        };\r\n\r\n        HalfEdgeMesh.prototype.addVertices = function (vertices) {\r\n            if (arguments.length > 1) this.addVertices.apply(this, arguments);\r\n            if (!Array.isArray(vertices)) return;\r\n            for (var i = 0; i < vertices.length; i++) {\r\n                var vertex = vertices[i];\r\n                var index = this.vertices.indexOf(vertex);\r\n                if (index < 0) {\r\n                    vertex.computeNormal = VertexComputeNormal;\r\n                    vertex.ownIndex = this.vertices.length;\r\n                    vertex.getFaces = VertexGetFaces;\r\n                    vertex.outEdges = [];\r\n                    this.vertices.push(vertex);\r\n                } else {\r\n                    console.error('addVertices: Adding vertex twice!', vertex);\r\n                }\r\n            }\r\n        };\r\n\r\n        HalfEdgeMesh.prototype.addFace = function (vertices) {\r\n            if (arguments.length > 1) this.addFace.apply(this, arguments);\r\n            if (!Array.isArray(vertices)) return;\r\n            if (vertices.length >= 3) {\r\n                var he1 = new Math.HalfEdge(vertices[0], vertices[1]);\r\n                var he2 = new Math.HalfEdge(vertices[1], vertices[2], he1.face);\r\n                he1.next = he2;\r\n                this.halfEdges.push(he1, he2);\r\n                if (vertices.length > 3) {\r\n                    var last, prev = he2;\r\n                    for (var i = 2; i < vertices.length - 1; i++) {\r\n                        last = new Math.HalfEdge(vertices[i], vertices[i + 1], he1.face);\r\n                        if (!he2.next) he2.next = last;\r\n                        last.next = prev;\r\n                        this.halfEdges.push(last);\r\n                        prev = last;\r\n                    }\r\n                    last = new Math.HalfEdge(vertices[i], vertices[0], he1.face);\r\n                    last.next = he1;\r\n                    this.halfEdges.push(last);\r\n                    prev.next = last;\r\n                }\r\n                this.faces.push(he1.face);\r\n            } else {\r\n                console.error('addFace: 3 or more vertices needed to form a face!');\r\n            }\r\n        };\r\n\r\n        HalfEdgeMesh.prototype.onVertexChange = function (vertices) {\r\n            if (arguments.length > 1) this.onVertexChange.apply(this, arguments);\r\n            if (this.mesh !== null) {\r\n                for (var i = 0; i < vertices.length; i++) {\r\n                    var vertex = vertices[i];\r\n                    var buffer = this.mesh.vertexBuffers.vertices.data;\r\n                    buffer[vertex.ownIndex * 3 + 0] = vertex[0];\r\n                    buffer[vertex.ownIndex * 3 + 1] = vertex[1];\r\n                    buffer[vertex.ownIndex * 3 + 2] = vertex[2];\r\n                }\r\n            }\r\n        };\r\n\r\n        HalfEdgeMesh.prototype.onVertexChangeIndex = function (indices) {\r\n            if (arguments.length > 1) this.onVertexChangeIndex.apply(this, arguments);\r\n            var vertices = this.vertices;\r\n            this.onVertexChange(indices.map(function (index) {\r\n                return vertices[index];\r\n            }));\r\n        };\r\n\r\n        HalfEdgeMesh.prototype.clear = function () {\r\n            this.halfEdges = [];\r\n            this.vertices = [];\r\n            this.faces = [];\r\n        };\r\n\r\n        HalfEdgeMesh.prototype.getMesh = function (gl) {\r\n            if (this.mesh === null) {\r\n                var buffers = {};\r\n\r\n                buffers.vertices = new Float32Array(this.vertices.length * 3);\r\n                for (var i = 0; i < this.vertices.length; i++) {\r\n                    buffers.vertices[i * 3 + 0] = this.vertices[i][0];\r\n                    buffers.vertices[i * 3 + 1] = this.vertices[i][1];\r\n                    buffers.vertices[i * 3 + 2] = this.vertices[i][2];\r\n                }\r\n\r\n                var triangles = [];\r\n                for (i = 0; i < this.faces.length; i++) {\r\n                    var ts = this.faces[i].getVerticesTriangulated();\r\n                    for (var j = 0; j < ts.length; j++) {\r\n                        triangles.push(ts[j][0].ownIndex,\r\n                            ts[j][1].ownIndex, ts[j][2].ownIndex);\r\n                    }\r\n                }\r\n                buffers.triangles = new Uint16Array(triangles);\r\n                this.mesh = GL.Mesh.load(buffers);\r\n            }\r\n            return this.mesh;\r\n        };\r\n\r\n        Math.HalfEdgeMesh = HalfEdgeMesh;\r\n    }, ['math-halfEdge']);\r\n\r\n    function VertexGetFaces () {\r\n        return this.outEdges.map(function (edge) {\r\n            return edge.face;\r\n        });\r\n    }\r\n\r\n    function VertexComputeNormal () {\r\n        var normal = [0, 0, 0];\r\n        this.getFaces().forEach(function (face) {\r\n            vec3.add(normal, normal, face.computeRawNormal());\r\n        });\r\n        vec3.normalize(normal, normal);\r\n        return normal;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('math-halfEdge', function (instance) {\r\n        var HalfEdge = function (start, end, face) {\r\n            this.vertex = end;\r\n            start.outEdges.push(this);\r\n            this.opposite = this.findOpposite(start);\r\n            if (this.opposite) this.opposite.opposite = this;\r\n            this.face = face ? face : new Math.HalfEdgeFace(this);\r\n            this.next = null;\r\n        };\r\n\r\n        HalfEdge.prototype.findOpposite = function (start) {\r\n            var opposites = this.vertex.outEdges.filter(function (he) {\r\n                return he.vertex === start;\r\n            });\r\n            return (opposites && opposites[0]) ? opposites[0] : null;\r\n        };\r\n\r\n        Math.HalfEdge = HalfEdge;\r\n    }, ['math-halfEdge-face']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n    \r\n    Modules.prototype.add('surface', function (instance) {\r\n        instance.pane.types.surface = {\r\n            onPaneType: onSurfacePaneType,\r\n            onCreateHeader: onCreateSurfaceHeader\r\n        };\r\n\r\n        instance.events.on('pane.resize', function (pane) {\r\n            if (pane.attrData('pane-type') === 'surface')\r\n                updateCanvasSize(instance, pane);\r\n        });\r\n\r\n        window.addEventListener('resize', function (event) {\r\n            var surfaces = instance.pane.internal.container\r\n                .querySelectorAll('.pane canvas');\r\n            for (var i = 0; i < surfaces.length; i++) {\r\n                updateCanvasSize(instance, surfaces[i].parentNode);\r\n            }\r\n        });\r\n\r\n        instance.surface = {};\r\n    }, ['pane-types']);\r\n\r\n    var surfaceIndex = 0;\r\n    function onSurfacePaneType (pane, instance) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.id = 'surface' + (surfaceIndex++);\r\n        canvas.className = 'surface';\r\n        pane.appendChild(canvas);\r\n\r\n        instance.surface.map = instance.surface.map || {};\r\n        instance.surface.map[canvas.id] = {\r\n            camera: new Math.Camera()\r\n        };\r\n\r\n        updateCanvasSize(instance, pane);\r\n\r\n        instance.events.trigger('surface.create', canvas);\r\n    }\r\n\r\n    function onCreateSurfaceHeader (header, instance) {\r\n        var label = document.createElement('label');\r\n        label.innerHTML = 'Surface Pane';\r\n        header.appendChild(label);\r\n    }\r\n\r\n    function updateCanvasSize (instance, pane) {\r\n        var canvas = pane.querySelector('canvas');\r\n        var context = canvas.getContext('2d');\r\n        var data = instance.surface.map[canvas.id];\r\n\r\n        var header = pane.querySelector('.pane-header');\r\n        var headerHeight = header ? header.height() : 0;\r\n\r\n        var width = pane.width(), height = pane.height() - headerHeight;\r\n        data.imgData = context.createImageData(width, height);\r\n        data.buffer = new Uint8Array(width * height * 4);\r\n\r\n        canvas.height = height;\r\n        canvas.width = width;\r\n\r\n        mat4.perspective(data.camera.projection, 45 * DEG2RAD, width / height, 0.1, 1000);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var originalRotation = null;\r\n    var mouseDownCoords = null;\r\n\r\n    Modules.prototype.add('common-interaction', function (instance) {\r\n        instance.surface.interactions.common = {\n            onMouseWheel: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n                delta /= 2;\r\n\r\n                var data = instance.surface.map[canvas.id];\r\n                data.camera.distance -= delta;\r\n                data.camera.distance = Math.max(data.camera.distance, 0);\r\n\r\n                return true;\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                if (event.target.dataset.moving) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n                    if (data) {\r\n                        var delta = getCoordsDelta(mouseDownCoords, realCoords);\r\n                        combine(data.camera, originalRotation, delta);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 3) {\r\n                    event.target.dataset.moving = 'true';\r\n                    upNormalMouseDown = vec3.equals(data.camera.getUpDirection(), [0, 1, 0]);\r\n                    originalRotation = data.camera.rotation.slice();\r\n                    mouseDownCoords = realCoords;\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 3) {\r\n                    delete event.target.dataset.moving;\r\n                    var data = instance.surface.map[event.target.id];\r\n                    mouseDownCoords = null;\r\n                }\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n    }, ['surface-interaction']);\r\n\r\n    var upNormalMouseDown = true;\r\n    function combine (surface, originalRotation, delta) {\r\n        if (!originalRotation) return;\r\n        if (!upNormalMouseDown) delta[0] = -delta[0];\r\n\r\n        var rotation = surface.rotation;\r\n        rotation[0] = originalRotation[0] + delta[0] * 0.005;\r\n        rotation[1] = originalRotation[1] + delta[1] * 0.005;\r\n        clampRotations(rotation);\r\n    }\r\n\r\n    function getCoordsDelta (initial, current) {\r\n        if (!initial) return [0, 0];\r\n        return [\r\n            initial[0] - current[0],\r\n            initial[1] - current[1]\r\n        ];\r\n    }\r\n\r\n    function clampRotations (rotations) {\r\n        var pi2 = Math.PI * 2;\r\n        if (rotations[0] < 0) rotations[0] = pi2 + rotations[0];\r\n        if (rotations[0] >= pi2) rotations[0] = rotations[0] - pi2;\r\n        if (rotations[1] < 0) rotations[1] = pi2 + rotations[1];\r\n        if (rotations[1] >= pi2) rotations[1] = rotations[1] - pi2;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction', function (instance) {\r\n        instance.surface.interactions.edit = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 1) {\r\n                    var ray = data.camera.getRayFromCamera(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    var isHit = false, hitPoint = vec3.create();\r\n                    instance.scene.getObjects().forEach(function (node) {\r\n                        isHit = geo.testRayBBox(ray.start, ray.direction, node.data.mesh.bounding, node.data.model, hitPoint);\r\n                        if (isHit) {\r\n                            node.data.selected = true;\r\n                        } else delete node.data.selected;\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setInteraction(surface, 'edit');\r\n        });\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('object-interaction', function (instance) {\r\n        instance.surface.interactions.object = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 1) {\r\n                    var ray = data.camera.getRayFromCamera(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    var isHit = false, hitPoint = vec3.create();\r\n                    instance.scene.getObjects().forEach(function (node) {\r\n                        isHit = geo.testRayBBox(ray.start, ray.direction, node.data.mesh.bounding, node.data.model, hitPoint);\r\n                        if (isHit) {\r\n                            node.data.selected = true;\r\n                        } else delete node.data.selected;\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-interaction', function (instance) {\r\n        instance.surface.interactions = {};\r\n\r\n        instance.surface.setInteraction = function (surface, name) {\r\n            surface.dataset.interaction = name;\r\n        };\r\n\r\n        instance.surface.getInteractionCallbacks = function (surface) {\r\n            var interactionName = surface.dataset.interaction;\r\n            return instance.surface.interactions[interactionName];\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            surface.oncontextmenu = onContextMenu;\r\n            surface.onmousewheel = onSurfaceEvent;\r\n            surface.onmousemove = onSurfaceEvent;\r\n            surface.onmousedown = onSurfaceEvent;\r\n            surface.onmouseup = onSurfaceEvent;\r\n            surface.onclick = onSurfaceEvent;\r\n        });\r\n\r\n        function onSurfaceEvent (event) {\r\n            var callbacks = instance.surface.getInteractionCallbacks(event.target);\r\n            var keepRunning = runCallback(callbacks, event);\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                runCallback(common, event);\r\n            }\r\n        }\r\n\r\n        function onContextMenu (event) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var initialValue = oldPane.dataset.interaction;\r\n            newPane.dataset.interaction = initialValue;\r\n        });\r\n    }, ['surface']);\r\n\r\n    function runCallback (callbacks, event) {\r\n        var realCoords = getLocalCoordinates(event);\r\n        switch (event.type) {\r\n            case 'mousewheel': return callbacks.onMouseWheel(event, realCoords);\r\n            case 'mousemove': return callbacks.onMouseMove(event, realCoords);\r\n            case 'mousedown': return callbacks.onMouseDown(event, realCoords);\r\n            case 'mouseup': return callbacks.onMouseUp(event, realCoords);\r\n            case 'click': return callbacks.onClick(event, realCoords);\r\n        }\r\n    }\r\n\r\n    function getLocalCoordinates (event) {\r\n        return [event.layerX, event.layerY];\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('render-solid', function (instance) {\r\n        var shader = null;\r\n        var firstSource = null;\r\n        var vertSource = Ajax.get('shader/solid.vert', function (response) {\r\n            if (firstSource) {\r\n                shader = new Shader(response, firstSource);\r\n            } firstSource = response;\r\n        });\r\n        var fragSource = Ajax.get('shader/solid.frag', function (response) {\r\n            if (firstSource) {\r\n                shader = new Shader(firstSource, response);\r\n            } firstSource = response;\r\n        });\r\n\r\n        var grid = {\r\n            type: 'object',\r\n            primitive: instance.graphics.gl.LINES,\r\n            mesh: GL.Mesh.grid({\r\n                lines: 17,\r\n                size: 8\r\n            }),\r\n            model: mat4.create(),\r\n        };\r\n\r\n        instance.surface.renders.solid = function (surface) {\r\n            var lightDirection = vec3.create();\r\n            surface.camera.getCameraPosition(lightDirection);\r\n            vec3.add(lightDirection, lightDirection, [1, 2, 0]);\r\n            vec3.normalize(lightDirection, lightDirection);\r\n            uniforms.u_lightvector = lightDirection;\r\n\r\n            renderObject(surface, grid, shader);\r\n            instance.scene.getObjects().forEach(function (node) {\r\n                renderObject(surface, node.data, shader);\r\n            });\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setRender(surface, 'solid');\r\n        });\r\n    }, ['surface-render']);\r\n\r\n    var uniforms = {\r\n        u_color: [0.7, 0.7, 0.7, 1],\r\n        u_lightvector: null,\r\n        u_model: null,\r\n        u_mvp: mat4.create()\r\n    };\r\n\r\n    var temp = mat4.create();\r\n    function renderObject (surface, obj, shader) {\r\n        surface.camera.getViewMatrix(temp);\r\n        mat4.multiply(temp, surface.camera.projection, temp);\r\n        mat4.multiply(uniforms.u_mvp, temp, obj.model);\r\n\r\n        uniforms.u_color = obj.selected ? [1,0,0,1] : [0.7, 0.7, 0.7, 1];\r\n\r\n        uniforms.u_model = obj.model;\r\n\r\n        if (shader) {\r\n            shader.uniforms(uniforms);\r\n            if (obj.mesh instanceof Math.HalfEdgeMesh) {\r\n                var mesh = obj.mesh.getMesh();\r\n                shader.draw(mesh, obj.primitive);\r\n            } else {\r\n                shader.draw(obj.mesh, obj.primitive);\r\n            }\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-render', function (instance) {\r\n        instance.surface.renders = {};\r\n\r\n        instance.surface.setRender = function (surface, name) {\r\n            surface.dataset.render = name;\r\n        };\r\n\r\n        instance.surface.getRender = function (surface) {\r\n            var renderName = surface.dataset.render;\r\n            return instance.surface.renders[renderName];\r\n        };\r\n\r\n        var panes = document.querySelectorAll('.pane');\r\n        for (var i = 0; i < panes.length; i++) {\r\n            if (panes[i].dataset.paneType == 'surface') {\r\n                var canvas = panes[i].querySelector('canvas');\r\n                canvas.dataset.render = 'solid';\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            newPane.attrData('surface-render', oldPane.attrData('surface-render'));\r\n        });\r\n    }, ['surface']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Graphics = function (instance) {\r\n        this.gl = GL.create({\r\n            height: screen.height,\r\n            width: screen.width\r\n        });\r\n        this.gl.animate();\r\n        this.gl.ondraw = function () {\r\n            var renderTargets = document.querySelectorAll('canvas');\r\n            for (var i = 0; i < renderTargets.length; i++)\r\n                drawRenderTarget(instance, renderTargets[i]);\r\n        };\r\n        this.gl.clearColor(0.349, 0.349, 0.349, 1);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n    };\r\n\r\n    Modules.prototype.add('graphics', function (instance) {\r\n        instance.graphics = new Graphics(instance);\r\n    });\r\n\r\n    function drawRenderTarget (instance, canvas) {\r\n        var data = instance.surface.map[canvas.id];\r\n        var gl = instance.graphics.gl;\r\n\r\n        var width  = canvas.clientWidth, height = canvas.clientHeight;\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.viewport(0, 0, width, height);\r\n\r\n        var render = instance.surface.getRender(canvas);\r\n        if (render) render(data);\r\n\r\n        var context = canvas.getContext('2d');\r\n        if (context) {\r\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data.buffer);\r\n            data.imgData.data.set(data.buffer);\r\n            context.putImageData(data.imgData, 0, 0);\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('scene', function (instance) {\r\n        instance.scene = TreeNode.extend();\r\n\r\n        instance.scene.add({\r\n            type: 'object',\r\n            primitive: instance.graphics.gl.TRIANGLES,\r\n            mesh: Math.HalfEdgeCube(),\r\n            model: mat4.create(),\r\n        });\r\n        instance.scene.add({\r\n            type: 'light',\r\n            color: [1, 1, 1],\r\n            intensity: 1\r\n        });\r\n\r\n        instance.scene.getObjects = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'object';\r\n            });\r\n        };\r\n\r\n        instance.scene.getLights = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'light';\r\n            });\r\n        };\r\n    }, ['graphics', 'math-halfEdge-cube']);\r\n})());\r\n"]}