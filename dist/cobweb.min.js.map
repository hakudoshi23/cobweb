{"version":3,"sources":["ajax.js","array.js","html.js","obj.js","tree.js","events.js","logger.js","cobweb.js","modules.js","asset/mesh.js","asset/shader.js","math/camera.js","math/octree.js","math/plane.js","math/ray.js","pane/pane-header.js","pane/pane-types.js","pane/panes.js","math/geometry/geometry.js","math/halfEdge/halfedge-cache.js","math/halfEdge/halfedge.js","pane/surface/surface.js","pane/surface/interaction/common-interaction.js","pane/surface/interaction/object-interaction.js","pane/surface/interaction/surface-interaction.js","pane/surface/render/render-solid-cache.js","pane/surface/render/render-solid.js","pane/surface/render/surface-render.js","pane/surface/interaction/edit/edit-interaction-action-all.js","pane/surface/interaction/edit/edit-interaction-action-delete.js","pane/surface/interaction/edit/edit-interaction-action-extrude.js","pane/surface/interaction/edit/edit-interaction-action-face.js","pane/surface/interaction/edit/edit-interaction-action-move.js","pane/surface/interaction/edit/edit-interaction-action-rotate.js","pane/surface/interaction/edit/edit-interaction-action-scale.js","pane/surface/interaction/edit/edit-interaction-render-cache.js","pane/surface/interaction/edit/edit-interaction-render.js","pane/surface/interaction/edit/edit-interaction-select.js","pane/surface/interaction/edit/edit-interaction.js","graphic.js","main-menu.js","scene.js"],"names":["ajax","options","Object","assign","defaultAjaxOptions","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","success","response","error","method","params","objToParams","data","urlWithParams","url","open","async","send","get","Ajax","getJSON","JSON","parse","post","obj","key","encodeURIComponent","slice","window","safeExtend","prototype","property","value","Array","a","concat","i","length","j","splice","callback","s4","Math","floor","random","toString","substring","HTMLElement","oldClassNames","newClassNames","arguments","className","trim","replace","split","unique","join","queryClassNames","currentClassNames","index","name","indexOf","removeClassNames","removeEach","forEach","attr","__data_cache","WeakMap","elAttrs","undefined","set","setAttribute","getAttribute","removeAttribute","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","matches","document","ownerDocument","querySelectorAll","item","query","parentElement","current","clientHeight","style","height","clientWidth","width","guid","overlap","querySelector","newObj","hasOwnProperty","clone","target","varArgs","TypeError","to","nextSource","nextKey","call","defaults","TreeNode","parent","children","isRoot","add","child","constructor","push","remove","dfs","check","out","bfs","extend","_TreeNode","create","EventHandler","isDebug","listeners","trigger","console","debug","apply","on","off","array","reset","own","keys","Logger","instance","handlers","addHandler","level","ALL","args","DEBUG","INFO","info","WARNING","warn","ERROR","log","warning","tmp","levelHandlers","handler","removeHandler","NONE","defaultOptions","container","selector","Cobweb","Error","addClass","logger","events","modules","Modules","onLoadedAll","names","topologicalSort","sortedNames","module","dependencies","depName","nextName","candidates","getInitialCandidates","dependant","dependantName","allDependenciesMet","loadedUntilNow","runCallback","callbacks","all","init","ex","dependencyModule","moduleName","buildHalfEdge","objSource","mesh","vertices","line","startsWith","vertex","map","number","parseFloat","HalfEdgeMesh","addVertices","faceVertices","parseInt","addFace","asset","shader","firstSource","Shader","Camera","center","rotation","distance","projection","mat4","ortho","getViewMatrix","view","eye","getPosition","lookAt","getUpDirection","vec3","rotateX","rotateY","getDirection","direction","sub","normalize","getRay","ray","canvasCoords","canvasSize","Ray","start","auxMat","multiply","invert","transformMat4","up","vRotation","PI","computeLocalAxis","left","forward","cross","canContain","aabb","min","max","findContainingParent","result","maxItems","maxDepth","padding","OctreeNode","depth","items","root","getAllItems","addItems","addItem","splitIfNeeded","removeItem","removed","mergeIfNeeded","updateDimensions","redistributeItems","subItems","getCollidingNodes","nodes","collidingPoint","geo","rayAABBCollision","getCollidingItems","node","parentAabb","half","scale","ref","mul","containingParent","Octree","_addItem","onVerticesMove","newItems","allItems","updateBounds","fill","Number","MAX_VALUE","copy","Plane","point","normal","fromPoints","b","onCreateCallback","pane","header","createHeader","appendChild","div","createElement","oldPane","newPane","oldType","attrData","setType","types","typeCallbacks","onPaneType","paneHeader","onCreateHeader","dataset","paneType","onPaneCreate","onPaneSplit","origin","onPaneResize","mainPanes","internal","Pane","separator","size","getBarycentricCoordinates","p1","p2","p3","v0","getVectorFromPoints","v1","v2","d00","dot","d01","d11","d20","d21","denom","getNormal","v3","tmp1","tmp2","output","rayFaceCollision","triangles","triangulateFace","triangle","rayTriangleCollision","triangleNormal","rayPlaneCollision","bary","planePoint","planeNormal","numer","abs","t","minB","maxB","whichPlane","inside","quadrant","Float32Array","maxT","candidatePlane","closestPointsBetweenSegments","a0","a1","b0","b1","p_a","p_b","sc","tc","u","subtract","v","w","c","d","e","D","dP","rayPointDistance","aux","len","pointPointDistance","triangulated","computePointsCenter","points","findClosestPointIndex","position","closestIndex","newDistance","findClosestPoint","findClosestFace","faces","centers","face","computeCenter","superConstructor","cachedHalfEdgeMesh","heMesh","cache","meshes","builder","builders","rebuild","onCreate","onClean","onVerticesChange","_addVertices","invalidateCache","_addFace","addBuilder","buildEdge","end","edge","HalfEdgeFace","opposite","findOppositeEdge","_halfEdge","outEdges","next","he","opposites","filter","VertexGetFaces","VertexComputeNormal","getFaces","computeRawNormal","computeNormal","bounds","halfEdges","isArray","ownIndex","he1","he2","last","prev","clear","halfEdge","getEdges","getVertices","getVerticesTriangulated","triplet","onSurfacePaneType","canvas","id","surfaceIndex","addEventListener","event","focus","surfaceGUI","float","innerHTML","surface","camera","updateCanvasSize","onCreateSurfaceHeader","label","context","getContext","headerHeight","gui","guiWidth","setTransform","translate","perspective","DEG2RAD","surfaces","parentNode","combine","originalRotation","delta","upNormalMouseDown","clampRotations","getCoordsDelta","initial","rotations","pi2","mouseDownCoords","interactions","common","onMouseWheel","realCoords","wheelDelta","detail","onMouseMove","moving","onMouseDown","which","equals","onMouseUp","object","isHit","hitPoint","scene","getObjects","testRayBBox","bounding","model","selected","getLocalCoordinates","type","onKeyDown","onKeyUp","onClick","layerX","layerY","onContextMenu","preventDefault","onSurfaceEvent","getInteractionCallbacks","keepRunning","setInteraction","interaction","interactionName","onRender","tabIndex","oncontextmenu","onkeydown","onkeyup","onmousewheel","onmousemove","onmousedown","onmouseup","onclick","initialValue","uploadRange","buffer","range","bytesPerFloat32Element","BYTES_PER_ELEMENT","solidBuilder","halfEdgeMesh","indices","GL","Mesh","load","normals","Uint16Array","vertexBuffers","vRange","nRange","dirty","upload","renderObject","primitive","indexBufferName","temp","uniforms","u_mvp","u_model","draw","solidShader","wireframeShader","grid","lines","colorsArray","bufferIndex","createVertexBuffer","axisX","colors","axisZ","renders","solid","lightDirection","u_lightvector","graphics","gl","LINES","setRender","u_color","render","getRender","renderName","panes","edit","actions","selection","isEmpty","addAll","action","removeVertex","removeFace","vIndex","removeHalfEdge","fIndex","heIndex","delete","objKey","objects","getOuterEdges","outerEdges","faceEdges","oppositeFace","_selected","duplicateOuterRing","newVertices","oldVertices","newVertex","newOutEdges","oldOutEdges","outEdge","vertexIndex","nextIndex","extrude","selectedFaces","getCenter","vertexCounterClockwise","ac","bc","sortedVertices","sort","initialCoords","vec2","selectionNormal","axisOrigin","isY","move","axis","lastCoords","selectedObj","originalPosition","currentRay","initialRay","cameraDirection","hitPointInitial","hitPointCurrent","selectionCenter","currentRayEnd","scaleAndAdd","axisStart","axisEnd","isControlDown","round","sceneObj","getObjectByName","restore","selectionCenter2d","initialVector","rotate","fromSelectionToCursor","determinant","atan2","negatedCenter","negate","tranform","initialDistance","vectorDelta","wireframeBuilder","verticesBuilder","cRange","color","renderBounds","octree","recursive","updateBoundsModel","boundsModel","identity","lerp","count","rads","sin","cos","circle","wireframe","drawBounds","POINTS","LINE_LOOP","toggleVertex","toggle","selectedVertices","allSelected","includes","toggleFace","arrayName","initObjectIfNeeded","delObjectIfNeeded","edges","objSelection","getFacesFromVertices","vertexSelectionMargin","rayVertices","uniqueFaces","closestFace","vertexDistance","n","isMouseDown","isShiftDown","delta2d","setAction","runAction","shiftDown","shiftKey","ctrlKey","keyCode","callbackName","drawRenderTarget","viewport","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","mainRender","surfaceRender","drawImage","Graphics","screen","animate","ondraw","renderTargets","clearColor","enable","DEPTH_TEST","getParameter","VERSION","SHADING_LANGUAGE_VERSION","mainMenu","insertBefore","firstChild","rootNode","objectCount","addObject","TRIANGLES"],"mappings":"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","file":"cobweb.min.js","sourcesContent":["((function(){\r\n    'use strict';\r\n\r\n    var defaultAjaxOptions = {\r\n        method: 'GET',\r\n        url: '',\r\n        data: {},\r\n        async: true,\r\n        success: null,\r\n        error: null\r\n    };\r\n\r\n    function ajax (options) {\r\n        options = Object.assign({}, defaultAjaxOptions, options);\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200) {\r\n                    if (options.success) options.success(this.response);\r\n                } else {\r\n                    if (options.error) error.success(this.response);\r\n                }\r\n            }\r\n        };\r\n        if (options.method === 'GET') {\r\n            var params = objToParams(options.data);\r\n            var urlWithParams = options.url + (params ? '?' + params : '');\r\n            xhttp.open(options.method, urlWithParams, options.async);\r\n            xhttp.send();\r\n        } else if (options.method === 'POST') {\r\n            xhttp.open(options.method, options.url, options.async);\r\n            xhttp.send(options.data);\r\n        }\r\n        return xhttp;\r\n    }\r\n\r\n    function get (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function getJSON (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: function (response) {\r\n                success(JSON.parse(response));\r\n            },\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function post (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'POST'\r\n        });\r\n    }\r\n\r\n    window.Ajax = {\r\n        ajax: ajax,\r\n        get: get,\r\n        getJSON: getJSON,\r\n        post: post\r\n    };\r\n\r\n    function objToParams (obj) {\r\n        var params = '';\r\n        for (var key in obj) {\r\n            var nextParam = key + '=' + encodeURIComponent(obj[key]);\r\n            params += '&' + nextParam;\r\n        }\r\n        return params.slice(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Array.prototype, 'unique', function() {\r\n        var a = this.concat();\r\n        for(var i = 0; i < a.length; ++i)\r\n            for(var j = i + 1; j < a.length; ++j)\r\n                if(a[i] === a[j]) a.splice(j--, 1);\r\n        return a;\r\n    });\r\n\r\n    safeExtend(Array.prototype, 'forEach', function(callback) {\r\n        for (var i = 0; i < this.length; i++)\r\n            callback(this[i], i, this);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(HTMLElement.prototype, 'addClass', function () {\r\n        var oldClassNames, newClassNames;\r\n        for(var i in arguments){\r\n            oldClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            newClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            this.className = oldClassNames.concat(newClassNames).unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'hasClass', function () {\r\n        var queryClassNames, currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n        for(var i in arguments){\r\n            queryClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            for (var index = 0; index < queryClassNames.length; index++) {\r\n                var name = queryClassNames[index];\r\n                if (currentClassNames.indexOf(name) == -1)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'removeClass', function () {\r\n        var index = 0, currentClassNames, removeClassNames;\r\n        var removeEach = function (name) {\r\n            index = currentClassNames.indexOf(name);\r\n            if (index != -1)\r\n                currentClassNames.splice(index, 1);\r\n        };\r\n        for(var i in arguments){\r\n            currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames.forEach(removeEach);\r\n            this.className = currentClassNames.unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'data', function (attr, value) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        var elAttrs = window.__data_cache.get(this) || {};\r\n        if (value !== undefined) {\r\n            elAttrs[attr] = value;\r\n            window.__data_cache.set(this, elAttrs);\r\n        } else {\r\n            if (attr) return elAttrs && elAttrs[attr];\r\n            else return elAttrs;\r\n        }\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'setData', function (data) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        window.__data_cache.set(this, data);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attr', function (name, value) {\r\n        if (value !== undefined)\r\n            this.setAttribute(name, value);\r\n        else if (value === null)\r\n            this.removeAttribute(name);\r\n        else\r\n            return this.getAttribute(name);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attrData', function (name, value) {\r\n        return this.attr('data-' + name, value);\r\n    });\r\n\r\n    safeExtend(Element.prototype, 'matches',\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;\r\n        }\r\n    );\r\n\r\n    safeExtend(HTMLElement.prototype, 'parent', function (query) {\r\n        if (!query) return this.parentElement;\r\n        var current = this.parentElement;\r\n        while (!current.matches(query))\r\n            current = current.parentElement;\r\n        return current;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'height', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.height = value + 'px';\r\n            else\r\n                this.style.height = value;\r\n        } else\r\n            return this.clientHeight;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'width', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.width = value + 'px';\r\n            else\r\n                this.style.width = value;\r\n        } else\r\n            return this.clientWidth;\r\n    });\r\n\r\n    safeExtend(window, 'guid', function () {\r\n        return 'GUID-' + s4() + '-' + s4() + '-' + s4();\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'guid', function () {\r\n        var guid = null, overlap = null;\r\n        do {\r\n            guid = window.guid();\r\n            overlap = document.querySelector('#' + guid);\r\n        } while(overlap);\r\n        this.attr('id', guid);\r\n        return guid;\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16).substring(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Object, 'clone', function (obj) {\r\n        var newObj = {};\r\n        for (var property in obj)\r\n            if (obj.hasOwnProperty(property)) {\r\n                var value = obj[property];\r\n                if (typeof value === 'object')\r\n                    newObj[property] = Object.clone(obj[property]);\r\n                else\r\n                    newObj[property] = obj[property];\r\n            }\r\n        return newObj;\r\n    });\r\n\r\n    safeExtend(Object, 'assign', function(target, varArgs) {\r\n        if (target === null)\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        var to = Object(target);\r\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n            if (nextSource !== null) {\r\n                for (var nextKey in nextSource) {\r\n                    if (hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return to;\r\n    });\r\n\r\n    safeExtend(Object, 'extend', function(options, defaults) {\r\n        return Object.assign({}, defaults, options);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var TreeNode = function (parent, data) {\r\n        this.parent = parent || null;\r\n        this.data = data || {};\r\n        this.children = [];\r\n    };\r\n\r\n    window.TreeNode = TreeNode;\r\n\r\n    TreeNode.prototype.isRoot = function () {\r\n        return !this.parent;\r\n    };\r\n\r\n    TreeNode.prototype.add = function (data) {\r\n        var child = new this.constructor(this, data);\r\n        this.children.push(child);\r\n        return child;\r\n    };\r\n\r\n    TreeNode.prototype.remove = function (index) {\r\n        this.children.slice(index, 1);\r\n        return this;\r\n    };\r\n\r\n    TreeNode.prototype.dfs = function (check) {\r\n        var out = [];\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n            out.concat(this.children[i].dfs(check));\r\n        }\r\n        return out;\r\n    };\r\n\r\n    TreeNode.prototype.bfs = function (check) {\r\n        var out = [], i;\r\n        for (i = 0; i < this.children.length; i++)\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n        for (i = 0; i < this.children.length; i++)\r\n            out.concat(this.children[i].bfs(check));\r\n        return out;\r\n    };\r\n\r\n    TreeNode.extend = function () {\r\n        var _TreeNode = function (parent, data) {\r\n            TreeNode.call(this, parent, data);\r\n        };\r\n        _TreeNode.prototype = Object.create(TreeNode.prototype);\r\n        _TreeNode.prototype.constructor = _TreeNode;\r\n        return new _TreeNode();\r\n    };\r\n})());\r\n","((function() {\r\n    'use strict';\r\n\r\n    var EventHandler = function (isDebug) {\r\n        this.isDebug = !!isDebug;\r\n        this.listeners = {};\r\n    };\r\n\r\n    EventHandler.prototype.trigger = function() {\r\n        var name = arguments[0];\r\n        var listeners = this.listeners[name] || [];\r\n        Array.prototype.splice.call(arguments, 0, 1);\r\n        if (this.isDebug) console.debug(name, arguments);\r\n        for (var i = 0; i < listeners.length; i++)\r\n            listeners[i].apply(null, arguments);\r\n    };\r\n\r\n    EventHandler.prototype.on = function(name, callback) {\r\n        if (!this.listeners[name]) this.listeners[name] = [];\r\n        this.listeners[name].push(callback);\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name) {\r\n        delete this.listeners[name];\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name, callback) {\r\n        if (this.listeners[name]) {\r\n            var array = this.listeners[name];\r\n            if (array.indexOf(callback) > -1) array.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    EventHandler.prototype.reset = function() {\r\n        var own = this;\r\n        Object.keys(this.listeners).forEach(function(key) {\r\n            delete own.listeners[key];\r\n        });\r\n    };\r\n\r\n    window.EventHandler = EventHandler;\r\n})());\r\n","/* jshint loopfunc:true */\r\n\r\n((function(){\r\n    'use strict';\r\n\r\n    var Logger = function (instance) {\r\n        this.handlers = [];\r\n\r\n        this.addHandler(this.level.ALL, function (level, args) {\r\n            if (Logger.prototype.level.DEBUG === level) {\r\n                console.debug.apply(this, args);\r\n            } else if (Logger.prototype.level.INFO === level) {\r\n                console.info.apply(this, args);\r\n            } else if (Logger.prototype.level.WARNING === level) {\r\n                console.warn.apply(this, args);\r\n            } else if (Logger.prototype.level.ERROR === level) {\r\n                console.error.apply(this, args);\r\n            }\r\n        });\r\n    };\r\n\r\n    Logger.prototype.debug = function () {\r\n        this.log(Logger.prototype.level.DEBUG, arguments);\r\n    };\r\n\r\n    Logger.prototype.info = function () {\r\n        this.log(Logger.prototype.level.INFO, arguments);\r\n    };\r\n\r\n    Logger.prototype.warning = function () {\r\n        this.log(Logger.prototype.level.WARNING, arguments);\r\n    };\r\n\r\n    Logger.prototype.error = function () {\r\n        this.log(Logger.prototype.level.ERROR, arguments);\r\n    };\r\n\r\n    Logger.prototype.log = function (level, args) {\r\n        var tmp = level;\r\n        var levelHandlers = this.handlers[tmp] || [];\r\n        while (tmp >= 0) {\r\n            levelHandlers.forEach(function (handler) {\r\n                handler(level, args);\r\n            });\r\n            levelHandlers = this.handlers[--tmp] || [];\r\n        }\r\n    };\r\n\r\n    Logger.prototype.addHandler = function (level, callback) {\r\n        if (!this.handlers[level])\r\n            this.handlers[level] = [];\r\n        this.handlers[level].push(callback);\r\n    };\r\n\r\n    Logger.prototype.removeHandler = function (level, callback) {\r\n        var levelHandlers = this.handlers[level];\r\n        if (levelHandlers) {\r\n            var index = levelHandlers.indexOf(callback);\r\n            if (index > -1)\r\n                levelHandlers.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    Logger.prototype.level = {\r\n        ALL: 0,\r\n        DEBUG: 1,\r\n        INFO: 2,\r\n        WARNING: 3,\r\n        ERROR: 4,\r\n        NONE: 5,\r\n    };\r\n\r\n    window.Logger = Logger;\r\n})());\r\n","(function(){\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        container: {\r\n            selector: '#cobweb'\r\n        }\r\n    };\r\n\r\n    var Cobweb = function (options) {\r\n        this.options = Object.assign({}, defaultOptions, options);\r\n        var instance = this;\r\n\r\n        this.container = document.querySelector(this.options.container.selector);\r\n        if (!this.container)\r\n            throw new Error('Invalid container selector: \\'' +\r\n                this.options.container.selector + '\\'');\r\n        this.container.addClass('cb-container');\r\n        this.container.data('instance', this);\r\n\r\n        this.logger = new Logger(this, true);\r\n        this.events = new EventHandler(true);\r\n        this.modules = new Modules([this], {\r\n            onLoadedAll: function (names) {\r\n                instance.events.trigger('modules.loaded.all', names);\r\n                instance.events.trigger('app.loaded');\r\n            }\r\n        });\r\n    };\r\n\r\n    window.Cobweb = Cobweb;\r\n}());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Modules = function (params, callbacks) {\r\n        callbacks = callbacks || {};\r\n        var modules = Modules.prototype.all;\r\n        try {\r\n            var sortedNames = topologicalSort(modules);\r\n            for (var i = 0; i < sortedNames.length; i++ ) {\r\n                var name = sortedNames[i];\r\n                var module = modules[name];\r\n                try {\r\n                    module.init.apply(this, params);\r\n                    runCallback(callbacks, 'onLoaded', [name, module]);\r\n                } catch (ex) {\r\n                    console.error('Error loading module:', name, ex);\r\n                    runCallback(callbacks, 'onError', [ex, name, module]);\r\n                }\r\n            }\r\n            runCallback(callbacks, 'onLoadedAll', [sortedNames]);\r\n        } catch (ex) {\r\n            console.error('Error loading modules:', ex);\r\n        }\r\n    };\r\n\r\n    Modules.prototype.all = {};\r\n    Modules.prototype.add = function (name, init, dependencies) {\r\n        dependencies = dependencies || [];\r\n\r\n        var dependant = [];\r\n        var dependencyModule, i;\r\n        for (var moduleName in this.all) {\r\n            var module = this.all[moduleName];\r\n            for (i = 0; i < module.dependencies.length; i++)\r\n                if (module.dependencies[i] === name)\r\n                    dependant.push(moduleName);\r\n        }\r\n        for (i = 0; i < dependencies.length; i++) {\r\n            dependencyModule = this.all[dependencies[i]];\r\n            if (dependencyModule) dependencyModule.dependant.push(name);\r\n        }\r\n\r\n        this.all[name] = {\r\n            dependencies: dependencies,\r\n            dependant: dependant,\r\n            init: init\r\n        };\r\n    };\r\n\r\n    window.Modules = Modules;\r\n\r\n    function topologicalSort (modules) {\r\n        var sortedNames = [];\r\n\r\n        var module = null, i = 0;\r\n        for (var name in modules) {\r\n            module = modules[name];\r\n            for (i = 0; i < module.dependencies.length; i++) {\r\n                var depName = module.dependencies[i];\r\n                if (!modules[depName])\r\n                    throw new Error('Missing module: ' + depName);\r\n            }\r\n        }\r\n\r\n        var nextName = null;\r\n        var candidates = getInitialCandidates(modules);\r\n        while (candidates.length > 0) {\r\n            nextName = candidates.splice(0, 1)[0];\r\n            module = modules[nextName];\r\n            if (module) {\r\n                sortedNames.push(nextName);\r\n                for (i = 0; i < module.dependant.length; i++) {\r\n                    var dependantName = module.dependant[i];\r\n                    if (allDependenciesMet(sortedNames, modules[dependantName]))\r\n                        candidates.push(dependantName);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Object.keys(modules).length !== sortedNames.length)\r\n            throw new Error('Dependency cycle!');\r\n\r\n        return sortedNames;\r\n    }\r\n\r\n    function getInitialCandidates (modules) {\r\n        var candidates = [];\r\n        for (var name in modules)\r\n            if (modules[name].dependencies.length === 0)\r\n                candidates.push(name);\r\n        return candidates;\r\n    }\r\n\r\n    function allDependenciesMet (loadedUntilNow, module) {\r\n        for (var i = 0; i < module.dependencies.length; i++)\r\n            if (loadedUntilNow.indexOf(module.dependencies[i]) === -1) return false;\r\n        return true;\r\n    }\r\n\r\n    function runCallback (callbacks, name, params) {\r\n        var callback = callbacks[name];\r\n        var isFunction = typeof callback === 'function';\r\n        if (isFunction) callback.apply(null, params);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('mesh', function (instance) {\r\n        instance.asset = instance.asset || {};\r\n        instance.asset.mesh = {\r\n            get: function (name, callback) {\r\n                Ajax.get('asset/mesh/' + name + '.obj', function (response) {\r\n                    callback(buildHalfEdge(response));\r\n                });\r\n            }\r\n        };\r\n    });\r\n\r\n    function buildHalfEdge (objSource) {\r\n        var mesh = null;\r\n        var vertices = [];\r\n        var lines = objSource.split(/\\r?\\n/);\r\n        lines.forEach(function (line) {\r\n            if (line.startsWith('v')) {\r\n                var vertex = line.substring(2).split(' ').map(function (number) {\r\n                    return parseFloat(number);\r\n                });\r\n                vertices.push(vertex);\r\n            } else if (line.startsWith('f')) {\r\n                if (mesh === null) {\r\n                    mesh = new Math.HalfEdgeMesh();\r\n                    mesh.addVertices(vertices);\r\n                }\r\n                var faceVertices = line.substring(2).split(' ').map(function (index) {\r\n                    return vertices[parseInt(index) - 1];\r\n                });\r\n                mesh.addFace(faceVertices);\r\n            }\r\n        });\r\n        return mesh;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('shader', function (instance) {\r\n        instance.asset = instance.asset || {};\r\n        instance.asset.shader = {\r\n            get: function (name, callback) {\r\n                var shader = null, firstSource = null;\r\n                Ajax.get('asset/shader/' + name + '.vert', function (response) {\r\n                    if (firstSource) {\r\n                        shader = new Shader(response, firstSource);\r\n                        callback(shader);\r\n                    } firstSource = response;\r\n                });\r\n                Ajax.get('asset/shader/' + name + '.frag', function (response) {\r\n                    if (firstSource) {\r\n                        shader = new Shader(firstSource, response);\r\n                        callback(shader);\r\n                    } firstSource = response;\r\n                });\r\n            }\r\n        };\r\n    });\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Camera = function (center, rotation, distance) {\r\n        this.center = center || [0, 0, 0];\r\n        this.rotation = rotation || [2.8, 0.5];\r\n        this.distance = distance || 15;\r\n        this.projection = mat4.create();\r\n        this.ortho = mat4.create();\r\n        this.height = 0;\r\n        this.width = 0;\r\n    };\r\n\r\n    Camera.prototype.getViewMatrix = function (view) {\r\n        view = view || mat4.create();\r\n        var eye = [0, 0, 0];\r\n        this.getPosition(eye);\r\n        mat4.lookAt(view, eye, this.center, this.getUpDirection());\r\n        return view;\r\n    };\r\n\r\n    Camera.prototype.getPosition = function (eye) {\r\n        eye = eye || vec3.create();\r\n        vec3.set(eye, 0, 0, -this.distance);\r\n        vec3.rotateX(eye, eye, this.rotation[1]);\r\n        vec3.rotateY(eye, eye, -this.rotation[0]);\r\n        return eye;\r\n    };\r\n\r\n    Camera.prototype.getDirection = function (direction) {\r\n        direction = direction || vec3.create();\r\n        var eye = this.getPosition();\r\n        vec3.sub(direction, this.center, eye);\r\n        vec3.normalize(direction, direction);\r\n        return direction;\r\n    };\r\n\r\n    Camera.prototype.getRay = function (ray, canvasCoords, canvasSize) {\r\n        ray = ray || new Math.Ray();\r\n        this.getPosition(ray.start);\r\n        vec3.set(ray.direction, canvasCoords[0] / (canvasSize[0] * 0.5) - 1.0,\r\n            canvasCoords[1] / (canvasSize[1] * 0.5) - 1.0, 1);\r\n        var auxMat = mat4.create();\r\n        mat4.multiply(auxMat, this.projection, this.getViewMatrix());\r\n        mat4.invert(auxMat, auxMat);\r\n        vec3.transformMat4(ray.direction, ray.direction, auxMat);\r\n        vec3.normalize(ray.direction, ray.direction);\r\n        return ray;\r\n    };\r\n\r\n    Camera.prototype.getUpDirection = function (up) {\r\n        up = up || vec3.create();\r\n        var vRotation = this.rotation[1];\r\n        if (vRotation >= Math.PI / 2 &&\r\n            vRotation <= ((Math.PI * 3) / 2))\r\n            vec3.set(up, 0, 1, 0);\r\n        else vec3.set(up, 0, -1, 0);\r\n        return up;\r\n    };\r\n\r\n    Camera.prototype.computeLocalAxis = function () {\r\n        var left = [0, 0, 0];\r\n        var up = [0, 0, 0];\r\n\r\n        var forward = this.getDirection();\r\n        vec3.cross(left, forward, [0, 1, 0]);\r\n        vec3.cross(up, forward, left);\r\n\r\n        return {up: up, left: left};\r\n    };\r\n\r\n    window.Math.Camera = Camera;\r\n})());\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tvar defaultOptions = {\r\n\t\tmaxItems: 10,\r\n\t\tmaxDepth: 10,\r\n\t\tpadding: 0.1\r\n\t};\r\n\r\n\tvar OctreeNode = function (parent, depth) {\r\n\t\tthis.items = [];\r\n\t\tthis.children = null;\r\n\t\tthis.depth = depth || 0;\r\n\t\tthis.parent = parent || null;\r\n\t\tthis.aabb = { max: [0, 0, 0], min: [0, 0, 0] };\r\n\r\n\t\tthis.root = this;\r\n\t\twhile (this.root.parent !== null)\r\n\t\t\tthis.root = this.root.parent;\r\n\t};\r\n\r\n\tOctreeNode.prototype.getAllItems = function (container) {\r\n\t\tcontainer = container || [];\r\n\t\tvar i;\r\n        if (!this.children) {\r\n\t\t\tcontainer = container.concat(this.items);\r\n\t\t} else {\r\n            for (i = 0; i < this.children.length; i++)\r\n                container = this.children[i].getAllItems(container);\r\n        }\r\n\t\treturn container;\r\n\t};\r\n\r\n\tOctreeNode.prototype.addItems = function (items) {\r\n\t\tvar result = false;\r\n\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\tvar item = items[i];\r\n\t\t\tresult |= this.addItem(item);\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tOctreeNode.prototype.addItem = function (item) {\r\n\t\tif (this.canContain(item)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < 8; i++)\r\n\t\t\t\t\tif (this.children[i].addItem(item))\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.items.push(item);\r\n\t\t\t\tthis.splitIfNeeded();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tOctreeNode.prototype.removeItem = function (item) {\r\n\t\tvar removed = false;\r\n\t\tvar index = this.items.indexOf(item);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.items.splice(index, 1);\r\n\t\t\tthis.mergeIfNeeded();\r\n\t\t\tremoved = true;\r\n\t\t} else {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\t\tremoved |= this.children[i].removeItem(item);\r\n\t\t\t\t\tif (removed) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (removed) this.mergeIfNeeded();\r\n\t\treturn removed;\r\n\t};\r\n\r\n\tOctreeNode.prototype.splitIfNeeded = function () {\r\n\t\tif (this.root.options.maxItems < this.items.length &&\r\n\t\t\tthis.root.options.maxDepth > this.depth) {\r\n\t\t\tthis.children = [];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tthis.children[i] = new OctreeNode(this, this.depth + 1);\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t\t\t}\r\n\t\t\tthis.redistributeItems(this.items);\r\n\t\t\tthis.items = [];\r\n\t\t}\r\n\t};\r\n\r\n\tOctreeNode.prototype.mergeIfNeeded = function () {\r\n\t\tif (this.children) {\r\n\t\t\tvar canMerge = false;\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tthis.children[i].mergeIfNeeded();\r\n\t\t\t\tcanMerge = !this.children[i].children;\r\n\t\t\t\tif (!canMerge) return false;\r\n\t\t\t}\r\n\t\t\tvar subItems = this.getAllItems();\r\n\t\t\tif (this.root.options.maxItems > subItems.length) {\r\n\t\t\t\tthis.children = null;\r\n\t\t\t\tthis.redistributeItems(subItems);\r\n\t\t\t\treturn true;\r\n\t\t\t} else return false;\r\n\t\t} else return false;\r\n\t};\r\n\r\n\tOctreeNode.prototype.canContain = function (item) {\r\n\t\treturn canContain(item, this.aabb);\r\n\t};\r\n\r\n\tOctreeNode.prototype.getCollidingNodes = function (ray) {\r\n\t\tvar nodes = [];\r\n\t\tvar aabb = this.aabb;\r\n\t\tvar collidingPoint = [0, 0, 0];\r\n\t\tif (Math.geo.rayAABBCollision(ray.start, ray.direction,\r\n\t\t\tthis.aabb.min, this.aabb.max, collidingPoint)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\t\tvar child = this.children[i];\r\n\t\t\t\t\tnodes = nodes.concat(child.getCollidingNodes(ray));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnodes.push(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nodes;\r\n\t};\r\n\r\n\tOctreeNode.prototype.getCollidingItems = function (ray) {\r\n\t\tvar items = [];\r\n\t\tthis.getCollidingNodes(ray).forEach(function (node) {\r\n\t\t\titems = items.concat(node.items);\r\n\t\t});\r\n\t\treturn items;\r\n\t};\r\n\r\n\tOctreeNode.prototype.updateDimensions = function (parentAabb, index) {\r\n\t\tvar half = [0, 0, 0];\r\n\t\tvec3.sub(half, parentAabb.max, parentAabb.min);\r\n\t\tvec3.scale(half, half, 0.5);\r\n\t\tvar ref = [!(index & 1), !(index & 2), !(index & 4)];\r\n\t\tvec3.mul(this.aabb.min, half, ref);\r\n\t\tvec3.add(this.aabb.min, this.aabb.min, parentAabb.min);\r\n\t\tvec3.add(this.aabb.max, this.aabb.min, half);\r\n\t\tif (this.children)\r\n\t\t\tfor (var i = 0; i < this.children.length; i++)\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t};\r\n\r\n\tOctreeNode.prototype.redistributeItems = function (items) {\r\n\t\titems = items || this.items;\r\n\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\tvar item = items[i];\r\n\t\t\tvar containingParent = findContainingParent(this, item);\r\n\t\t\tif (containingParent === null) {\r\n\t\t\t\tconsole.warn('Recomputing bounds...');\r\n\t\t\t\tthis.root.updateDimensions([item]);\r\n\t\t\t\tcontainingParent = findContainingParent(this, item);\r\n\t\t\t}\r\n\t\t\tcontainingParent.addItem(item);\r\n\t\t}\r\n\t};\r\n\r\n\tvar Octree = function (options) {\r\n\t\tthis.options = Object.assign({}, defaultOptions, options);\r\n\t\tOctreeNode.call(this);\r\n\t};\r\n\r\n\tOctree.prototype = Object.create(OctreeNode.prototype);\r\n\tOctree.prototype.constructor = OctreeNode;\r\n\r\n\tvar _addItem = Octree.prototype.addItem;\r\n\tOctree.prototype.addItem = function (item) {\r\n\t\tif (!this.canContain(item))\r\n\t\t\tthis.updateDimensions([item]);\r\n\t\treturn _addItem.call(this, item);\r\n\t};\r\n\r\n\tOctree.prototype.onVerticesMove = function (items) {\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tif (this.removeItem(items[i]))\r\n\t\t\t\tthis.addItem(items[i]);\r\n\t};\r\n\r\n\tOctree.prototype.updateDimensions = function (newItems) {\r\n\t\tvar allItems = this.getAllItems(newItems);\r\n\t\tthis.updateBounds(allItems);\r\n\t\tif (this.children) {\r\n\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tOctree.prototype.updateBounds = function (items) {\r\n\t\tvar max = [0, 0, 0].fill(-Number.MAX_VALUE);\r\n\t\tvar min = [0, 0, 0].fill(Number.MAX_VALUE);\r\n\t\tvar padding = this.options.padding;\r\n\t\titems.forEach(function (item) {\r\n\t\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\t\tmin[j] = Math.min(min[j], item[j] - padding);\r\n\t\t\t\tmax[j] = Math.max(max[j], item[j] + padding);\r\n\t\t\t}\r\n\t\t});\r\n\t\tvec3.copy(this.aabb.min, min);\r\n\t\tvec3.copy(this.aabb.max, max);\r\n\t};\r\n\r\n\tMath.Octree = Octree;\r\n\r\n\tfunction canContain (item, aabb) {\r\n\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\tif (item[j] < aabb.min[j]) return false;\r\n\t\t\tif (item[j] > aabb.max[j]) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction findContainingParent (current, item) {\r\n\t\tvar result = current;\r\n\t\twhile (result && !result.canContain(item))\r\n\t\t\tresult = result.parent;\r\n\t\treturn result;\r\n\t}\r\n})();\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Plane = function (point, normal) {\r\n        this.normal = normal || [0, 1, 0];\r\n        this.point = point || vec3.create();\r\n        vec3.normalize(this.normal, this.normal);\r\n    };\r\n\r\n    window.Math.Plane = Plane;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Ray = function (start, direction) {\r\n        this.direction = direction || [0, 0, 1];\r\n        this.start = start || vec3.create();\r\n        vec3.normalize(this.direction, this.direction);\r\n    };\r\n\r\n    Ray.fromPoints = function (a, b) {\r\n        var direction = vec3.create();\r\n        vec3.sub(direction, b, a);\r\n        return new Ray(a, direction);\r\n    };\r\n\r\n    window.Math.Ray = Ray;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-header', function (instance) {\r\n        instance.events.on('pane.create', function (pane) {\r\n            onCreateCallback(pane, instance);\r\n        });\r\n    }, ['pane-types']);\r\n\r\n    function onCreateCallback (pane, instance) {\r\n        var header = createHeader();\r\n        pane.appendChild(header);\r\n    }\r\n\r\n    function createHeader () {\r\n        var div = document.createElement('div');\r\n        div.className = 'pane-header';\r\n        return div;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-types', function (instance) {\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var oldType = oldPane.attrData('pane-type');\r\n            if (oldType) instance.pane.setType(newPane, oldType);\r\n        });\r\n\r\n        instance.pane.types = {};\r\n\r\n        instance.pane.setType = function (pane, name) {\r\n            if (this.types[name]) {\r\n                var typeCallbacks = this.types[name];\r\n                typeCallbacks.onPaneType(pane, instance);\r\n                var paneHeader = pane.querySelector('.pane-header');\r\n                typeCallbacks.onCreateHeader(paneHeader, instance);\r\n                pane.dataset.paneType = name;\r\n            }\r\n        };\r\n    }, ['pane']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane', function (instance) {\r\n        var mainPanes = document.createElement('div');\r\n        mainPanes.className = 'main-panes';\r\n\r\n        var container = document.querySelector(instance.options.container.selector);\r\n        container.appendChild(mainPanes);\r\n\r\n        instance.events.on('app.loaded', function () {\r\n            instance.pane.internal = new Pane({\r\n                container: 'div.main-panes',\r\n                separator: {\r\n                    size: 3\r\n                },\r\n                callbacks: {\r\n                    onPaneCreate: onPaneCreate,\r\n                    onPaneSplit: onPaneSplit,\r\n                    onPaneResize: onPaneResize,\r\n                    //onPaneMerge: onPaneMerge,\r\n                    //onPaneDestroy: onPaneDestroy,\r\n                }\r\n            });\r\n\r\n            var root = instance.pane.internal.container.querySelector('.pane');\r\n            instance.pane.setType(root, 'surface');\r\n        });\r\n\r\n        instance.pane = {};\r\n\r\n        function onPaneCreate (pane) {\r\n            instance.events.trigger('pane.create', pane);\r\n        }\r\n\r\n        function onPaneSplit (origin, newPane) {\r\n            instance.events.trigger('pane.split', origin, newPane);\r\n        }\r\n\r\n        function onPaneResize (pane) {\r\n            instance.events.trigger('pane.resize', pane);\r\n        }\r\n\r\n        function onPaneMerge (merger, toRemove) {\r\n            console.debug('onPaneMerge', merger, toRemove);\r\n        }\r\n\r\n        function onPaneDestroy (pane) {\r\n            console.debug('onPaneDestroy', pane);\r\n        }\r\n    });\r\n})());\r\n","(function () {\r\n    'use strict';\r\n\r\n    var EPSILON = 0.000001;\r\n\r\n    Math.geo = Math.geo || {};\r\n\r\n    Math.geo.rayFaceCollision = function (start, direction, vertices, result) {\r\n        var triangles = Math.geo.triangulateFace(vertices);\r\n        for (var i = 0; i < triangles.length; i++) {\r\n            var triangle = triangles[i];\r\n            if (Math.geo.rayTriangleCollision(start, direction,\r\n                triangle[0], triangle[1], triangle[2], result))\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Math.geo.rayTriangleCollision = function (start, direction, v1, v2, v3, result) {\r\n        result = result || [0, 0, 0];\r\n    \tvar triangleNormal = getNormal(v1, v2, v3);\r\n        if (Math.geo.rayPlaneCollision(start, direction, v1, triangleNormal, result)) {\r\n            var bary = getBarycentricCoordinates(v1, v2, v3, result);\r\n        \treturn (bary[0] <= 1 && bary[0] >= 0) &&\r\n                (bary[1] <= 1 && bary[1] >= 0) &&\r\n                (bary[2] <= 1 && bary[2] >= 0);\r\n        }\r\n    \treturn false;\r\n    };\r\n\r\n    Math.geo.rayPlaneCollision = function (start, direction, planePoint, planeNormal, result) {\r\n\t\tvar numer = vec3.dot(planePoint, planeNormal) -\r\n            vec3.dot(planeNormal, start);\r\n\t\tvar denom = vec3.dot(planeNormal, direction);\r\n\t\tif (Math.abs(denom) < EPSILON) return false;\r\n\t\tvar t = numer / denom;\r\n\t\tif (t < 0.0) return false;\r\n\t\tif (result) {\r\n            vec3.scale(result, direction, t);\r\n            vec3.add(result, start, result);\r\n        }\r\n\t\treturn true;\r\n    };\r\n\r\n    //TODO: refactor to reduce number of operations\r\n    Math.geo.rayAABBCollision = function (start, direction, minB, maxB, result) {\r\n        result = result || vec3.create();\r\n\r\n\t\tvar inside = true;\r\n\t\tvar quadrant = new Float32Array(3);\r\n\t\tvar i = 0|0;\r\n\t\tvar whichPlane;\r\n\t\tvar maxT = new Float32Array(3);\r\n\t\tvar candidatePlane = new Float32Array(3);\r\n\r\n\t\t/* Find candidate planes; this loop can be avoided if\r\n\t\trays cast all from the eye(assume perpsective view) */\r\n\t\tfor (i=0; i < 3; ++i)\r\n\t\t\tif(start[i] < minB[i]) {\r\n\t\t\t\tquadrant[i] = 1;\r\n\t\t\t\tcandidatePlane[i] = minB[i];\r\n\t\t\t\tinside = false;\r\n\t\t\t}else if (start[i] > maxB[i]) {\r\n\t\t\t\tquadrant[i] = 0;\r\n\t\t\t\tcandidatePlane[i] = maxB[i];\r\n\t\t\t\tinside = false;\r\n\t\t\t}else\t{\r\n\t\t\t\tquadrant[i] = 2;\r\n\t\t\t}\r\n\r\n\t\t/* Ray origin inside bounding box */\r\n\t\tif(inside)\t{\r\n\t\t\tvec3.copy(result, start);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/* Calculate T distances to candidate planes */\r\n\t\tfor (i = 0; i < 3; ++i)\r\n\t\t\tif (quadrant[i] !== 2 && direction[i] !== 0)\r\n\t\t\t\tmaxT[i] = (candidatePlane[i] - start[i]) / direction[i];\r\n\t\t\telse\r\n\t\t\t\tmaxT[i] = -1;\r\n\r\n\t\t/* Get largest of the maxT's for final choice of intersection */\r\n\t\twhichPlane = 0;\r\n\t\tfor (i = 1; i < 3; i++)\r\n\t\t\tif (maxT[whichPlane] < maxT[i])\r\n\t\t\t\twhichPlane = i;\r\n\r\n\t\t/* Check final candidate actually inside box */\r\n\t\tif (maxT[whichPlane] < 0) return false;\r\n\t\tif (maxT[whichPlane] > Number.MAX_VALUE) return false; //NOT TESTED\r\n\r\n\t\tfor (i = 0; i < 3; ++i)\r\n\t\t\tif (whichPlane != i) {\r\n\t\t\t\tresult[i] = start[i] + maxT[whichPlane] * direction[i];\r\n\t\t\t\tif (result[i] < minB[i] || result[i] > maxB[i])\r\n\t\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tresult[i] = candidatePlane[i];\r\n\t\t\t}\r\n\t\treturn true;\r\n    };\r\n\r\n    //TODO: refactor to reduce number of operations\r\n    Math.geo.closestPointsBetweenSegments = function (a0,a1, b0,b1, p_a, p_b) {\r\n\t\tvar u = vec3.subtract( vec3.create(), a1, a0 );\r\n\t\tvar v = vec3.subtract( vec3.create(), b1, b0 );\r\n\t\tvar w = vec3.subtract( vec3.create(), a0, b0 );\r\n\r\n\t\tvar a = vec3.dot(u,u);         // always >= 0\r\n\t\tvar b = vec3.dot(u,v);\r\n\t\tvar c = vec3.dot(v,v);         // always >= 0\r\n\t\tvar d = vec3.dot(u,w);\r\n\t\tvar e = vec3.dot(v,w);\r\n\t\tvar D = a*c - b*b;        // always >= 0\r\n\t\tvar sc, tc;\r\n\r\n\t\t// compute the line parameters of the two closest points\r\n\t\tif (D < EPSILON) {          // the lines are almost parallel\r\n\t\t\tsc = 0.0;\r\n\t\t\ttc = (b>c ? d/b : e/c);    // use the largest denominator\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsc = (b*e - c*d) / D;\r\n\t\t\ttc = (a*e - b*d) / D;\r\n\t\t}\r\n\r\n\t\t// get the difference of the two closest points\r\n\t\tif(p_a)\tvec3.add(p_a, a0, vec3.scale(vec3.create(),u,sc));\r\n\t\tif(p_b)\tvec3.add(p_b, b0, vec3.scale(vec3.create(),v,tc));\r\n\r\n\t\tvar dP = vec3.add( vec3.create(), w, vec3.subtract( vec3.create(), vec3.scale(vec3.create(),u,sc) , vec3.scale(vec3.create(),v,tc)) );  // =  L1(sc) - L2(tc)\r\n\t\treturn vec3.length(dP);   // return the closest distance\r\n\t};\r\n\r\n    Math.geo.rayPointDistance = function (start, direction, point) {\r\n        var aux = [0, 0, 0];\r\n        vec3.sub(aux, point, start);\r\n        vec3.cross(aux, direction, aux);\r\n        return vec3.len(aux);\r\n    };\r\n\r\n    Math.geo.pointPointDistance = function (p1, p2) {\r\n        var aux = [0, 0, 0];\r\n        vec3.sub(aux, p2, p1);\r\n        return vec3.len(aux);\r\n    };\r\n\r\n    Math.geo.triangulateFace = function (vertices) {\r\n        var triangulated = [];\r\n        for (var i = 0; i < vertices.length - 2; i++) {\r\n            triangulated.push([vertices[0], vertices[i + 1], vertices[i + 2]]);\r\n        }\r\n        return triangulated;\r\n    };\r\n\r\n    Math.geo.computePointsCenter = function (points) {\r\n        if (!points || points.length === 0) return null;\r\n        var center = [0, 0, 0];\r\n        points.forEach(function(point) {\r\n            vec3.add(center, center, point);\r\n        });\r\n        vec3.scale(center, center, 1 / points.length);\r\n        return center;\r\n    };\r\n\r\n    Math.geo.findClosestPointIndex = function (position, points) {\r\n        if (!points || !points.length) return null;\r\n        var distance = Math.geo.pointPointDistance(position, points[0]);\r\n        var closestIndex = 0;\r\n        for (var i = 1; i < points.length; i++) {\r\n            var newDistance = Math.geo.pointPointDistance(position, points[i]);\r\n            if (newDistance < distance) {\r\n                distance = newDistance;\r\n                closestIndex = i;\r\n            }\r\n        }\r\n        return closestIndex;\r\n    };\r\n\r\n    Math.geo.findClosestPoint = function (position, points) {\r\n        if (!points || !points.length) return null;\r\n        var index = Math.geo.findClosestPointIndex(position, points);\r\n        return points[index];\r\n    };\r\n\r\n    Math.geo.findClosestFace = function (position, faces) {\r\n        if (!faces || !faces.length) return null;\r\n        var centers = faces.map(function (face) {\r\n            return face.computeCenter();\r\n        });\r\n        var index = Math.geo.findClosestPointIndex(position, centers);\r\n        return faces[index];\r\n    };\r\n\r\n    function getBarycentricCoordinates (p1, p2, p3, point) {\r\n        var v0 = getVectorFromPoints(p1, p2);\r\n        var v1 = getVectorFromPoints(p1, p3);\r\n        var v2 = getVectorFromPoints(p1, point);\r\n\r\n    \tvar d00 = vec3.dot(v0, v0);\r\n    \tvar d01 = vec3.dot(v0, v1);\r\n    \tvar d11 = vec3.dot(v1, v1);\r\n    \tvar d20 = vec3.dot(v2, v0);\r\n    \tvar d21 = vec3.dot(v2, v1);\r\n    \tvar denom = d00 * d11 - d01 * d01;\r\n\r\n        var result = [(d11 * d20 - d01 * d21) / denom,\r\n            (d00 * d21 - d01 * d20) / denom, 0];\r\n        result[2] = 1 - result[0] - result[1];\r\n    \treturn result;\r\n    }\r\n\r\n    function getNormal (v1, v2, v3) {\r\n        var tmp1 = vec3.create();\r\n        var tmp2 = vec3.create();\r\n        vec3.sub(tmp1, v2, v1);\r\n        vec3.sub(tmp2, v3, v1);\r\n        vec3.cross(tmp1, tmp1, tmp2);\r\n        return tmp1;\r\n    }\r\n\r\n    function getVectorFromPoints (a, b) {\r\n        var output = vec3.create();\r\n        vec3.sub(output, b, a);\r\n        return output;\r\n    }\r\n})();\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('halfedge-cache', function (instance) {\r\n        var superConstructor = Math.HalfEdgeMesh;\r\n        var cachedHalfEdgeMesh = function () {\r\n            superConstructor.call(this);\r\n            var heMesh = this;\r\n            this.cache = {\r\n                meshes: {},\r\n                get: function (key) {\r\n                    var e = this.meshes[key];\r\n                    var builder = Math.HalfEdgeMesh.prototype.builders[key];\r\n                    if (!e || e.rebuild) {\r\n                        e = builder.onCreate(heMesh);\r\n                        heMesh.rebuild = false;\r\n                        this.meshes[key] = e;\r\n                    }\r\n                    if (builder.onClean) builder.onClean(e);\r\n                    return e;\r\n                },\r\n                onVerticesChange: function (vertices) {\r\n                    for (var key in this.meshes) {\r\n                        var e = this.meshes[key];\r\n                        var builder = Math.HalfEdgeMesh.prototype.builders[key];\r\n                        if (builder.onVerticesChange)\r\n                            builder.onVerticesChange(vertices, e);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        cachedHalfEdgeMesh.prototype = Object.create(Math.HalfEdgeMesh.prototype);\r\n        cachedHalfEdgeMesh.prototype.constructor = cachedHalfEdgeMesh;\r\n\r\n        Math.HalfEdgeMesh = cachedHalfEdgeMesh;\r\n\r\n        var _addVertices = Math.HalfEdgeMesh.prototype.addVertices;\r\n        Math.HalfEdgeMesh.prototype.addVertices = function (vertices) {\r\n            _addVertices.call(this, vertices);\r\n            this.invalidateCache();\r\n        };\r\n\r\n        var _addFace = Math.HalfEdgeMesh.prototype.addFace;\r\n        Math.HalfEdgeMesh.prototype.addFace = function (vertices) {\r\n            _addFace.call(this, vertices);\r\n            this.invalidateCache();\r\n        };\r\n\r\n        Math.HalfEdgeMesh.prototype.invalidateCache = function () {\r\n        for (var key in this.cache.meshes) {\r\n            this.cache.meshes[key].rebuild = true;\r\n        }\r\n        };\r\n\r\n        Math.HalfEdgeMesh.prototype.builders = {};\r\n        Math.HalfEdgeMesh.prototype.addBuilder = function (key, builder) {\r\n            this.builders[key] = builder;\r\n        };\r\n\r\n    }, ['halfedge']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('halfedge', function (instance) {\r\n        Math.HalfEdgeMesh = HalfEdgeMesh;\r\n    });\r\n\r\n    var HalfEdgeMesh = function () {\r\n        this.bounds = new Math.Octree();\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.addVertices = function (vertices) {\r\n        if (arguments.length > 1) this.addVertices.apply(this, arguments);\r\n        if (!Array.isArray(vertices)) return;\r\n        this.bounds.addItems(vertices);\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertex = vertices[i];\r\n            var index = this.vertices.indexOf(vertex);\r\n            if (index < 0) {\r\n                var _halfEdge = null;\r\n                if (!vertex._halfEdge) {\r\n                    _halfEdge = {};\r\n                    _halfEdge.computeNormal = VertexComputeNormal;\r\n                    _halfEdge.getFaces = VertexGetFaces;\r\n                    _halfEdge.outEdges = [];\r\n                    vertex._halfEdge = _halfEdge;\r\n                } else _halfEdge = vertex._halfEdge;\r\n                _halfEdge.ownIndex = this.vertices.length;\r\n                this.vertices.push(vertex);\r\n            } else {\r\n                console.error('addVertices: Adding vertex twice!', vertex);\r\n            }\r\n        }\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.addFace = function (vertices) {\r\n        if (arguments.length > 1) this.addFace.apply(this, arguments);\r\n        if (!Array.isArray(vertices)) return;\r\n        if (vertices.length >= 3) {\r\n            var he1 = buildEdge(vertices[0], vertices[1]);\r\n            var he2 = buildEdge(vertices[1], vertices[2], he1.face);\r\n            he1.next = he2;\r\n            this.halfEdges.push(he1, he2);\r\n            if (vertices.length >= 3) {\r\n                var last, prev = he2;\r\n                for (var i = 2; i < vertices.length - 1; i++) {\r\n                    last = buildEdge(vertices[i], vertices[i + 1], he1.face);\r\n                    if (!he2.next) he2.next = last;\r\n                    last.next = prev;\r\n                    this.halfEdges.push(last);\r\n                    prev = last;\r\n                }\r\n                last = buildEdge(vertices[i], vertices[0], he1.face);\r\n                last.next = he1;\r\n                this.halfEdges.push(last);\r\n                prev.next = last;\r\n            }\r\n            this.faces.push(he1.face);\r\n        } else {\r\n            console.error('addFace: 3 or more vertices needed to form a face!');\r\n        }\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.onVerticesChange = function (vertex) {\r\n        if (this.cache && this.cache.onVerticesChange)\r\n            this.cache.onVerticesChange(vertex);\r\n        this.bounds.onVerticesMove(vertex);\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.clear = function () {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    };\r\n\r\n    function buildEdge (start, end, face) {\r\n        var edge = {};\r\n        edge.vertex = end;\r\n        edge.face = face ? face : new HalfEdgeFace(edge);\r\n        edge.opposite = findOppositeEdge(start, end, edge);\r\n        start._halfEdge.outEdges.push(edge);\r\n        edge.next = null;\r\n        return edge;\r\n    }\r\n\r\n    function findOppositeEdge(start, end, he) {\r\n        var opposites = end._halfEdge.outEdges.filter(function (he) {\r\n            return he.vertex === start;\r\n        });\r\n        if (opposites.length > 0) {\r\n            var opposite = opposites[0];\r\n            opposite.opposite = he;\r\n            return opposite;\r\n        } else return null;\r\n    }\r\n\r\n    function VertexGetFaces () {\r\n        return this.outEdges.map(function (edge) {\r\n            return edge.face;\r\n        });\r\n    }\r\n\r\n    function VertexComputeNormal () {\r\n        var normal = [0, 0, 0];\r\n        this.getFaces().forEach(function (face) {\r\n            vec3.add(normal, normal, face.computeRawNormal());\r\n        });\r\n        vec3.normalize(normal, normal);\r\n        return normal;\r\n    }\r\n\r\n    var HalfEdgeFace = function (halfEdge) {\r\n        this.halfEdge = halfEdge;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getEdges = function () {\r\n        var output = [];\r\n        var he = this.halfEdge;\r\n        while (he.next !== this.halfEdge) {\r\n            output.push(he);\r\n            he = he.next;\r\n            if (he === null) {\r\n                var a = 0;\r\n            }\r\n        }\r\n        output.push(he);\r\n        return output;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getVertices = function () {\r\n        return this.getEdges().map(function (edge) {\r\n            return edge.vertex;\r\n        });\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getVerticesTriangulated = function () {\r\n        var triangulated = [];\r\n        var vertices = this.getVertices();\r\n        for (var i = 0; i < vertices.length - 2; i++) {\r\n            triangulated.push([vertices[0], vertices[i + 1], vertices[i + 2]]);\r\n        }\r\n        return triangulated;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeRawNormal = function () {\r\n        var normal = [0, 0, 0];\r\n        this.getVerticesTriangulated().forEach(function (triplet) {\r\n            var triangleNormal = computeNormal(triplet[0], triplet[1], triplet[2]);\r\n            vec3.add(normal, normal, triangleNormal);\r\n        });\r\n        return normal;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeNormal = function () {\r\n        var normal = this.computeRawNormal();\r\n        vec3.normalize(normal, normal);\r\n        return normal;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeCenter = function () {\r\n        return Math.geo.computePointsCenter(this.getVertices());\r\n    };\r\n\r\n    function computeNormal (v1, v2, v3) {\r\n        var tmp1 = vec3.create();\r\n        var tmp2 = vec3.create();\r\n        vec3.sub(tmp1, v2, v1);\r\n        vec3.sub(tmp2, v3, v1);\r\n        vec3.cross(tmp1, tmp1, tmp2);\r\n        return tmp1;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface', function (instance) {\r\n        instance.pane.types.surface = {\r\n            onPaneType: onSurfacePaneType,\r\n            onCreateHeader: onCreateSurfaceHeader\r\n        };\r\n\r\n        instance.events.on('pane.resize', function (pane) {\r\n            if (pane.attrData('pane-type') === 'surface')\r\n                updateCanvasSize(instance, pane);\r\n        });\r\n\r\n        window.addEventListener('resize', function (event) {\r\n            var surfaces = instance.pane.internal.container\r\n                .querySelectorAll('.pane canvas');\r\n            for (var i = 0; i < surfaces.length; i++) {\r\n                updateCanvasSize(instance, surfaces[i].parentNode);\r\n            }\r\n        });\r\n\r\n        instance.surface = {};\r\n    }, ['pane-types']);\r\n\r\n    var surfaceIndex = 0;\r\n    function onSurfacePaneType (pane, instance) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.id = 'surface' + (surfaceIndex++);\r\n        canvas.addEventListener('mouseover', function (event) {\r\n            event.target.focus();\r\n        });\r\n        canvas.className = 'surface';\r\n        pane.appendChild(canvas);\r\n\r\n        var surfaceGUI = document.createElement('div');\r\n        surfaceGUI.className = 'surface-toolbar';\r\n        surfaceGUI.style.float = 'left';\r\n        Ajax.get('partial/surface-toolbar.html', function (result) {\r\n            surfaceGUI.innerHTML = result;\r\n        });\r\n        pane.appendChild(surfaceGUI);\r\n\r\n        instance.surface.map = instance.surface.map || {};\r\n        instance.surface.map[canvas.id] = {\r\n            camera: new Math.Camera()\r\n        };\r\n\r\n        updateCanvasSize(instance, pane);\r\n\r\n        instance.events.trigger('surface.create', canvas);\r\n    }\r\n\r\n    function onCreateSurfaceHeader (header, instance) {\r\n        var label = document.createElement('label');\r\n        label.innerHTML = 'Surface Pane';\r\n        header.appendChild(label);\r\n    }\r\n\r\n    function updateCanvasSize (instance, pane) {\r\n        var canvas = pane.querySelector('canvas');\r\n        var context = canvas.getContext('2d');\r\n        var data = instance.surface.map[canvas.id];\r\n\r\n        var header = pane.querySelector('.pane-header');\r\n        var headerHeight = header ? header.height() : 0;\r\n\r\n        var gui = pane.querySelector('.surface-toolbar');\r\n        var guiWidth = gui ? gui.width() : 0;\r\n\r\n        var width = pane.width() - guiWidth;\r\n        var height = pane.height() - headerHeight;\r\n        canvas.height = height;\r\n        canvas.width = width;\r\n\r\n        context.setTransform(1, 0, 0, 1, 0, 0);\r\n        context.translate(0, height);\r\n        context.scale(1, -1);\r\n\r\n        data.camera.width = width;\r\n        data.camera.height = height;\r\n        mat4.perspective(data.camera.projection, 45 * DEG2RAD, width / height, 0.1, 1000);\r\n        mat4.ortho(data.camera.ortho, 0, width, 0, height, -1, 1);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var originalRotation = null;\r\n    var mouseDownCoords = null;\r\n\r\n    Modules.prototype.add('common-interaction', function (instance) {\r\n        instance.surface.interactions.common = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n\r\n                var data = instance.surface.map[canvas.id];\r\n                data.camera.distance -= (delta * data.camera.distance) / 25;\r\n\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                if (event.target.dataset.moving) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n                    if (data) {\r\n                        var delta = getCoordsDelta(mouseDownCoords, realCoords);\r\n                        combine(data.camera, originalRotation, delta);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 3) {\r\n                    event.target.dataset.moving = 'true';\r\n                    upNormalMouseDown = vec3.equals(data.camera.getUpDirection(), [0, 1, 0]);\r\n                    originalRotation = data.camera.rotation.slice();\r\n                    mouseDownCoords = realCoords;\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 3) {\r\n                    delete event.target.dataset.moving;\r\n                    var data = instance.surface.map[event.target.id];\r\n                    mouseDownCoords = null;\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n    }, ['surface-interaction']);\r\n\r\n    var upNormalMouseDown = true;\r\n    function combine (surface, originalRotation, delta) {\r\n        if (!originalRotation) return;\r\n        if (!upNormalMouseDown) delta[0] = -delta[0];\r\n\r\n        var rotation = surface.rotation;\r\n        rotation[0] = originalRotation[0] + delta[0] * 0.005;\r\n        rotation[1] = originalRotation[1] + delta[1] * 0.005;\r\n        clampRotations(rotation);\r\n    }\r\n\r\n    function getCoordsDelta (initial, current) {\r\n        if (!initial) return [0, 0];\r\n        return [\r\n            initial[0] - current[0],\r\n            current[1] - initial[1]\r\n        ];\r\n    }\r\n\r\n    function clampRotations (rotations) {\r\n        var pi2 = Math.PI * 2;\r\n        if (rotations[0] < 0) rotations[0] = pi2 + rotations[0];\r\n        if (rotations[0] >= pi2) rotations[0] = rotations[0] - pi2;\r\n        if (rotations[1] < 0) rotations[1] = pi2 + rotations[1];\r\n        if (rotations[1] >= pi2) rotations[1] = rotations[1] - pi2;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('object-interaction', function (instance) {\r\n        instance.surface.interactions.object = {\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 1) {\r\n                    var ray = data.camera.getRay(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    var isHit = false, hitPoint = vec3.create();\r\n                    instance.scene.getObjects().forEach(function (node) {\r\n                        isHit = geo.testRayBBox(ray.start, ray.direction, node.data.mesh.bounding, node.data.model, hitPoint);\r\n                        if (isHit) {\r\n                            node.data.selected = true;\r\n                        } else delete node.data.selected;\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-interaction', function (instance) {\r\n        instance.surface.interactions = {};\r\n\r\n        instance.surface.setInteraction = function (surface, name) {\r\n            surface.dataset.interaction = name;\r\n        };\r\n\r\n        instance.surface.getInteractionCallbacks = function (surface) {\r\n            var interactionName = surface.dataset.interaction;\r\n            return instance.surface.interactions[interactionName];\r\n        };\r\n\r\n        instance.surface.onRender = function (canvas, surface) {\r\n            var keepRunning = true;\r\n            var callbacks = instance.surface.getInteractionCallbacks(canvas);\r\n            if (callbacks.onRender) keepRunning = callbacks.onRender(surface);\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                common.onRender(surface);\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            surface.tabIndex = 1000;\r\n\r\n            surface.oncontextmenu = onContextMenu;\r\n\r\n            surface.onkeydown = onSurfaceEvent;\r\n            surface.onkeyup = onSurfaceEvent;\r\n\r\n            surface.onmousewheel = onSurfaceEvent;\r\n            surface.onmousemove = onSurfaceEvent;\r\n            surface.onmousedown = onSurfaceEvent;\r\n            surface.onmouseup = onSurfaceEvent;\r\n            surface.onclick = onSurfaceEvent;\r\n        });\r\n\r\n        function onSurfaceEvent (event) {\r\n            var callbacks = instance.surface.getInteractionCallbacks(event.target);\r\n            var keepRunning = runCallback(callbacks, event);\r\n            if (keepRunning === undefined) keepRunning = true;\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                runCallback(common, event);\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var initialValue = oldPane.dataset.interaction;\r\n            newPane.dataset.interaction = initialValue;\r\n        });\r\n    }, ['surface']);\r\n\r\n    function runCallback (callbacks, event) {\r\n        var realCoords = getLocalCoordinates(event);\r\n        switch (event.type) {\r\n            case 'keydown': if (callbacks.onKeyDown) return callbacks.onKeyDown(event); break;\r\n            case 'keyup': if (callbacks.onKeyUp) return callbacks.onKeyUp(event); break;\r\n\r\n            case 'mousewheel': if (callbacks.onMouseWheel) return callbacks.onMouseWheel(event, realCoords); break;\r\n            case 'mousemove': if (callbacks.onMouseMove) return callbacks.onMouseMove(event, realCoords); break;\r\n            case 'mousedown': if (callbacks.onMouseDown) return callbacks.onMouseDown(event, realCoords); break;\r\n            case 'mouseup': if (callbacks.onMouseUp) return callbacks.onMouseUp(event, realCoords); break;\r\n            case 'click': if (callbacks.onClick) return callbacks.onClick(event, realCoords); break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getLocalCoordinates (event) {\r\n        return [event.layerX, event.layerY];\r\n    }\r\n\r\n    function onContextMenu (event) {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var bytesPerFloat32Element = Float32Array.BYTES_PER_ELEMENT;\r\n\r\n    Modules.prototype.add('render-solid-cache', function (instance) {\r\n        Math.HalfEdgeMesh.prototype.addBuilder('render-solid', solidBuilder);\r\n    }, ['halfedge-cache']);\r\n\r\n    var solidBuilder = {\r\n        onCreate: function (halfEdgeMesh) {\r\n            var indices = [];\r\n            halfEdgeMesh.faces.forEach(function (face) {\r\n                var faceNormal = face.computeNormal();\r\n                face.getVerticesTriangulated().forEach(function (t) {\r\n                    indices.push(t[0]._halfEdge.ownIndex,\r\n                        t[1]._halfEdge.ownIndex, t[2]._halfEdge.ownIndex);\r\n                });\r\n            });\r\n\r\n            var mesh = GL.Mesh.load({\r\n                vertices: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                normals: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                triangles: new Uint16Array(indices)\r\n            });\r\n            this.onVerticesChange(halfEdgeMesh.vertices, mesh);\r\n            return mesh;\r\n        },\r\n        onVerticesChange: function (vertices, mesh) {\r\n            var buffer = mesh.vertexBuffers;\r\n            var vRange = [Number.MAX_VALUE, 0];\r\n            var nRange = [Number.MAX_VALUE, 0];\r\n\r\n            for (var i = 0; i < vertices.length; i++) {\r\n                var vertex = vertices[i];\r\n                var index = vertex._halfEdge.ownIndex;\r\n\r\n                buffer.vertices.data.set(vertex, index * 3);\r\n                vRange[0] = Math.min(vRange[0], index * 3);\r\n                vRange[1] = Math.max(vRange[1], index * 3 + 3);\r\n\r\n                var normal = vertex._halfEdge.computeNormal();\r\n                buffer.normals.data.set(normal, index * 3);\r\n                nRange[0] = Math.min(nRange[0], index * 3);\r\n                nRange[1] = Math.max(nRange[1], index * 3 + 3);\r\n            }\r\n            uploadRange(buffer.vertices, vRange);\r\n            uploadRange(buffer.normals, nRange);\r\n        },\r\n        onClean: function (mesh) {\r\n            if (mesh.vertexBuffers.vertices.dirty) {\r\n                mesh.vertexBuffers.vertices.upload();\r\n                delete mesh.vertexBuffers.vertices.dirty;\r\n            }\r\n            if (mesh.vertexBuffers.normals.dirty) {\r\n                mesh.vertexBuffers.normals.upload();\r\n                delete mesh.vertexBuffers.normals.dirty;\r\n            }\r\n        }\r\n    };\r\n\r\n    function uploadRange (buffer, range) {\r\n        buffer.uploadRange(range[0] * bytesPerFloat32Element,\r\n            (range[1] - range[0]) * bytesPerFloat32Element);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var solidShader = null;\r\n    var wireframeShader = null;\r\n\r\n    Modules.prototype.add('render-solid', function (instance) {\r\n        instance.asset.shader.get('solid', function (s) {\r\n            solidShader = s;\r\n        });\r\n        instance.asset.shader.get('wireframe', function (s) {\r\n            wireframeShader = s;\r\n        });\r\n\r\n        var grid = GL.Mesh.grid({lines:17,size:16});\r\n        var colorsArray = [];\r\n        grid.vertexBuffers.vertices.forEach(function (vertex, bufferIndex) {\r\n            colorsArray.push(0.4, 0.4, 0.4, 1);\r\n        });\r\n        grid.createVertexBuffer('colors', 'a_color', 4, new Float32Array(colorsArray));\r\n        var axisX = GL.Mesh.load({\r\n            vertices: new Float32Array([-8, 0.001, 0, 8, 0.001, 0]),\r\n            colors: new Float32Array([1, 0, 0, 1, 1, 0, 0, 1])\r\n        });\r\n        var axisZ = GL.Mesh.load({\r\n            vertices: new Float32Array([0, 0.001, -8, 0, 0.001, 8]),\r\n            colors: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1])\r\n        });\r\n\r\n        instance.surface.renders.solid = function (surface) {\r\n            var lightDirection = vec3.create();\r\n            surface.camera.getPosition(lightDirection);\r\n            vec3.add(lightDirection, lightDirection, [1, 2, 0]);\r\n            vec3.normalize(lightDirection, lightDirection);\r\n            uniforms.u_lightvector = lightDirection;\r\n\r\n            renderObject(surface, grid, wireframeShader, instance.graphics.gl.LINES);\r\n            renderObject(surface, axisX, wireframeShader, instance.graphics.gl.LINES);\r\n            renderObject(surface, axisZ, wireframeShader, instance.graphics.gl.LINES);\r\n            instance.scene.getObjects().forEach(function (node) {\r\n                var mesh = node.data.mesh.cache.get('render-solid');\r\n                renderObject(surface, mesh, solidShader, node.data.primitive, node.data.model);\r\n            });\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setRender(surface, 'solid');\r\n        });\r\n    }, ['surface-render', 'shader', 'render-solid-cache']);\r\n\r\n    var uniforms = {\r\n        u_color: [0.5, 0.5, 0.5, 1],\r\n        u_lightvector: null,\r\n        u_model: null,\r\n        u_mvp: mat4.create()\r\n    };\r\n\r\n    var temp = mat4.create();\r\n    function renderObject (surface, mesh, shader, primitive, model, indexBufferName) {\r\n        model = model || mat4.create();\r\n\r\n        surface.camera.getViewMatrix(temp);\r\n        mat4.multiply(temp, surface.camera.projection, temp);\r\n        mat4.multiply(uniforms.u_mvp, temp, model);\r\n\r\n        uniforms.u_model = model;\r\n\r\n        if (shader) {\r\n            shader.uniforms(uniforms);\r\n            if (mesh instanceof Math.HalfEdgeMesh) {\r\n                if (mesh) shader.draw(mesh, primitive, indexBufferName);\r\n            } else {\r\n                shader.draw(mesh, primitive, indexBufferName);\r\n            }\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-render', function (instance) {\r\n        instance.surface.renders = {};\r\n\r\n        instance.surface.setRender = function (surface, name) {\r\n            surface.dataset.render = name;\r\n        };\r\n\r\n        instance.surface.getRender = function (surface) {\r\n            var renderName = surface.dataset.render;\r\n            return instance.surface.renders[renderName];\r\n        };\r\n\r\n        var panes = document.querySelectorAll('.pane');\r\n        for (var i = 0; i < panes.length; i++) {\r\n            if (panes[i].dataset.paneType == 'surface') {\r\n                var canvas = panes[i].querySelector('canvas');\r\n                canvas.dataset.render = 'solid';\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            newPane.attrData('surface-render', oldPane.attrData('surface-render'));\r\n        });\r\n    }, ['surface']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action-all', function (instance) {\r\n        instance.surface.interactions.edit.actions.all = {\r\n            init: function (context, event) {\r\n                if (!context.selection.isEmpty()) context.selection.clear();\r\n                else {\r\n                    var selection = context.selection;\r\n                    instance.scene.getObjects().forEach(function (object) {\r\n                        var result = selection.addAll(object.data);\r\n                        object.data.mesh.cache.onVerticesChange(result);\r\n                    });\r\n                }\r\n                context.action = null;\r\n            }\r\n        };\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action-delete', function (instance) {\r\n        instance.surface.interactions.edit.actions.delete = {\r\n            init: function (context, event) {\r\n                if (!context.selection.isEmpty()) {\r\n                    for (var objKey in context.selection.objects) {\r\n                        var obj = context.selection.objects[objKey];\r\n                        var mesh = instance.scene.getObjects()[0].data.mesh;\r\n\r\n                        if (obj.faces && obj.faces.length > 0) {\r\n                            for (var i = 0; i < obj.faces.length; i++)\r\n                                removeFace(mesh, obj.faces[i]);\r\n                        } else if (obj.vertices && obj.vertices.length > 0) {\r\n                            for (var j = 0; j < obj.vertices.length; j++)\r\n                                removeVertex(mesh, obj.vertices[j]);\r\n                        }\r\n\r\n                        context.selection.clear();\r\n                        mesh.invalidateCache();\r\n                    }\r\n                } else console.warn('Cannot delete an empty selection!');\r\n                context.action = null;\r\n            }\r\n        };\r\n\r\n        function removeVertex (mesh, vertex) {\r\n            vertex._halfEdge.getFaces().forEach(function (face) {\r\n                removeFace(mesh, face);\r\n            });\r\n            var vIndex = vertex._halfEdge.ownIndex;\r\n            mesh.vertices.splice(vIndex, 1);\r\n            for (var i = vIndex; i < mesh.vertices.length; i++) {\r\n                mesh.vertices[i]._halfEdge.ownIndex--;\r\n            }\r\n        }\r\n\r\n        function removeFace (mesh, face) {\r\n            var current = face.halfEdge;\r\n            removeHalfEdge(mesh, current);\r\n            while (current.next !== face.halfEdge) {\r\n                current = current.next;\r\n                removeHalfEdge(mesh, current);\r\n            }\r\n            var fIndex = mesh.faces.indexOf(face);\r\n            mesh.faces.splice(fIndex, 1);\r\n        }\r\n\r\n        function removeHalfEdge (mesh, halfEdge) {\r\n            var heIndex = mesh.halfEdges.indexOf(halfEdge);\r\n            mesh.halfEdges.splice(heIndex, 1);\r\n            if (halfEdge.opposite) {\r\n                var outEdges = halfEdge.opposite.vertex._halfEdge.outEdges;\r\n                heIndex = outEdges.indexOf(halfEdge);\r\n                outEdges.splice(heIndex, 1);\r\n            }\r\n        }\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action-extrude', function (instance) {\r\n        instance.surface.interactions.edit.actions.extrude = {\r\n            init: function (context, event) {\r\n                if (!context.selection.isEmpty()) {\r\n                    for (var objKey in context.selection.objects) {\r\n                        var obj = context.selection.objects[objKey];\r\n                        var selectedFaces = obj.faces;\r\n\r\n                        var mesh = instance.scene.getObjects()[0].data.mesh;\r\n\r\n                        var outerEdges = getOuterEdges(selectedFaces);\r\n                        var newOuterEdges = duplicateOuterRing(outerEdges, mesh);\r\n\r\n                        context.selection.clear();\r\n                        for (var i = 0; i < selectedFaces.length; i++) {\r\n                            context.selection.addFace(instance.scene.getObjects()[0].data,\r\n                                selectedFaces[i]);\r\n                        }\r\n                        mesh.invalidateCache();\r\n                    }\r\n                } else console.warn('Cannot extrude an empty selection!');\r\n                context.action = null;\r\n            }\r\n        };\r\n\r\n        function getOuterEdges (faces) {\r\n            var outerEdges = [];\r\n            for (var i = 0; i < faces.length; i++) {\r\n                var faceEdges = faces[i].getEdges();\r\n                for (var j = 0; j < faceEdges.length; j++) {\r\n                    var he = faceEdges[j];\r\n                    if (!he.opposite) console.debug(he);\r\n                    else {\r\n                        var oppositeFace = he.opposite.face;\r\n                        if (!oppositeFace._selected) {\r\n                            outerEdges.push(he);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return outerEdges;\r\n        }\r\n\r\n        function duplicateOuterRing (outerEdges, mesh) {\r\n            var newVertices = [], oldVertices = [];\r\n            for (var i = 0; i < outerEdges.length; i++) {\r\n                var newVertex = Object.assign([], outerEdges[i].vertex);\r\n                newVertex._halfEdge = Object.assign({}, outerEdges[i].vertex._halfEdge);\r\n                delete newVertex._selected;\r\n\r\n                var newOutEdges = [];\r\n                var oldOutEdges = outerEdges[i].vertex._halfEdge.outEdges;\r\n                for (var j = 0; j < oldOutEdges.length; j++) {\r\n                    var outEdge = oldOutEdges[j];\r\n                    if (outEdge.face._selected) {\r\n                        oldOutEdges.splice(oldOutEdges.indexOf(outEdge), 1);\r\n                        newOutEdges.push(outEdge);\r\n                    }\r\n                }\r\n                newVertex._halfEdge.outEdges = newOutEdges;\r\n                oldVertices.push(outerEdges[i].vertex);\r\n                newVertices.push(newVertex);\r\n            }\r\n            mesh.addVertices(newVertices);\r\n            for (i = 0; i < outerEdges.length; i++) {\r\n                var vertexIndex = oldVertices.indexOf(outerEdges[i].vertex);\r\n                outerEdges[i].vertex = newVertices[vertexIndex];\r\n            }\r\n            for (i = 0; i < newVertices.length; i++) {\r\n                var nextIndex = i + 1 >= newVertices.length ? 0 : i + 1;\r\n                mesh.addFace([oldVertices[i], oldVertices[nextIndex],\r\n                        newVertices[nextIndex], newVertices[i]]);\r\n            }\r\n        }\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action-face', function (instance) {\r\n        instance.surface.interactions.edit.actions.face = {\r\n            init: function (context, event) {\r\n                if (!context.selection.isEmpty()) {\r\n                    var center = context.selection.getCenter();\r\n                    var normal = context.selection.getNormal();\r\n                    console.debug('sorting...', center, normal);\r\n                    var vertexCounterClockwise = function (a, b) {\r\n                        var ac = vec3.sub(vec3.create(), a, center);\r\n                        var bc = vec3.sub(vec3.create(), b, center);\r\n                        return -vec3.dot(normal, vec3.cross(vec3.create(), ac, bc));\r\n                    };\r\n\r\n                    for (var objKey in context.selection.objects) {\r\n                        var obj = context.selection.objects[objKey];\r\n                        var mesh = instance.scene.getObjects()[0].data.mesh;\r\n\r\n                        if (obj.vertices && obj.vertices.length > 0) {\r\n                            var sortedVertices = obj.vertices.sort(vertexCounterClockwise);\r\n                            mesh.addFace(sortedVertices);\r\n                        }\r\n\r\n                        context.selection.clear();\r\n                        mesh.invalidateCache();\r\n                    }\r\n                } else console.warn('Cannot create a face with an empty selection!');\r\n                context.action = null;\r\n            }\r\n        };\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action-move', function (instance) {\r\n        var initialCoords = vec2.create();\r\n        var selectionNormal = null;\r\n        var axisOrigin = null;\r\n        var isY = false;\r\n\r\n        instance.surface.interactions.edit.actions.move = {\r\n            axis: null,\r\n            init: function (context, event) {\r\n                vec2.copy(initialCoords, context.lastCoords);\r\n                selectionNormal = context.selection.getNormal();\r\n                for (var name in context.selection.objects) {\r\n                    var selectedObj = context.selection.objects[name];\r\n                    for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                        var vertex = selectedObj.vertices[i];\r\n                        vertex.originalPosition = vertex.slice();\r\n                    }\r\n                }\r\n            },\r\n            onMouseMove: function (context, event) {\r\n                if (!context.selection.isEmpty()) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n\r\n                    var currentRay = data.camera.getRay(null, context.lastCoords,\r\n                        [canvas.width, canvas.height]);\r\n                    var initialRay = data.camera.getRay(null, initialCoords,\r\n                        [canvas.width, canvas.height]);\r\n                    var cameraDirection = data.camera.getDirection();\r\n\r\n                    var hitPointInitial = [0, 0, 0], hitPointCurrent = [0, 0, 0];\r\n\r\n                    var selectionCenter = context.selection.getCenter();\r\n                    Math.geo.rayPlaneCollision(initialRay.start, initialRay.direction,\r\n                        selectionCenter, cameraDirection, hitPointInitial);\r\n\r\n                    var delta = vec3.create();\r\n\r\n                    if (this.axis) {\r\n                        var currentRayEnd = vec3.scaleAndAdd(vec3.create(), currentRay.start, currentRay.direction, 100);\r\n                        var axisStart = vec3.scale(vec3.create(), this.axis, -50);\r\n                        var axisEnd = vec3.scale(vec3.create(), this.axis, 50);\r\n                        Math.geo.closestPointsBetweenSegments(axisStart, axisEnd, currentRay.start, currentRayEnd, hitPointCurrent);\r\n\r\n                        if (!axisOrigin) {\r\n                            axisOrigin = vec3.copy(vec3.create(), hitPointCurrent);\r\n                        } else vec3.sub(delta, hitPointCurrent, axisOrigin);\r\n                    } else {\r\n                        Math.geo.rayPlaneCollision(currentRay.start, currentRay.direction,\r\n                            selectionCenter, cameraDirection, hitPointCurrent);\r\n                        vec3.sub(delta, hitPointCurrent, hitPointInitial);\r\n                    }\r\n\r\n                    if (context.isControlDown)\r\n                        for (var j = 0; j < 3; j++)\r\n                            delta[j] = Math.round(delta[j]);\r\n\r\n                    for (var name in context.selection.objects) {\r\n                        var hitPoint = [0, 0, 0];\r\n                        var selectedObj = context.selection.objects[name];\r\n                        var sceneObj = instance.scene.getObjectByName(name);\r\n\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            if (vertex.originalPosition)\r\n                                vec3.add(vertex, vertex.originalPosition, delta);\r\n                        }\r\n                        sceneObj.mesh.onVerticesChange(selectedObj.vertices);\r\n                    }\r\n                }\r\n            },\r\n            onMouseDown: function (context, event) {\r\n                if (event.which === 1 || event.which === 3) {\r\n                    var restore = event.which === 3;\r\n                    for (var name in context.selection.objects) {\r\n                        var selectedObj = context.selection.objects[name];\r\n                        var sceneObj = instance.scene.getObjectByName(name);\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            if (vertex.originalPosition) {\r\n                                if (restore)\r\n                                    vec3.copy(vertex, vertex.originalPosition);\r\n                                delete vertex.originalPosition;\r\n                            }\r\n                        }\r\n                        sceneObj.mesh.bounds.updateDimensions();\r\n                        sceneObj.mesh.onVerticesChange(sceneObj.mesh.vertices);\r\n                    }\r\n                }\r\n                isY = false;\r\n                this.axis = null;\r\n                context.action = null;\r\n            },\r\n            onKeyDown: function (context, event) {\r\n                if (event.key === 'x') this.axis = vec3.set(vec3.create(), 1, 0, 0);\r\n                else if (event.key === 'y') {\r\n                    if (isY) {\r\n                        this.axis = selectionNormal;\r\n                        isY = false;\r\n                    } else {\r\n                        this.axis = vec3.set(vec3.create(), 0, 1, 0);\r\n                        isY = true;\r\n                    }\r\n                } else if (event.key === 'z') this.axis = vec3.set(vec3.create(), 0, 0, 1);\r\n                axisOrigin = null;\r\n            }\r\n        };\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action-rotate', function (instance) {\r\n        var selectionCenter2d = vec2.create();\r\n        var selectionCenter = vec3.create();\r\n        var initialVector = vec2.create();\r\n\r\n        var aux = vec2.create();\r\n\r\n        instance.surface.interactions.edit.actions.rotate = {\r\n            axis: vec3.create(),\r\n            init: function (context, event) {\r\n                if (context.selection.isEmpty()) {\r\n                    context.action = null;\r\n                    return;\r\n                }\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n\r\n                var center = context.selection.getCenter();\r\n                vec3.copy(selectionCenter, center);\r\n                vec3.transformMat4(center, center, data.camera.getViewMatrix());\r\n                vec3.transformMat4(center, center, data.camera.projection);\r\n                center[0] = ((center[0] + 1) / 2) * canvas.width;\r\n                center[1] = ((center[1] + 1) / 2) * canvas.height;\r\n                vec2.copy(selectionCenter2d, center);\r\n\r\n                data.camera.getDirection(this.axis);\r\n\r\n                vec2.sub(initialVector, selectionCenter2d, context.lastCoords);\r\n                vec2.normalize(initialVector, initialVector);\r\n                for (var name in context.selection.objects) {\r\n                    var selectedObj = context.selection.objects[name];\r\n                    for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                        var vertex = selectedObj.vertices[i];\r\n                        vertex.originalPosition = vertex.slice();\r\n                    }\r\n                }\r\n            },\r\n            onMouseMove: function (context, event) {\r\n                if (!context.selection.isEmpty()) {\r\n                    var fromSelectionToCursor = vec2.sub(vec2.create(), selectionCenter2d, context.lastCoords);\r\n                    vec2.normalize(fromSelectionToCursor, fromSelectionToCursor);\r\n                    var determinant = fromSelectionToCursor[0] * initialVector[1] -\r\n                        initialVector[0] * fromSelectionToCursor[1];\r\n                    var delta = Math.atan2(determinant, vec2.dot(fromSelectionToCursor, initialVector));\r\n                    var negatedCenter = vec3.negate(vec3.create(), selectionCenter);\r\n\r\n                    var tranform = mat4.create();\r\n                    mat4.translate(tranform, tranform, selectionCenter);\r\n                    mat4.rotate(tranform, tranform, delta, this.axis);\r\n                    mat4.translate(tranform, tranform, negatedCenter);\r\n\r\n                    for (var name in context.selection.objects) {\r\n                        var selectedObj = context.selection.objects[name];\r\n                        var sceneObj = instance.scene.getObjectByName(name);\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            vec3.transformMat4(vertex, vertex.originalPosition, tranform);\r\n                        }\r\n                        sceneObj.mesh.onVerticesChange(selectedObj.vertices);\r\n                    }\r\n                }\r\n            },\r\n            onMouseDown: function (context, event) {\r\n                if (event.which === 1 || event.which === 3) {\r\n                    var restore = event.which === 3;\r\n                    for (var name in context.selection.objects) {\r\n                        var selectedObj = context.selection.objects[name];\r\n                        var sceneObj = instance.scene.getObjectByName(name);\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            if (vertex.originalPosition) {\r\n                                if (restore)\r\n                                    vec3.copy(vertex, vertex.originalPosition);\r\n                                delete vertex.originalPosition;\r\n                            }\r\n                        }\r\n                        sceneObj.mesh.bounds.updateDimensions();\r\n                        sceneObj.mesh.onVerticesChange(sceneObj.mesh.vertices);\r\n                    }\r\n                }\r\n                context.action = null;\r\n            },\r\n            onKeyDown: function (context, event) {\r\n                if (event.key === 'x') this.axis = vec3.set(vec3.create(), 1, 0, 0);\r\n                else if (event.key === 'y') this.axis = vec3.set(vec3.create(), 0, 1, 0);\r\n                else if (event.key === 'z') this.axis = vec3.set(vec3.create(), 0, 0, 1);\r\n            }\r\n        };\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action-scale', function (instance) {\r\n        var selectionCenter2d = vec2.create();\r\n        var selectionCenter = vec3.create();\r\n        var initialDistance = 0;\r\n\r\n        var aux = vec2.create();\r\n\r\n        instance.surface.interactions.edit.actions.scale = {\r\n            axis: null,\r\n            init: function (context, event) {\r\n                if (context.selection.isEmpty()) {\r\n                    context.action = null;\r\n                    return;\r\n                }\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n\r\n                var center = context.selection.getCenter();\r\n                vec3.copy(selectionCenter, center);\r\n                vec3.transformMat4(center, center, data.camera.getViewMatrix());\r\n                vec3.transformMat4(center, center, data.camera.projection);\r\n                center[0] = ((center[0] + 1) / 2) * canvas.width;\r\n                center[1] = ((center[1] + 1) / 2) * canvas.height;\r\n                vec2.copy(selectionCenter2d, center);\r\n\r\n                vec2.sub(aux, context.lastCoords, selectionCenter2d);\r\n                initialDistance = vec2.length(aux);\r\n                for (var name in context.selection.objects) {\r\n                    var selectedObj = context.selection.objects[name];\r\n                    for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                        var vertex = selectedObj.vertices[i];\r\n                        vertex.originalPosition = vertex.slice();\r\n                    }\r\n                }\r\n            },\r\n            onMouseMove: function (context, event) {\r\n                if (!context.selection.isEmpty()) {\r\n                    vec2.sub(aux, context.lastCoords, selectionCenter2d);\r\n                    var delta = (vec2.length(aux) / initialDistance);\r\n                    var vectorDelta = vec3.scale(vec3.create(), this.axis || [1, 1, 1], delta);\r\n                    var negatedCenter = vec3.negate(vec3.create(), selectionCenter);\r\n\r\n                    var tranform = mat4.create();\r\n                    mat4.translate(tranform, tranform, selectionCenter);\r\n                    mat4.scale(tranform, tranform, vectorDelta);\r\n                    mat4.translate(tranform, tranform, negatedCenter);\r\n\r\n                    for (var name in context.selection.objects) {\r\n                        var selectedObj = context.selection.objects[name];\r\n                        var sceneObj = instance.scene.getObjectByName(name);\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            vec3.transformMat4(vertex, vertex.originalPosition, tranform);\r\n                        }\r\n                        sceneObj.mesh.onVerticesChange(selectedObj.vertices);\r\n                    }\r\n                }\r\n            },\r\n            onMouseDown: function (context, event) {\r\n                if (event.which === 1 || event.which === 3) {\r\n                    var restore = event.which === 3;\r\n                    for (var name in context.selection.objects) {\r\n                        var selectedObj = context.selection.objects[name];\r\n                        var sceneObj = instance.scene.getObjectByName(name);\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            if (vertex.originalPosition) {\r\n                                if (restore)\r\n                                    vec3.copy(vertex, vertex.originalPosition);\r\n                                delete vertex.originalPosition;\r\n                            }\r\n                        }\r\n                        sceneObj.mesh.bounds.updateDimensions();\r\n                        sceneObj.mesh.onVerticesChange(sceneObj.mesh.vertices);\r\n                    }\r\n                }\r\n                this.axis = null;\r\n                context.action = null;\r\n            },\r\n            onKeyDown: function (context, event) {\r\n                if (event.key === 'x') this.axis = vec3.set(vec3.create(), 1, 0, 0);\r\n                else if (event.key === 'y') this.axis = vec3.set(vec3.create(), 0, 1, 0);\r\n                else if (event.key === 'z') this.axis = vec3.set(vec3.create(), 0, 0, 1);\r\n            }\r\n        };\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var bytesPerFloat32Element = Float32Array.BYTES_PER_ELEMENT;\r\n\r\n    Modules.prototype.add('edit-interaction-render-cache', function (instance) {\r\n        Math.HalfEdgeMesh.prototype.addBuilder('edit-interaction-render-wireframe', wireframeBuilder);\r\n        Math.HalfEdgeMesh.prototype.addBuilder('edit-interaction-render-vertices', verticesBuilder);\r\n    }, ['edit-interaction', 'shader']);\r\n\r\n    var wireframeBuilder = {\r\n        onCreate: function (halfEdgeMesh) {\r\n            var indices = [];\r\n            halfEdgeMesh.faces.forEach(function (face) {\r\n                face.getVertices().forEach(function (vertex, i, array) {\r\n                    var index = i >= array.length - 1 ? 0 : i + 1;\r\n                    indices.push(vertex._halfEdge.ownIndex);\r\n                    indices.push(array[index]._halfEdge.ownIndex);\r\n                });\r\n            });\r\n\r\n            var mesh = GL.Mesh.load({\r\n                vertices: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                colors: new Float32Array(halfEdgeMesh.vertices.length * 4),\r\n                lines: new Uint16Array(indices)\r\n            });\r\n            this.onVerticesChange(halfEdgeMesh.vertices, mesh);\r\n            return mesh;\r\n        },\r\n        onVerticesChange: function (vertices, mesh) {\r\n            var buffer = mesh.vertexBuffers;\r\n            var vRange = [Number.MAX_VALUE, 0];\r\n            var cRange = [Number.MAX_VALUE, 0];\r\n            for (var i = 0; i < vertices.length; i++) {\r\n                var vertex = vertices[i];\r\n                var index = vertex._halfEdge.ownIndex;\r\n                buffer.vertices.data.set(vertex, index * 3);\r\n                vRange[0] = Math.min(vRange[0], index * 3);\r\n                vRange[1] = Math.max(vRange[1], index * 3 + 3);\r\n                var color = vertex._selected ? [1, 0.4, 0.1, 1] : [0, 0, 0, 1];\r\n                buffer.colors.data.set(color, index * 4);\r\n                cRange[0] = Math.min(cRange[0], index * 4);\r\n                cRange[1] = Math.max(cRange[1], index * 4 + 4);\r\n            }\r\n            uploadRange(buffer.vertices, vRange);\r\n            uploadRange(buffer.colors, cRange);\r\n        }\r\n    };\r\n\r\n    var verticesBuilder = {\r\n        onCreate: function (halfEdgeMesh) {\r\n            var mesh = GL.Mesh.load({\r\n                vertices: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                colors: new Float32Array(halfEdgeMesh.vertices.length * 4)\r\n            });\r\n            this.onVerticesChange(halfEdgeMesh.vertices, mesh);\r\n            return mesh;\r\n        },\r\n        onVerticesChange: function (vertices, mesh) {\r\n            var buffer = mesh.vertexBuffers;\r\n            var vRange = [Number.MAX_VALUE, 0];\r\n            var cRange = [Number.MAX_VALUE, 0];\r\n            for (var i = 0; i < vertices.length; i++) {\r\n                var vertex = vertices[i];\r\n                var index = vertex._halfEdge.ownIndex;\r\n\r\n                buffer.vertices.data.set(vertex, index * 3);\r\n                vRange[0] = Math.min(vRange[0], index * 3);\r\n                vRange[1] = Math.max(vRange[1], index * 3 + 3);\r\n\r\n                var color = vertex._selected ? [1, 0.4, 0.1, 1] : [0, 0, 0, 1];\r\n                buffer.colors.data.set(color, index * 4);\r\n                cRange[0] = Math.min(cRange[0], index * 4);\r\n                cRange[1] = Math.max(cRange[1], index * 4 + 4);\r\n            }\r\n            uploadRange(buffer.vertices, vRange);\r\n            uploadRange(buffer.colors, cRange);\r\n        }\r\n    };\r\n\r\n    function uploadRange (buffer, range) {\r\n        buffer.uploadRange(range[0] * bytesPerFloat32Element,\r\n            (range[1] - range[0]) * bytesPerFloat32Element);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var shader = null;\r\n\r\n    Modules.prototype.add('edit-interaction-render', function (instance) {\r\n        instance.asset.shader.get('wireframe', function (s) {\r\n            shader = s;\r\n        });\r\n\r\n        var vertices = [], colors = [], count = 0;\r\n        for (var rads = 0; rads < (Math.PI * 2); rads += 0.1) {\r\n            vertices[count * 3 + 0] = Math.sin(rads) * 5;\r\n            vertices[count * 3 + 1] = Math.cos(rads) * 5;\r\n            vertices[count * 3 + 2] = 0;\r\n            colors[count * 4 + 0] = 1;\r\n            colors[count * 4 + 1] = 1;\r\n            colors[count * 4 + 2] = 1;\r\n            colors[count * 4 + 3] = 1;\r\n            count++;\r\n        }\r\n        var circle = GL.Mesh.load({\r\n            vertices: new Float32Array(vertices),\r\n            colors: new Float32Array(colors)\r\n        });\r\n        var bounds = GL.Mesh.load({\r\n            vertices: new Float32Array([\r\n                0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, -0.5, 0.5, -0.5, -0.5, 0.5,\r\n                0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5, -0.5, -0.5, -0.5, -0.5, -0.5,\r\n            ]),\r\n            colors: new Float32Array([\r\n                0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1,\r\n                0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1\r\n            ]),\r\n            wireframe: new Uint16Array([\r\n                0, 1, 1, 3, 3, 2, 2, 0,\r\n                4, 5, 5, 7, 7, 6, 6, 4,\r\n                0, 4, 1, 5, 2, 6, 3, 7\r\n            ])\r\n        });\r\n\r\n        var uniforms = {\r\n            u_mvp: mat4.create()\r\n        };\r\n\r\n        instance.surface.interactions.edit.drawBounds = null;\r\n        instance.surface.interactions.edit.onRender = function (surface) {\r\n            var selection = this.selection;\r\n            instance.scene.getObjects().forEach(function (node) {\r\n                var obj = node.data;\r\n\r\n                var wireframe = obj.mesh.cache.get('edit-interaction-render-wireframe');\r\n                var vertices = obj.mesh.cache.get('edit-interaction-render-vertices');\r\n                var drawBounds = instance.surface.interactions.edit.drawBounds;\r\n\r\n                renderObject(surface, wireframe, shader, instance.graphics.gl.LINES);\r\n                renderObject(surface, vertices, shader, instance.graphics.gl.POINTS);\r\n                if (drawBounds !== null)\r\n                    renderBounds(surface, shader, bounds, obj.mesh.bounds, drawBounds);\r\n\r\n                if (!selection.isEmpty()) {\r\n                    var c = selection.getCenter();\r\n                    vec3.transformMat4(c, c, surface.camera.getViewMatrix());\r\n                    vec3.transformMat4(c, c, surface.camera.projection);\r\n                    c[0] = ((c[0] + 1) / 2) * surface.camera.width;\r\n                    c[1] = ((c[1] + 1) / 2) * surface.camera.height;\r\n\r\n                    mat4.identity(uniforms.u_mvp);\r\n                    mat4.translate(uniforms.u_mvp, uniforms.u_mvp, [c[0], c[1], 0]);\r\n                    mat4.multiply(uniforms.u_mvp, surface.camera.ortho, uniforms.u_mvp);\r\n\r\n                    shader.uniforms(uniforms);\r\n                    shader.draw(circle, instance.graphics.gl.LINE_LOOP);\r\n                }\r\n            });\r\n        };\r\n\r\n        var temp = mat4.create();\r\n        function renderObject (surface, mesh, shader, primitive, model, indexBufferName) {\r\n            model = model || mat4.create();\r\n\r\n            surface.camera.getViewMatrix(temp);\r\n            mat4.multiply(temp, surface.camera.projection, temp);\r\n            mat4.multiply(uniforms.u_mvp, temp, model);\r\n\r\n            uniforms.u_model = model;\r\n\r\n            if (shader) {\r\n                shader.uniforms(uniforms);\r\n                if (mesh instanceof Math.HalfEdgeMesh) {\r\n                    if (mesh) shader.draw(mesh, primitive, indexBufferName);\r\n                } else {\r\n                    shader.draw(mesh, primitive, indexBufferName);\r\n                }\r\n            }\r\n        }\r\n\r\n        var boundsModel = mat4.create();\r\n        function renderBounds (surface, shader, bounds, octree, recursive) {\r\n            updateBoundsModel(boundsModel, octree);\r\n            renderObject(surface, bounds, shader, instance.graphics.gl.LINES, boundsModel, 'wireframe');\r\n            if (recursive && octree.children)\r\n                for (var i = 0; i < octree.children.length; i++)\r\n                    renderBounds(surface, shader, bounds, octree.children[i], instance.graphics.gl.LINES);\r\n        }\r\n\r\n        function updateBoundsModel (model, octree) {\r\n            mat4.identity(model);\r\n            var scale = [0, 0, 0], position = [0, 0, 0];\r\n            vec3.lerp(position, octree.aabb.min, octree.aabb.max, 0.5);\r\n            mat4.translate(model, model, position);\r\n            vec3.sub(scale, octree.aabb.max, octree.aabb.min);\r\n            mat4.scale(model, model, scale);\r\n        }\r\n    }, ['edit-interaction', 'shader', 'edit-interaction-render-cache']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-selection', function (instance) {\r\n        instance.surface.interactions.edit.selection = {\r\n            objects: {},\r\n            addAll: function (object) {\r\n                var result = [];\r\n                var selection = this;\r\n                object.mesh.vertices.forEach(function (vertex) {\r\n                    toggleVertex(selection, object, vertex);\r\n                    result.push(vertex);\r\n                });\r\n                return result;\r\n            },\r\n            add: function (ray, object, camera) {\r\n                var position = camera.getPosition();\r\n                var selection = this;\r\n\r\n                var result = {\r\n                    vertex: null,\r\n                    face: null\r\n                };\r\n\r\n                var vertexSelectionMargin = camera.distance / 200;\r\n                var vertices = object.mesh.bounds.getCollidingItems(ray);\r\n                var rayVertices = vertices.filter(function (vertex) {\r\n                    return Math.geo.rayPointDistance(ray.start, ray.direction, vertex) <= vertexSelectionMargin;\r\n                });\r\n                var vertex = Math.geo.findClosestPoint(position, rayVertices);\r\n                if (vertex) result.vertex = vertex;\r\n\r\n                var uniqueFaces = getFacesFromVertices(vertices);\r\n                uniqueFaces = uniqueFaces.filter(function (face) {\r\n                    return Math.geo.rayFaceCollision(ray.start, ray.direction,\r\n                        face.getVertices());\r\n                });\r\n                var closestFace = Math.geo.findClosestFace(position, uniqueFaces);\r\n                if (closestFace) result.face = closestFace;\r\n\r\n                var vertexDistance = result.vertex ? Math.geo.pointPointDistance(position, result.vertex) : Number.MAX_VALUE;\r\n                var faceDistance = result.face ? Math.geo.pointPointDistance(position, result.face.computeCenter()) : Number.MAX_VALUE;\r\n\r\n                if (faceDistance > vertexDistance) {\r\n                    result.face = null;\r\n                    toggleVertex(selection, object, result.vertex);\r\n                } else {\r\n                    result.vertex = null;\r\n                    toggleFace(selection, object, result.face);\r\n                }\r\n\r\n                return result;\r\n            },\r\n            addFace: function (object, face) {\r\n                toggleFace(this, object, face);\r\n            },\r\n            getCenter: function () {\r\n                //TODO: take into account multiple objects\r\n                var name = Object.keys(this.objects)[0];\r\n                return Math.geo.computePointsCenter(this.objects[name].vertices);\r\n            },\r\n            getNormal: function () {\r\n                var normal = vec3.create();\r\n                for (var name in this.objects) {\r\n                    var obj = this.objects[name];\r\n                    for (var i = 0; i < obj.vertices.length; i++) {\r\n                        var vertex = obj.vertices[i];\r\n                        var n = vertex._halfEdge.computeNormal();\r\n                        vec3.add(normal, normal, n);\r\n                    }\r\n                }\r\n                vec3.normalize(normal, normal);\r\n                return normal;\r\n            },\r\n            clear: function () {\r\n                for (var name in this.objects) {\r\n                    var selectedObj = this.objects[name];\r\n                    var sceneObj = instance.scene.getObjectByName(name);\r\n                    for (var i = 0; i < selectedObj.faces.length; i++) {\r\n                        var face = selectedObj.faces[i];\r\n                        if (face._selected) delete face._selected;\r\n                    }\r\n                    for (i = 0; i < selectedObj.vertices.length; i++) {\r\n                        var vertex = selectedObj.vertices[i];\r\n                        if (vertex._selected) delete vertex._selected;\r\n                    }\r\n                    sceneObj.mesh.onVerticesChange(selectedObj.vertices);\r\n                }\r\n                this.objects = {};\r\n            },\r\n            isEmpty: function () {\r\n                return !Object.keys(this.objects).length;\r\n            }\r\n        };\r\n\r\n    }, ['edit-interaction']);\r\n\r\n    function toggleVertex (selection, object, vertex) {\r\n        if (vertex) {\r\n            if (toggle(selection, object, vertex, 'vertices')) {\r\n                vertex._selected = true;\r\n                vertex._halfEdge.getFaces().forEach(function (face) {\r\n                    var selectedVertices = selection.objects[object.name].vertices;\r\n                    var faceVertices = face.getVertices();\r\n                    var allSelected = true;\r\n                    faceVertices.forEach(function (vertex) {\r\n                        allSelected &= selectedVertices.includes(vertex);\r\n                    });\r\n                    if (allSelected && !face._selected)\r\n                        toggleFace(selection, object, face);\r\n                });\r\n            } else delete vertex._selected;\r\n        }\r\n    }\r\n\r\n    function toggleEdge (selection, object, edge) {\r\n        if (edge) {\r\n            if (toggle(selection, object, edge, 'edges')) {\r\n                edge._selected = true;\r\n            } else delete edge._selected;\r\n        }\r\n    }\r\n\r\n    function toggleFace (selection, object, face) {\r\n        if (face) {\r\n            if (toggle(selection, object, face, 'faces')) {\r\n                face._selected = true;\r\n                face.getVertices().forEach(function (vertex) {\r\n                    if (!vertex._selected)\r\n                        toggleVertex(selection, object, vertex);\r\n                });\r\n            } else delete face._selected;\r\n        }\r\n    }\r\n\r\n    function toggle (selection, object, item, arrayName) {\r\n        initObjectIfNeeded(selection, object);\r\n        var array = selection.objects[object.name][arrayName];\r\n        var index = array.indexOf(item);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n            delObjectIfNeeded(selection, object);\r\n            return false;\r\n        } else {\r\n            array.push(item);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function initObjectIfNeeded (selection, object) {\r\n        var name = object.name;\r\n        if (!selection.objects[name]) {\r\n            selection.objects[name] = {\r\n                faces: [],\r\n                edges: [],\r\n                vertices: []\r\n            };\r\n        }\r\n    }\r\n\r\n    function delObjectIfNeeded (selection, object) {\r\n        var name = object.name;\r\n        if (selection.objects[name]) {\r\n            var objSelection = selection.objects[name];\r\n            if (!objSelection.vertices.length &&\r\n                !objSelection.vertices.length &&\r\n                !objSelection.vertices.length)\r\n                delete selection.objects[name];\r\n        }\r\n    }\r\n\r\n    function getEdgesFromVertices (vertices) {\r\n        var edges = [];\r\n        vertices.forEach(function (vertex) {\r\n            vertex._halfEdge.outEdges.forEach(function (edge) {\r\n                if (edges.indexOf(edge) === -1)\r\n                    edges.push(edge);\r\n            });\r\n        });\r\n        return edges;\r\n    }\r\n\r\n    function getFacesFromVertices (vertices) {\r\n        var faces = [];\r\n        vertices.forEach(function (vertex) {\r\n            vertex._halfEdge.getFaces().forEach(function (face) {\r\n                if (faces.indexOf(face) === -1)\r\n                    faces.push(face);\r\n            });\r\n        });\r\n        return faces;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction', function (instance) {\r\n        var mouseDownCoords = vec2.create();\r\n\r\n        instance.surface.interactions.edit = {\r\n            actions: {},\r\n            action: null,\r\n            isMouseDown: false,\r\n            isShiftDown: false,\r\n            isControlDown: false,\r\n            lastCoords: [0, 0],\r\n            onMouseMove: function (event, realCoords) {\r\n                vec2.copy(this.lastCoords, realCoords);\r\n                if (this.isMouseDown && !this.action) {\r\n                    var delta2d = vec2.sub(vec2.create(), mouseDownCoords, realCoords);\r\n                    if (vec2.length(delta2d) > 10) this.setAction('move', event);\r\n                }\r\n                this.runAction('onMouseMove', event, realCoords);\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 1) this.isMouseDown = false;\r\n                this.runAction('onMouseUp', event, realCoords);\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                if (!this.action) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n\r\n                    if (event.which === 1) {\r\n                        this.isMouseDown = true;\r\n\r\n                        var ray = data.camera.getRay(null, realCoords,\r\n                            [canvas.width, canvas.height]);\r\n\r\n                        var selection = this.selection;\r\n                        var shiftDown = this.isShiftDown;\r\n                        instance.scene.getObjects().forEach(function (node) {\r\n                            if (!shiftDown) selection.clear();\r\n                            var result = selection.add(ray, node.data, data.camera);\r\n                            if (result.vertex)\r\n                                node.data.mesh.cache.onVerticesChange([result.vertex]);\r\n                            if (result.face)\r\n                                node.data.mesh.cache.onVerticesChange(result.face.getVertices());\r\n                        });\r\n                        return false;\r\n                    }\r\n                }\r\n                this.runAction('onMouseDown', event, realCoords);\r\n                return true;\r\n            },\r\n            onKeyDown: function (event, realCoords) {\r\n                this.isShiftDown = event.shiftKey;\r\n                this.isShiftDown = event.ctrlKey;\r\n                if (!this.action) {\r\n                    if (event.key === 'a') this.setAction('all', event);\r\n                    else if (event.key === 'g') this.setAction('move', event);\r\n                    else if (event.key === 's') this.setAction('scale', event);\r\n                    else if (event.key === 'r') this.setAction('rotate', event);\r\n                    else if (event.key === 'f') this.setAction('face', event);\r\n                    else if (event.keyCode === 46) this.setAction('delete', event);\r\n                    else if (event.key === 'e') {\r\n                        this.setAction('extrude', event);\r\n                        this.setAction('move', event);\r\n                    } else if (event.key === 'b') {\r\n                        if (this.drawBounds === null) this.drawBounds = false;\r\n                        else if (this.drawBounds === false) this.drawBounds = true;\r\n                        else if (this.drawBounds === true) this.drawBounds = null;\r\n                    }\r\n                } else {\r\n                    if (event.keyCode === 13) this.action = null;\r\n                    else this.runAction('onKeyDown', event, realCoords);\r\n                }\r\n            },\r\n            onKeyUp: function (event, realCoords) {\r\n                this.isShiftDown = event.shiftKey;\r\n                this.isShiftDown = event.ctrlKey;\r\n                this.runAction('onKeyUp', event, realCoords);\r\n            },\r\n            setAction: function (name, event) {\r\n                if (name && this.actions[name]) {\r\n                    this.action = name;\r\n                    this.runAction('init', event);\r\n                }\r\n            },\r\n            runAction : function (callbackName, event) {\r\n                if (this.action && this.actions[this.action]) {\r\n                    var action = this.actions[this.action];\r\n                    var callback = action[callbackName];\r\n                    if (callback) callback.call(action, this, event);\r\n                }\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setInteraction(surface, 'edit');\r\n        });\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Graphics = function (instance) {\r\n        this.gl = GL.create({\r\n            height: screen.height,\r\n            width: screen.width\r\n        });\r\n        this.gl.animate();\r\n        this.gl.ondraw = function () {\r\n            var renderTargets = document.querySelectorAll('canvas');\r\n            for (var i = 0; i < renderTargets.length; i++)\r\n                drawRenderTarget(instance, renderTargets[i]);\r\n        };\r\n        this.gl.clearColor(0.349, 0.349, 0.349, 1);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n\r\n        console.info(this.gl.getParameter(this.gl.VERSION));\r\n        console.info(this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION));\r\n    };\r\n\r\n    Modules.prototype.add('graphics', function (instance) {\r\n        instance.graphics = new Graphics(instance);\r\n    });\r\n\r\n    function drawRenderTarget (instance, canvas) {\r\n        var width  = canvas.clientWidth, height = canvas.clientHeight;\r\n        var data = instance.surface.map[canvas.id];\r\n        var gl = instance.graphics.gl;\r\n\r\n        var c = instance.graphics.gl.canvas;\r\n        gl.viewport(0, c.height - height, width, height);\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        var mainRender = instance.surface.getRender(canvas);\r\n        var surfaceRender = instance.surface.onRender;\r\n        if (mainRender) mainRender(data);\r\n        if (surfaceRender) surfaceRender(canvas, data);\r\n\r\n        var context = canvas.getContext('2d');\r\n        if (context) context.drawImage(c, 0, 0, width, height, 0, 0, width, height);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('main-menu', function (instance) {\r\n        var container = document.querySelector(instance.options.container.selector);\r\n\r\n        var mainMenu = document.createElement('div');\r\n        mainMenu.className = 'main-menu';\r\n\r\n        mainMenu.innerHTML = 'Main Menu -- ';\r\n        mainMenu.innerHTML += 'Item1';\r\n        mainMenu.innerHTML += 'Item2';\r\n        mainMenu.innerHTML += 'Item3';\r\n\r\n        container.insertBefore(mainMenu, container.firstChild);\r\n    });\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var objectCount = 0;\r\n\r\n    Modules.prototype.add('scene', function (instance) {\r\n        instance.scene = TreeNode.extend();\r\n\r\n        instance.scene.addObject = function (info) {\r\n            if (!info.primitive) info.primitive = instance.graphics.gl.TRIANGLES;\r\n            if (!info.model) info.model = mat4.create();\r\n            if (!info.type) info.type = 'object';\r\n            if (!info.name) info.name = 'object_' + (objectCount++);\r\n            this.add(info);\r\n        };\r\n\r\n        instance.scene.getObjectByName = function (name) {\r\n            return getObjectByName(this, name);\r\n        };\r\n\r\n        instance.scene.getObjects = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'object';\r\n            });\r\n        };\r\n\r\n        instance.asset.mesh.get('cube', function (mesh) {\r\n            instance.scene.addObject({mesh: mesh});\r\n        });\r\n    }, ['graphics']);\r\n\r\n    function getObjectByName (rootNode, name) {\r\n        for (var i = 0; i < rootNode.children.length; i++) {\r\n            var child = rootNode.children[i];\r\n            if (child.data.name === name) {\r\n                return child.data;\r\n            } else {\r\n                var node = getObjectByName(child, name);\r\n                if (node) return node.data;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n})());\r\n"]}