{"version":3,"sources":["ajax.js","array.js","html.js","obj.js","tree.js","events.js","logger.js","cobweb.js","modules.js","math/camera.js","math/halfEdge-cube.js","math/halfEdge.js","math/plane.js","math/ray.js","pane/pane-header.js","pane/pane-types.js","pane/panes.js","pane/surface/surface.js","pane/surface/interaction/common-interaction.js","pane/surface/interaction/edit-interaction.js","pane/surface/interaction/object-interaction.js","pane/surface/interaction/surface-interaction.js","pane/surface/render/render-solid.js","pane/surface/render/surface-render.js","graphic.js","scene.js"],"names":["ajax","options","_extend","defaultAjaxOptions","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","success","response","error","method","params","objToParams","data","urlWithParams","url","open","async","send","get","Ajax","getJSON","JSON","parse","post","obj","key","nextParam","encodeURIComponent","slice","defaults","prop","hasOwnProperty","value","window","safeExtend","prototype","property","Array","a","concat","i","length","j","splice","callback","s4","Math","floor","random","toString","substring","HTMLElement","oldClassNames","newClassNames","arguments","className","trim","replace","split","unique","join","queryClassNames","currentClassNames","index","name","indexOf","removeClassNames","removeEach","forEach","attr","__data_cache","WeakMap","elAttrs","undefined","set","setAttribute","getAttribute","removeAttribute","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","matches","document","ownerDocument","querySelectorAll","item","query","parentElement","current","clientHeight","style","height","clientWidth","width","guid","overlap","querySelector","Object","newObj","clone","extend","TreeNode","parent","children","isRoot","add","child","constructor","push","remove","dfs","check","out","bfs","_TreeNode","call","create","EventHandler","isDebug","listeners","trigger","console","debug","apply","on","off","array","reset","own","keys","Logger","instance","handlers","addHandler","level","ALL","args","DEBUG","INFO","info","WARNING","warn","ERROR","log","warning","tmp","levelHandlers","handler","removeHandler","NONE","defaultOptions","container","selector","Cobweb","Error","addClass","logger","events","modules","Modules","onLoadedAll","names","topologicalSort","sortedNames","module","dependencies","depName","nextName","candidates","getInitialCandidates","dependant","dependantName","allDependenciesMet","loadedUntilNow","runCallback","callbacks","isFunction","all","init","ex","dependencyModule","moduleName","Camera","center","rotation","distance","projection","mat4","getViewMatrix","view","eye","getCameraPosition","lookAt","getUpDirection","vec3","rotateX","rotateY","getCameraDirection","direction","sub","normalize","getRayFromCamera","ray","canvasCoords","canvasSize","Ray","start","auxMat","multiply","invert","transformMat4","up","vRotation","PI","HalfEdgeCube","mesh","HalfEdgeMesh","vhandle","face_vhandles","addFace","vertices","edges","faces","edgeMap","clear","getMesh","getWireframeMesh","getEdgeKey","end","startIndex","endIndex","getEdgeKeys","Plane","point","normal","fromPoints","b","onCreateCallback","pane","header","createHeader","appendChild","div","createElement","oldPane","newPane","oldType","attrData","setType","types","typeCallbacks","onPaneType","paneHeader","onCreateHeader","dataset","paneType","onPaneCreate","onPaneSplit","origin","onPaneResize","internal","Pane","separator","size","root","onSurfacePaneType","canvas","id","surfaceIndex","surface","map","camera","updateCanvasSize","onCreateSurfaceHeader","label","innerHTML","context","getContext","headerHeight","imgData","createImageData","buffer","Uint8Array","perspective","DEG2RAD","addEventListener","event","surfaces","parentNode","combine","originalRotation","delta","upNormalMouseDown","clampRotations","getCoordsDelta","initial","rotations","pi2","mouseDownCoords","interactions","common","onMouseWheel","realCoords","target","max","min","wheelDelta","detail","onMouseMove","moving","onMouseDown","which","equals","onMouseUp","onClick","edit","isHit","hitPoint","scene","getObjects","node","geo","testRayBBox","bounding","model","selected","setInteraction","object","getLocalCoordinates","type","layerX","layerY","onSurfaceEvent","getInteractionCallbacks","keepRunning","onContextMenu","preventDefault","interaction","interactionName","oncontextmenu","onmousewheel","onmousemove","onmousedown","onmouseup","onclick","initialValue","renderObject","shader","temp","uniforms","u_mvp","u_color","u_model","draw","primitive","firstSource","grid","Shader","graphics","gl","LINES","GL","Mesh","lines","renders","solid","lightDirection","u_lightvector","setRender","render","getRender","renderName","panes","drawRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","readPixels","RGBA","UNSIGNED_BYTE","putImageData","Graphics","screen","animate","ondraw","renderTargets","clearColor","enable","DEPTH_TEST","TRIANGLES","cube","color","intensity","getLights"],"mappings":"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","file":"cobweb.min.js","sourcesContent":["((function(){\r\n    'use strict';\r\n\r\n    var defaultAjaxOptions = {\r\n        method: 'GET',\r\n        url: '',\r\n        data: {},\r\n        async: true,\r\n        success: null,\r\n        error: null\r\n    };\r\n\r\n    function ajax (options) {\r\n        _extend(options || {}, defaultAjaxOptions);\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200) {\r\n                    if (options.success) options.success(this.response);\r\n                } else {\r\n                    if (options.error) error.success(this.response);\r\n                }\r\n            }\r\n        };\r\n        if (options.method === 'GET') {\r\n            var params = objToParams(options.data);\r\n            var urlWithParams = options.url + (params ? '?' + params : '');\r\n            xhttp.open(options.method, urlWithParams, options.async);\r\n            xhttp.send();\r\n        } else if (options.method === 'POST') {\r\n            xhttp.open(options.method, options.url, options.async);\r\n            xhttp.send(options.data);\r\n        }\r\n        return xhttp;\r\n    }\r\n\r\n    function get (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function getJSON (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: function (response) {\r\n                success(JSON.parse(response));\r\n            },\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function post (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'POST'\r\n        });\r\n    }\r\n\r\n    window.Ajax = {\r\n        ajax: ajax,\r\n        get: get,\r\n        getJSON: getJSON,\r\n        post: post\r\n    };\r\n\r\n    function objToParams (obj) {\r\n        var params = '';\r\n        for (var key in obj) {\r\n            var nextParam = key + '=' + encodeURIComponent(obj[key]);\r\n            params += '&' + nextParam;\r\n        }\r\n        return params.slice(1);\r\n    }\r\n\r\n    function _extend(options, defaults) {\r\n        for (var prop in defaults) {\r\n            if (prop && defaults.hasOwnProperty(prop)) {\r\n                var value = defaults[prop];\r\n                if (typeof value === 'object') {\r\n                    if (options[prop]) {\r\n                        _extend(options[prop], value);\r\n                    } else\r\n                        options[prop] = value;\r\n                } else if (typeof options[prop] === 'undefined')\r\n                    options[prop] = value;\r\n            }\r\n        }\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Array.prototype, 'unique', function() {\r\n        var a = this.concat();\r\n        for(var i = 0; i < a.length; ++i)\r\n            for(var j = i + 1; j < a.length; ++j)\r\n                if(a[i] === a[j]) a.splice(j--, 1);\r\n        return a;\r\n    });\r\n\r\n    safeExtend(Array.prototype, 'forEach', function(callback) {\r\n        for (var i = 0; i < this.length; i++)\r\n            callback(this[i], i, this);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(HTMLElement.prototype, 'addClass', function () {\r\n        var oldClassNames, newClassNames;\r\n        for(var i in arguments){\r\n            oldClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            newClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            this.className = oldClassNames.concat(newClassNames).unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'hasClass', function () {\r\n        var queryClassNames, currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n        for(var i in arguments){\r\n            queryClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            for (var index = 0; index < queryClassNames.length; index++) {\r\n                var name = queryClassNames[index];\r\n                if (currentClassNames.indexOf(name) == -1)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'removeClass', function () {\r\n        var index = 0, currentClassNames, removeClassNames;\r\n        var removeEach = function (name) {\r\n            index = currentClassNames.indexOf(name);\r\n            if (index != -1)\r\n                currentClassNames.splice(index, 1);\r\n        };\r\n        for(var i in arguments){\r\n            currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames.forEach(removeEach);\r\n            this.className = currentClassNames.unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'data', function (attr, value) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        var elAttrs = window.__data_cache.get(this) || {};\r\n        if (value !== undefined) {\r\n            elAttrs[attr] = value;\r\n            window.__data_cache.set(this, elAttrs);\r\n        } else {\r\n            if (attr) return elAttrs && elAttrs[attr];\r\n            else return elAttrs;\r\n        }\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'setData', function (data) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        window.__data_cache.set(this, data);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attr', function (name, value) {\r\n        if (value !== undefined)\r\n            this.setAttribute(name, value);\r\n        else if (value === null)\r\n            this.removeAttribute(name);\r\n        else\r\n            return this.getAttribute(name);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attrData', function (name, value) {\r\n        return this.attr('data-' + name, value);\r\n    });\r\n\r\n    safeExtend(Element.prototype, 'matches',\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;\r\n        }\r\n    );\r\n\r\n    safeExtend(HTMLElement.prototype, 'parent', function (query) {\r\n        if (!query) return this.parentElement;\r\n        var current = this.parentElement;\r\n        while (!current.matches(query))\r\n            current = current.parentElement;\r\n        return current;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'height', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.height = value + 'px';\r\n            else\r\n                this.style.height = value;\r\n        } else\r\n            return this.clientHeight;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'width', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.width = value + 'px';\r\n            else\r\n                this.style.width = value;\r\n        } else\r\n            return this.clientWidth;\r\n    });\r\n\r\n    safeExtend(window, 'guid', function () {\r\n        return 'GUID-' + s4() + '-' + s4() + '-' + s4();\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'guid', function () {\r\n        var guid = null, overlap = null;\r\n        do {\r\n            guid = window.guid();\r\n            overlap = document.querySelector('#' + guid);\r\n        } while(overlap);\r\n        this.attr('id', guid);\r\n        return guid;\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16).substring(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Object, 'clone', function (obj) {\r\n        var newObj = {};\r\n        for (var property in obj)\r\n            if (obj.hasOwnProperty(property)) {\r\n                var value = obj[property];\r\n                if (typeof value === 'object')\r\n                    newObj[property] = Object.clone(obj[property]);\r\n                else\r\n                    newObj[property] = obj[property];\r\n            }\r\n        return newObj;\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n\r\n    window.extend = _extend;\r\n\r\n    function _extend(options, defaults) {\r\n        for (var prop in defaults) {\r\n            if (prop && defaults.hasOwnProperty(prop)) {\r\n                var value = defaults[prop];\r\n                if (typeof value === 'object') {\r\n                    if (options[prop]) {\r\n                        _extend(options[prop], value);\r\n                    } else\r\n                        options[prop] = value;\r\n                } else if (typeof options[prop] === 'undefined')\r\n                    options[prop] = value;\r\n            }\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var TreeNode = function (parent, data) {\r\n        this.data = data || {};\r\n        this.parent = parent;\r\n        this.children = [];\r\n    };\r\n\r\n    window.TreeNode = TreeNode;\r\n\r\n    TreeNode.prototype.isRoot = function () {\r\n        return !this.parent;\r\n    };\r\n\r\n    TreeNode.prototype.add = function (data) {\r\n        var child = new this.constructor(this, data);\r\n        this.children.push(child);\r\n        return child;\r\n    };\r\n\r\n    TreeNode.prototype.remove = function (index) {\r\n        this.children.slice(index, 1);\r\n        return this;\r\n    };\r\n\r\n    TreeNode.prototype.dfs = function (check) {\r\n        var out = [];\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n            out.concat(this.children[i].dfs(check));\r\n        }\r\n        return out;\r\n    };\r\n\r\n    TreeNode.prototype.bfs = function (check) {\r\n        var out = [], i;\r\n        for (i = 0; i < this.children.length; i++)\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n        for (i = 0; i < this.children.length; i++)\r\n            out.concat(this.children[i].bfs(check));\r\n        return out;\r\n    };\r\n\r\n    TreeNode.extend = function (defaults) {\r\n        var _TreeNode = function (parent, data) {\r\n            TreeNode.call(this, parent, data);\r\n        };\r\n        _TreeNode.prototype = Object.create(TreeNode.prototype);\r\n        _TreeNode.prototype.constructor = _TreeNode;\r\n        extend(_TreeNode.prototype, defaults);\r\n        return new _TreeNode(null);\r\n    };\r\n})());\r\n","((function() {\r\n    'use strict';\r\n\r\n    var EventHandler = function (isDebug) {\r\n        this.isDebug = !!isDebug;\r\n        this.listeners = {};\r\n    };\r\n\r\n    EventHandler.prototype.trigger = function() {\r\n        var name = arguments[0];\r\n        var listeners = this.listeners[name] || [];\r\n        Array.prototype.splice.call(arguments, 0, 1);\r\n        if (this.isDebug) console.debug(name, arguments);\r\n        for (var i = 0; i < listeners.length; i++)\r\n            listeners[i].apply(null, arguments);\r\n    };\r\n\r\n    EventHandler.prototype.on = function(name, callback) {\r\n        if (!this.listeners[name]) this.listeners[name] = [];\r\n        this.listeners[name].push(callback);\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name) {\r\n        delete this.listeners[name];\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name, callback) {\r\n        if (this.listeners[name]) {\r\n            var array = this.listeners[name];\r\n            if (array.indexOf(callback) > -1) array.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    EventHandler.prototype.reset = function() {\r\n        var own = this;\r\n        Object.keys(this.listeners).forEach(function(key) {\r\n            delete own.listeners[key];\r\n        });\r\n    };\r\n\r\n    window.EventHandler = EventHandler;\r\n})());\r\n","/* jshint loopfunc:true */\r\n\r\n((function(){\r\n    'use strict';\r\n\r\n    var Logger = function (instance) {\r\n        this.handlers = [];\r\n\r\n        this.addHandler(this.level.ALL, function (level, args) {\r\n            if (Logger.prototype.level.DEBUG === level) {\r\n                console.debug.apply(this, args);\r\n            } else if (Logger.prototype.level.INFO === level) {\r\n                console.info.apply(this, args);\r\n            } else if (Logger.prototype.level.WARNING === level) {\r\n                console.warn.apply(this, args);\r\n            } else if (Logger.prototype.level.ERROR === level) {\r\n                console.error.apply(this, args);\r\n            }\r\n        });\r\n    };\r\n\r\n    Logger.prototype.debug = function () {\r\n        this.log(Logger.prototype.level.DEBUG, arguments);\r\n    };\r\n\r\n    Logger.prototype.info = function () {\r\n        this.log(Logger.prototype.level.INFO, arguments);\r\n    };\r\n\r\n    Logger.prototype.warning = function () {\r\n        this.log(Logger.prototype.level.WARNING, arguments);\r\n    };\r\n\r\n    Logger.prototype.error = function () {\r\n        this.log(Logger.prototype.level.ERROR, arguments);\r\n    };\r\n\r\n    Logger.prototype.log = function (level, args) {\r\n        var tmp = level;\r\n        var levelHandlers = this.handlers[tmp] || [];\r\n        while (tmp >= 0) {\r\n            levelHandlers.forEach(function (handler) {\r\n                handler(level, args);\r\n            });\r\n            levelHandlers = this.handlers[--tmp] || [];\r\n        }\r\n    };\r\n\r\n    Logger.prototype.addHandler = function (level, callback) {\r\n        if (!this.handlers[level])\r\n            this.handlers[level] = [];\r\n        this.handlers[level].push(callback);\r\n    };\r\n\r\n    Logger.prototype.removeHandler = function (level, callback) {\r\n        var levelHandlers = this.handlers[level];\r\n        if (levelHandlers) {\r\n            var index = levelHandlers.indexOf(callback);\r\n            if (index > -1)\r\n                levelHandlers.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    Logger.prototype.level = {\r\n        ALL: 0,\r\n        DEBUG: 1,\r\n        INFO: 2,\r\n        WARNING: 3,\r\n        ERROR: 4,\r\n        NONE: 5,\r\n    };\r\n\r\n    window.Logger = Logger;\r\n})());\r\n","(function(){\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        container: {\r\n            selector: '#cobweb',\r\n            className: 'cb-container'\r\n        }\r\n    };\r\n\r\n    var Cobweb = function (options) {\r\n        var instance = this;\r\n\r\n        this.options = options || {};\r\n        extend(this.options, defaultOptions);\r\n\r\n        this.container = document.querySelector(this.options.container.selector);\r\n        if (!this.container)\r\n            throw new Error('Invalid container selector: \\'' +\r\n                this.options.container.selector + '\\'');\r\n        this.container.addClass(this.options.container.className);\r\n        this.container.data('instance', this);\r\n\r\n        this.logger = new Logger(this, true);\r\n        this.events = new EventHandler(true);\r\n        this.modules = new Modules([this], {\r\n            onLoadedAll: function (names) {\r\n                instance.events.trigger('modules.loaded.all', names);\r\n                instance.events.trigger('app.loaded');\r\n            }\r\n        });\r\n    };\r\n\r\n    window.Cobweb = Cobweb;\r\n}());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Modules = function (params, callbacks) {\r\n        callbacks = callbacks || {};\r\n        var modules = Modules.prototype.all;\r\n        try {\r\n            var sortedNames = topologicalSort(modules);\r\n            for (var i = 0; i < sortedNames.length; i++ ) {\r\n                var name = sortedNames[i];\r\n                var module = modules[name];\r\n                try {\r\n                    module.init.apply(this, params);\r\n                    runCallback(callbacks, 'onLoaded', [name, module]);\r\n                } catch (ex) {\r\n                    console.error('Error loading module:', name, ex);\r\n                    runCallback(callbacks, 'onError', [ex, name, module]);\r\n                }\r\n            }\r\n            runCallback(callbacks, 'onLoadedAll', [sortedNames]);\r\n        } catch (ex) {\r\n            console.error('Error loading modules:', ex);\r\n        }\r\n    };\r\n\r\n    Modules.prototype.all = {};\r\n    Modules.prototype.add = function (name, init, dependencies) {\r\n        dependencies = dependencies || [];\r\n\r\n        var dependant = [];\r\n        var dependencyModule, i;\r\n        for (var moduleName in this.all) {\r\n            var module = this.all[moduleName];\r\n            for (i = 0; i < module.dependencies.length; i++)\r\n                if (module.dependencies[i] === name)\r\n                    dependant.push(moduleName);\r\n        }\r\n        for (i = 0; i < dependencies.length; i++) {\r\n            dependencyModule = this.all[dependencies[i]];\r\n            if (dependencyModule) dependencyModule.dependant.push(name);\r\n        }\r\n\r\n        this.all[name] = {\r\n            dependencies: dependencies,\r\n            dependant: dependant,\r\n            init: init\r\n        };\r\n    };\r\n\r\n    window.Modules = Modules;\r\n\r\n    function topologicalSort (modules) {\r\n        var sortedNames = [];\r\n\r\n        var module = null, i = 0;\r\n        for (var name in modules) {\r\n            module = modules[name];\r\n            for (i = 0; i < module.dependencies.length; i++) {\r\n                var depName = module.dependencies[i];\r\n                if (!modules[depName])\r\n                    throw new Error('Missing module: ' + depName);\r\n            }\r\n        }\r\n\r\n        var nextName = null;\r\n        var candidates = getInitialCandidates(modules);\r\n        while (candidates.length > 0) {\r\n            nextName = candidates.splice(0, 1)[0];\r\n            module = modules[nextName];\r\n            if (module) {\r\n                sortedNames.push(nextName);\r\n                for (i = 0; i < module.dependant.length; i++) {\r\n                    var dependantName = module.dependant[i];\r\n                    if (allDependenciesMet(sortedNames, modules[dependantName]))\r\n                        candidates.push(dependantName);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Object.keys(modules).length !== sortedNames.length)\r\n            throw new Error('Dependency cycle!');\r\n\r\n        return sortedNames;\r\n    }\r\n\r\n    function getInitialCandidates (modules) {\r\n        var candidates = [];\r\n        for (var name in modules)\r\n            if (modules[name].dependencies.length === 0)\r\n                candidates.push(name);\r\n        return candidates;\r\n    }\r\n\r\n    function allDependenciesMet (loadedUntilNow, module) {\r\n        for (var i = 0; i < module.dependencies.length; i++)\r\n            if (loadedUntilNow.indexOf(module.dependencies[i]) === -1) return false;\r\n        return true;\r\n    }\r\n\r\n    function runCallback (callbacks, name, params) {\r\n        var callback = callbacks[name];\r\n        var isFunction = typeof callback === 'function';\r\n        if (isFunction) callback.apply(null, params);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Camera = function (center, rotation, distance) {\r\n        this.center = center || [0, 0, 0];\r\n        this.rotation = rotation || [-0.5, -0.5];\r\n        this.distance = distance || 12;\r\n        this.projection = mat4.create();\r\n    };\r\n\r\n    Camera.prototype.getViewMatrix = function (view) {\r\n        view = view || mat4.create();\r\n        var eye = [0, 0, 0];\r\n        this.getCameraPosition(eye);\r\n        mat4.lookAt(view, eye, this.center, this.getUpDirection());\r\n        return view;\r\n    };\r\n\r\n    Camera.prototype.getCameraPosition = function (eye) {\r\n        eye = eye || vec3.create();\r\n        vec3.set(eye, 0, 0, -this.distance);\r\n        vec3.rotateX(eye, eye, this.rotation[1]);\r\n        vec3.rotateY(eye, eye, -this.rotation[0]);\r\n        return eye;\r\n    };\r\n\r\n    Camera.prototype.getCameraDirection = function (direction) {\r\n        direction = direction || vec3.create();\r\n        var eye = this.getCameraPosition();\r\n        vec3.sub(direction, this.center, eye);\r\n        vec3.normalize(direction, direction);\r\n        return direction;\r\n    };\r\n\r\n    Camera.prototype.getRayFromCamera = function (ray, canvasCoords, canvasSize) {\r\n        ray = ray || new Math.Ray();\r\n        this.getCameraPosition(ray.start);\r\n        vec3.set(ray.direction, canvasCoords[0] / (canvasSize[0] * 0.5) - 1.0,\r\n            canvasCoords[1] / (canvasSize[1] * 0.5) - 1.0, 1);\r\n        var auxMat = mat4.create();\r\n        mat4.multiply(auxMat, this.projection, this.getViewMatrix());\r\n        mat4.invert(auxMat, auxMat);\r\n        vec3.transformMat4(ray.direction, ray.direction, auxMat);\r\n        vec3.normalize(ray.direction, ray.direction);\r\n        return ray;\r\n    };\r\n\r\n    Camera.prototype.getUpDirection = function (up) {\r\n        up = up || vec3.create();\r\n        var vRotation = this.rotation[1];\r\n        if (vRotation >= Math.PI / 2 &&\r\n            vRotation <= ((Math.PI * 3) / 2))\r\n            vec3.set(up, 0, -1, 0);\r\n        else vec3.set(up, 0, 1, 0);\r\n        return up;\r\n    };\r\n\r\n    window.Math.Camera = Camera;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    function HalfEdgeCube () {\r\n        var mesh = new Math.HalfEdgeMesh();\r\n\r\n        var vhandle = [];\r\n        vhandle[0] = [-1, -1,  1];\r\n        vhandle[1] = [ 1, -1,  1];\r\n        vhandle[2] = [ 1,  1,  1];\r\n        vhandle[3] = [-1,  1,  1];\r\n        vhandle[4] = [-1, -1, -1];\r\n        vhandle[5] = [ 1, -1, -1];\r\n        vhandle[6] = [ 1,  1, -1];\r\n        vhandle[7] = [-1,  1, -1];\r\n\r\n        var face_vhandles = [];\r\n        face_vhandles.push(vhandle[0]);\r\n        face_vhandles.push(vhandle[1]);\r\n        face_vhandles.push(vhandle[2]);\r\n        face_vhandles.push(vhandle[3]);\r\n        mesh.addFace(face_vhandles);\r\n\r\n        face_vhandles = [];\r\n        face_vhandles.push(vhandle[7]);\r\n        face_vhandles.push(vhandle[6]);\r\n        face_vhandles.push(vhandle[5]);\r\n        face_vhandles.push(vhandle[4]);\r\n        mesh.addFace(face_vhandles);\r\n\r\n        face_vhandles = [];\r\n        face_vhandles.push(vhandle[1]);\r\n        face_vhandles.push(vhandle[0]);\r\n        face_vhandles.push(vhandle[4]);\r\n        face_vhandles.push(vhandle[5]);\r\n        mesh.addFace(face_vhandles);\r\n\r\n        face_vhandles = [];\r\n        face_vhandles.push(vhandle[2]);\r\n        face_vhandles.push(vhandle[1]);\r\n        face_vhandles.push(vhandle[5]);\r\n        face_vhandles.push(vhandle[6]);\r\n        mesh.addFace(face_vhandles);\r\n\r\n        face_vhandles = [];\r\n        face_vhandles.push(vhandle[3]);\r\n        face_vhandles.push(vhandle[2]);\r\n        face_vhandles.push(vhandle[6]);\r\n        face_vhandles.push(vhandle[7]);\r\n        mesh.addFace(face_vhandles);\r\n\r\n        face_vhandles = [];\r\n        face_vhandles.push(vhandle[0]);\r\n        face_vhandles.push(vhandle[3]);\r\n        face_vhandles.push(vhandle[7]);\r\n        face_vhandles.push(vhandle[4]);\r\n        mesh.addFace(face_vhandles);\r\n\r\n        return mesh;\r\n    }\r\n\r\n    window.HalfEdgeCube = HalfEdgeCube;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var HalfEdgeMesh = function () {\r\n        this.vertices = [];\r\n        this.edges = [];\r\n        this.faces = [];\r\n\r\n        this.edgeMap = {};\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.addFace = function (vertices) {\r\n        //TODO: check if vertices are already in this.vertices, it not --> push\r\n        //TODO: loop vertices from 0 to length\r\n        //TODO: add a halfEdge from i to i+1 (i === length --> i to 0)\r\n\r\n        //TODO: [for each halfedge] check if it exists --> warn\r\n        //TODO: [for each halfedge] add halfEdge key -> val to map\r\n        //TODO: [for each halfedge] check if there's an opposite --> add\r\n\r\n        //TODO: add opposite halfEdges if there's any\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.clear = function () {\r\n        //TODO: clear all 3 arrays of data\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.getMesh = function () {\r\n        //TODO: loop all faces and add each one to the buffer\r\n        //TODO: we'll keep a reference to update data when needed\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.getWireframeMesh = function () {\r\n        //TODO: loop all edges and add GL_LINE to buffer\r\n        //TODO: we'll keep a reference to update data when needed\r\n    };\r\n\r\n    var HalfEdge = function () {\r\n        this.opposite = null;\r\n        this.vertex = null;\r\n        this.face = null;\r\n        this.next = null;\r\n    };\r\n\r\n    window.Math.HalfEdgeMesh = HalfEdgeMesh;\r\n\r\n    HalfEdgeMesh.prototype.getEdgeKey = function (start, end) {\r\n        var startIndex = this.vertices.indexOf(start);\r\n        var endIndex = this.vertices.indexOf(end);\r\n        if (startIndex > 0 && endIndex > 0)\r\n            return startIndex + '' + endIndex;\r\n        return null;\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.getEdgeKeys = function (start, end) {\r\n        return [this.getEdgeKey(start, end), this.getEdgeKey(end, start)];\r\n    };\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Plane = function (point, normal) {\r\n        this.normal = normal || [0, 1, 0];\r\n        this.point = point || vec3.create();\r\n        vec3.normalize(this.normal, this.normal);\r\n    };\r\n\r\n    window.Math.Plane = Plane;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Ray = function (start, direction) {\r\n        this.direction = direction || [0, 0, 1];\r\n        this.start = start || vec3.create();\r\n        vec3.normalize(this.direction, this.direction);\r\n    };\r\n\r\n    Ray.fromPoints = function (a, b) {\r\n        var direction = vec3.create();\r\n        vec3.sub(direction, b, a);\r\n        return new Ray(a, direction);\r\n    };\r\n\r\n    window.Math.Ray = Ray;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-header', function (instance) {\r\n        instance.events.on('pane.create', function (pane) {\r\n            onCreateCallback(pane, instance);\r\n        });\r\n    }, ['pane-types']);\r\n\r\n    function onCreateCallback (pane, instance) {\r\n        var header = createHeader();\r\n        pane.appendChild(header);\r\n    }\r\n\r\n    function createHeader () {\r\n        var div = document.createElement('div');\r\n        div.className = 'pane-header';\r\n        return div;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-types', function (instance) {\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var oldType = oldPane.attrData('pane-type');\r\n            if (oldType) instance.pane.setType(newPane, oldType);\r\n        });\r\n\r\n        instance.pane.types = {};\r\n\r\n        instance.pane.setType = function (pane, name) {\r\n            if (this.types[name]) {\r\n                var typeCallbacks = this.types[name];\r\n                typeCallbacks.onPaneType(pane, instance);\r\n                var paneHeader = pane.querySelector('.pane-header');\r\n                typeCallbacks.onCreateHeader(paneHeader, instance);\r\n                pane.dataset.paneType = name;\r\n            }\r\n        };\r\n    }, ['pane']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane', function (instance) {\r\n        instance.events.on('app.loaded', function () {\r\n            instance.pane.internal = new Pane({\r\n                container: instance.options.container.selector,\r\n                separator: {\r\n                    size: 3\r\n                },\r\n                callbacks: {\r\n                    onPaneCreate: onPaneCreate,\r\n                    onPaneSplit: onPaneSplit,\r\n                    onPaneResize: onPaneResize,\r\n                    //onPaneMerge: onPaneMerge,\r\n                    //onPaneDestroy: onPaneDestroy,\r\n                }\r\n            });\r\n\r\n            var root = instance.pane.internal.container.querySelector('.pane');\r\n            instance.pane.setType(root, 'surface');\r\n        });\r\n\r\n        instance.pane = {};\r\n\r\n        function onPaneCreate (pane) {\r\n            instance.events.trigger('pane.create', pane);\r\n        }\r\n\r\n        function onPaneSplit (origin, newPane) {\r\n            instance.events.trigger('pane.split', origin, newPane);\r\n        }\r\n\r\n        function onPaneResize (pane) {\r\n            instance.events.trigger('pane.resize', pane);\r\n        }\r\n\r\n        function onPaneMerge (merger, toRemove) {\r\n            console.debug('onPaneMerge', merger, toRemove);\r\n        }\r\n\r\n        function onPaneDestroy (pane) {\r\n            console.debug('onPaneDestroy', pane);\r\n        }\r\n    });\r\n})());\r\n","((function () {\r\n    'use strict';\r\n    \r\n    Modules.prototype.add('surface', function (instance) {\r\n        instance.pane.types.surface = {\r\n            onPaneType: onSurfacePaneType,\r\n            onCreateHeader: onCreateSurfaceHeader\r\n        };\r\n\r\n        instance.events.on('pane.resize', function (pane) {\r\n            if (pane.attrData('pane-type') === 'surface')\r\n                updateCanvasSize(instance, pane);\r\n        });\r\n\r\n        window.addEventListener('resize', function (event) {\r\n            var surfaces = instance.pane.internal.container\r\n                .querySelectorAll('.pane canvas');\r\n            for (var i = 0; i < surfaces.length; i++) {\r\n                updateCanvasSize(instance, surfaces[i].parentNode);\r\n            }\r\n        });\r\n\r\n        instance.surface = {};\r\n    }, ['pane-types']);\r\n\r\n    var surfaceIndex = 0;\r\n    function onSurfacePaneType (pane, instance) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.id = 'surface' + (surfaceIndex++);\r\n        canvas.className = 'surface';\r\n        pane.appendChild(canvas);\r\n\r\n        instance.surface.map = instance.surface.map || {};\r\n        instance.surface.map[canvas.id] = {\r\n            camera: new Math.Camera()\r\n        };\r\n\r\n        updateCanvasSize(instance, pane);\r\n\r\n        instance.events.trigger('surface.create', canvas);\r\n    }\r\n\r\n    function onCreateSurfaceHeader (header, instance) {\r\n        var label = document.createElement('label');\r\n        label.innerHTML = 'Surface Pane';\r\n        header.appendChild(label);\r\n    }\r\n\r\n    function updateCanvasSize (instance, pane) {\r\n        var canvas = pane.querySelector('canvas');\r\n        var context = canvas.getContext('2d');\r\n        var data = instance.surface.map[canvas.id];\r\n\r\n        var header = pane.querySelector('.pane-header');\r\n        var headerHeight = header ? header.height() : 0;\r\n\r\n        var width = pane.width(), height = pane.height() - headerHeight;\r\n        data.imgData = context.createImageData(width, height);\r\n        data.buffer = new Uint8Array(width * height * 4);\r\n\r\n        canvas.height = height;\r\n        canvas.width = width;\r\n\r\n        mat4.perspective(data.camera.projection, 45 * DEG2RAD, width / height, 0.1, 1000);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var originalRotation = null;\r\n    var mouseDownCoords = null;\r\n\r\n    Modules.prototype.add('common-interaction', function (instance) {\r\n        instance.surface.interactions.common = {\n            onMouseWheel: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n                delta /= 2;\r\n\r\n                var data = instance.surface.map[canvas.id];\r\n                data.camera.distance -= delta;\r\n                data.camera.distance = Math.max(data.camera.distance, 0);\r\n\r\n                return true;\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                if (event.target.dataset.moving) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n                    if (data) {\r\n                        var delta = getCoordsDelta(mouseDownCoords, realCoords);\r\n                        combine(data.camera, originalRotation, delta);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 2) {\r\n                    event.target.dataset.moving = 'true';\r\n                    upNormalMouseDown = vec3.equals(data.camera.getUpDirection(), [0, 1, 0]);\r\n                    originalRotation = data.camera.rotation.slice();\r\n                    mouseDownCoords = realCoords;\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 2) {\r\n                    delete event.target.dataset.moving;\r\n                    var data = instance.surface.map[event.target.id];\r\n                    mouseDownCoords = null;\r\n                }\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n    }, ['surface-interaction']);\r\n\r\n    var upNormalMouseDown = true;\r\n    function combine (surface, originalRotation, delta) {\r\n        if (!originalRotation) return;\r\n        if (!upNormalMouseDown) delta[0] = -delta[0];\r\n\r\n        var rotation = surface.rotation;\r\n        rotation[0] = originalRotation[0] + delta[0] * 0.005;\r\n        rotation[1] = originalRotation[1] + delta[1] * 0.005;\r\n        clampRotations(rotation);\r\n    }\r\n\r\n    function getCoordsDelta (initial, current) {\r\n        if (!initial) return [0, 0];\r\n        return [\r\n            initial[0] - current[0],\r\n            initial[1] - current[1]\r\n        ];\r\n    }\r\n\r\n    function clampRotations (rotations) {\r\n        var pi2 = Math.PI * 2;\r\n        if (rotations[0] < 0) rotations[0] = pi2 + rotations[0];\r\n        if (rotations[0] >= pi2) rotations[0] = rotations[0] - pi2;\r\n        if (rotations[1] < 0) rotations[1] = pi2 + rotations[1];\r\n        if (rotations[1] >= pi2) rotations[1] = rotations[1] - pi2;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction', function (instance) {\r\n        instance.surface.interactions.edit = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 1) {\r\n                    var ray = data.camera.getRayFromCamera(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    var isHit = false, hitPoint = vec3.create();\r\n                    instance.scene.getObjects().forEach(function (node) {\r\n                        isHit = geo.testRayBBox(ray.start, ray.direction, node.data.mesh.bounding, node.data.model, hitPoint);\r\n                        if (isHit) {\r\n                            node.data.selected = true;\r\n                        } else delete node.data.selected;\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setInteraction(surface, 'edit');\r\n        });\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('object-interaction', function (instance) {\r\n        instance.surface.interactions.object = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 1) {\r\n                    var ray = data.camera.getRayFromCamera(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    var isHit = false, hitPoint = vec3.create();\r\n                    instance.scene.getObjects().forEach(function (node) {\r\n                        isHit = geo.testRayBBox(ray.start, ray.direction, node.data.mesh.bounding, node.data.model, hitPoint);\r\n                        if (isHit) {\r\n                            node.data.selected = true;\r\n                        } else delete node.data.selected;\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-interaction', function (instance) {\r\n        instance.surface.interactions = {};\r\n\r\n        instance.surface.setInteraction = function (surface, name) {\r\n            surface.dataset.interaction = name;\r\n        };\r\n\r\n        instance.surface.getInteractionCallbacks = function (surface) {\r\n            var interactionName = surface.dataset.interaction;\r\n            return instance.surface.interactions[interactionName];\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            surface.oncontextmenu = onContextMenu;\r\n            surface.onmousewheel = onSurfaceEvent;\r\n            surface.onmousemove = onSurfaceEvent;\r\n            surface.onmousedown = onSurfaceEvent;\r\n            surface.onmouseup = onSurfaceEvent;\r\n            surface.onclick = onSurfaceEvent;\r\n        });\r\n\r\n        function onSurfaceEvent (event) {\r\n            var callbacks = instance.surface.getInteractionCallbacks(event.target);\r\n            var keepRunning = runCallback(callbacks, event);\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                runCallback(common, event);\r\n            }\r\n        }\r\n\r\n        function onContextMenu (event) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var initialValue = oldPane.dataset.interaction;\r\n            newPane.dataset.interaction = initialValue;\r\n        });\r\n    }, ['surface']);\r\n\r\n    function runCallback (callbacks, event) {\r\n        var realCoords = getLocalCoordinates(event);\r\n        switch (event.type) {\r\n            case 'mousewheel': return callbacks.onMouseWheel(event, realCoords);\r\n            case 'mousemove': return callbacks.onMouseMove(event, realCoords);\r\n            case 'mousedown': return callbacks.onMouseDown(event, realCoords);\r\n            case 'mouseup': return callbacks.onMouseUp(event, realCoords);\r\n            case 'click': return callbacks.onClick(event, realCoords);\r\n        }\r\n    }\r\n\r\n    function getLocalCoordinates (event) {\r\n        return [event.layerX, event.layerY];\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('render-solid', function (instance) {\r\n        var shader = null;\r\n        var firstSource = null;\r\n        var vertSource = Ajax.get('shader/solid.vert', function (response) {\r\n            if (firstSource) {\r\n                shader = new Shader(response, firstSource);\r\n            } firstSource = response;\r\n        });\r\n        var fragSource = Ajax.get('shader/solid.frag', function (response) {\r\n            if (firstSource) {\r\n                shader = new Shader(firstSource, response);\r\n            } firstSource = response;\r\n        });\r\n\r\n        var grid = {\r\n            type: 'object',\r\n            primitive: instance.graphics.gl.LINES,\r\n            mesh: GL.Mesh.grid({\r\n                lines: 17,\r\n                size: 8\r\n            }),\r\n            model: mat4.create(),\r\n        };\r\n\r\n        instance.surface.renders.solid = function (surface) {\r\n            var lightDirection = vec3.create();\r\n            surface.camera.getCameraPosition(lightDirection);\r\n            vec3.add(lightDirection, lightDirection, [1, 2, 0]);\r\n            vec3.normalize(lightDirection, lightDirection);\r\n            uniforms.u_lightvector = lightDirection;\r\n\r\n            renderObject(surface, grid, shader);\r\n            instance.scene.getObjects().forEach(function (node) {\r\n                renderObject(surface, node.data, shader);\r\n            });\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setRender(surface, 'solid');\r\n        });\r\n    }, ['surface-render']);\r\n\r\n    var uniforms = {\r\n        u_color: [0.7, 0.7, 0.7, 1],\r\n        u_lightvector: null,\r\n        u_model: null,\r\n        u_mvp: mat4.create()\r\n    };\r\n\r\n    var temp = mat4.create();\r\n    function renderObject (surface, obj, shader) {\r\n        surface.camera.getViewMatrix(temp);\r\n        mat4.multiply(temp, surface.camera.projection, temp);\r\n        mat4.multiply(uniforms.u_mvp, temp, obj.model);\r\n\r\n        uniforms.u_color = obj.selected ? [1,0,0,1] : [0.7, 0.7, 0.7, 1];\r\n\r\n        uniforms.u_model = obj.model;\r\n        if (shader) shader.uniforms(uniforms).draw(obj.mesh, obj.primitive);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-render', function (instance) {\r\n        instance.surface.renders = {};\r\n\r\n        instance.surface.setRender = function (surface, name) {\r\n            surface.dataset.render = name;\r\n        };\r\n\r\n        instance.surface.getRender = function (surface) {\r\n            var renderName = surface.dataset.render;\r\n            return instance.surface.renders[renderName];\r\n        };\r\n\r\n        var panes = document.querySelectorAll('.pane');\r\n        for (var i = 0; i < panes.length; i++) {\r\n            if (panes[i].dataset.paneType == 'surface') {\r\n                var canvas = panes[i].querySelector('canvas');\r\n                canvas.dataset.render = 'solid';\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            newPane.attrData('surface-render', oldPane.attrData('surface-render'));\r\n        });\r\n    }, ['surface']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Graphics = function (instance) {\r\n        this.gl = GL.create({\r\n            height: screen.height,\r\n            width: screen.width\r\n        });\r\n        this.gl.animate();\r\n        this.gl.ondraw = function () {\r\n            var renderTargets = document.querySelectorAll('canvas');\r\n            for (var i = 0; i < renderTargets.length; i++)\r\n                drawRenderTarget(instance, renderTargets[i]);\r\n        };\r\n        this.gl.clearColor(0.349, 0.349, 0.349, 1);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n    };\r\n\r\n    Modules.prototype.add('graphics', function (instance) {\r\n        instance.graphics = new Graphics(instance);\r\n    });\r\n\r\n    function drawRenderTarget (instance, canvas) {\r\n        var data = instance.surface.map[canvas.id];\r\n        var gl = instance.graphics.gl;\r\n\r\n        var width  = canvas.clientWidth, height = canvas.clientHeight;\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.viewport(0, 0, width, height);\r\n\r\n        var render = instance.surface.getRender(canvas);\r\n        if (render) render(data);\r\n\r\n        var context = canvas.getContext('2d');\r\n        if (context) {\r\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data.buffer);\r\n            data.imgData.data.set(data.buffer);\r\n            context.putImageData(data.imgData, 0, 0);\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('scene', function (instance) {\r\n        instance.scene = TreeNode.extend({});\r\n\r\n        instance.scene.add({\r\n            type: 'object',\r\n            primitive: instance.graphics.gl.TRIANGLES,\r\n            mesh: GL.Mesh.cube(),\r\n            model: mat4.create(),\r\n        });\r\n        instance.scene.add({\r\n            type: 'light',\r\n            color: [1, 1, 1],\r\n            intensity: 1\r\n        });\r\n\r\n        instance.scene.getObjects = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'object';\r\n            });\r\n        };\r\n\r\n        instance.scene.getLights = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'light';\r\n            });\r\n        };\r\n    }, ['graphics']);\r\n})());\r\n"]}