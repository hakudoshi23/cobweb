{"version":3,"sources":["ajax.js","array.js","html.js","obj.js","tree.js","events.js","logger.js","cobweb.js","modules.js","pane/pane-header.js","pane/pane-types.js","pane/panes.js","math/camera.js","math/octree.js","math/plane.js","math/ray.js","pane/surface/surface.js","math/halfEdge/halfEdge-cube.js","math/halfEdge/halfEdge-mesh.js","math/geometry/geometry.js","pane/surface/interaction/common-interaction.js","pane/surface/interaction/edit-interaction-select.js","pane/surface/interaction/edit-interaction.js","pane/surface/interaction/object-interaction.js","pane/surface/interaction/surface-interaction.js","pane/surface/render/render-solid.js","pane/surface/render/surface-render.js","graphic.js","scene.js"],"names":["ajax","options","Object","assign","defaultAjaxOptions","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","success","response","error","method","params","objToParams","data","urlWithParams","url","open","async","send","get","Ajax","getJSON","JSON","parse","post","obj","key","nextParam","encodeURIComponent","slice","window","safeExtend","prototype","property","value","Array","a","concat","i","length","j","splice","callback","s4","Math","floor","random","toString","substring","HTMLElement","oldClassNames","newClassNames","arguments","className","trim","replace","split","unique","join","queryClassNames","currentClassNames","index","name","indexOf","removeClassNames","removeEach","forEach","attr","__data_cache","WeakMap","elAttrs","undefined","set","setAttribute","getAttribute","removeAttribute","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","matches","document","ownerDocument","querySelectorAll","item","query","parentElement","current","clientHeight","style","height","clientWidth","width","guid","overlap","querySelector","newObj","hasOwnProperty","clone","target","varArgs","TypeError","to","nextSource","nextKey","call","defaults","TreeNode","parent","children","isRoot","add","child","constructor","push","remove","dfs","check","out","bfs","extend","_TreeNode","create","EventHandler","isDebug","listeners","trigger","console","debug","apply","on","off","array","reset","own","keys","Logger","instance","handlers","addHandler","level","ALL","args","DEBUG","INFO","info","WARNING","warn","ERROR","log","warning","tmp","levelHandlers","handler","removeHandler","NONE","defaultOptions","container","selector","Cobweb","Error","addClass","logger","events","modules","Modules","onLoadedAll","names","topologicalSort","sortedNames","module","dependencies","depName","nextName","candidates","getInitialCandidates","dependant","dependantName","allDependenciesMet","loadedUntilNow","runCallback","callbacks","isFunction","all","init","ex","dependencyModule","moduleName","onCreateCallback","pane","header","createHeader","appendChild","div","createElement","oldPane","newPane","oldType","attrData","setType","types","typeCallbacks","onPaneType","paneHeader","onCreateHeader","dataset","paneType","onPaneCreate","onPaneSplit","origin","onPaneResize","internal","Pane","separator","size","root","Camera","center","rotation","distance","projection","mat4","getViewMatrix","view","eye","getPosition","lookAt","getUpDirection","vec3","rotateX","rotateY","getDirection","direction","sub","normalize","getRay","ray","canvasCoords","canvasSize","Ray","start","auxMat","multiply","invert","transformMat4","up","vRotation","PI","isContained","aabb","min","max","updateRootBounds","items","maxItems","maxDepth","OctreeNode","depth","getAllItems","allItems","addItems","result","addItem","contains","splitIfNeeded","updateDimensions","pop","removeItem","mergeIfNeeded","getCollidingNodes","nodes","collidingPoint","geo","rayAABBCollision","getCollidingItems","node","parentAabb","half","ref","Octree","_addItems","growIfNeeded","newItems","shrinkIfNeeded","Plane","point","normal","fromPoints","b","onSurfacePaneType","canvas","id","surfaceIndex","surface","map","camera","updateCanvasSize","onCreateSurfaceHeader","label","innerHTML","context","getContext","headerHeight","imgData","createImageData","buffer","Uint8Array","perspective","DEG2RAD","addEventListener","event","surfaces","parentNode","cube","mesh","HalfEdgeMesh","vhandle","addVertices","face_vhandles","addFace","HalfEdgeCube","buildEdge","end","face","edge","vertex","HalfEdgeFace","opposite","findOppositeEdge","next","_halfEdge","outEdges","opposites","filter","he","VertexGetFaces","VertexComputeNormal","getFaces","computeRawNormal","computeNormal","v1","v2","v3","tmp1","tmp2","cross","GetMesh","normals","wireframe","buffers","vertices","Float32Array","triangles","faces","ts","getVerticesTriangulated","ownIndex","Uint16Array","GL","Mesh","load","halfEdges","bounds","isArray","he1","he2","last","prev","onVertexChange","vertexBuffers","onVertexChangeIndex","indices","clear","uniqueFaces","collidingFaces","triangle","rayTriangleCollision","getFace","sort","f1","f2","d1","dist","computeCenter","d2","getMesh","halfEdge","getEdges","output","getVertices","triangulated","triplet","triangleNormal","reduce","p","scale","getBarycentricCoordinates","p1","p2","p3","v0","getVectorFromPoints","d00","dot","d01","d11","d20","d21","denom","getNormal","EPSILON","rayPlaneCollision","bary","planePoint","planeNormal","numer","abs","t","minB","maxB","whichPlane","inside","quadrant","maxT","candidatePlane","copy","Number","MAX_VALUE","combine","originalRotation","delta","upNormalMouseDown","clampRotations","getCoordsDelta","initial","rotations","pi2","mouseDownCoords","interactions","common","onMouseWheel","realCoords","wheelDelta","detail","onMouseMove","moving","onMouseDown","which","equals","onMouseUp","onClick","edit","selection","edges","originalPosition","isEmpty","cameraDirection","faceCenter","hitPoint","diff","scene","getObjects","setInteraction","object","getRayFromCamera","isHit","testRayBBox","bounding","model","selected","getLocalCoordinates","type","layerX","layerY","onSurfaceEvent","getInteractionCallbacks","keepRunning","onContextMenu","preventDefault","interaction","interactionName","oncontextmenu","onmousewheel","onmousemove","onmousedown","onmouseup","onclick","initialValue","renderObject","shader","temp","uniforms","u_mvp","u_color","u_model","draw","primitive","firstSource","grid","Shader","graphics","gl","LINES","lines","renders","solid","lightDirection","u_lightvector","setRender","render","getRender","renderName","panes","drawRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","readPixels","RGBA","UNSIGNED_BYTE","putImageData","Graphics","screen","animate","ondraw","renderTargets","clearColor","enable","DEPTH_TEST","cubeSceneNode","TRIANGLES","color","intensity","getLights"],"mappings":"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","file":"cobweb.min.js","sourcesContent":["((function(){\r\n    'use strict';\r\n\r\n    var defaultAjaxOptions = {\r\n        method: 'GET',\r\n        url: '',\r\n        data: {},\r\n        async: true,\r\n        success: null,\r\n        error: null\r\n    };\r\n\r\n    function ajax (options) {\r\n        options = Object.assign({}, defaultAjaxOptions, options);\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200) {\r\n                    if (options.success) options.success(this.response);\r\n                } else {\r\n                    if (options.error) error.success(this.response);\r\n                }\r\n            }\r\n        };\r\n        if (options.method === 'GET') {\r\n            var params = objToParams(options.data);\r\n            var urlWithParams = options.url + (params ? '?' + params : '');\r\n            xhttp.open(options.method, urlWithParams, options.async);\r\n            xhttp.send();\r\n        } else if (options.method === 'POST') {\r\n            xhttp.open(options.method, options.url, options.async);\r\n            xhttp.send(options.data);\r\n        }\r\n        return xhttp;\r\n    }\r\n\r\n    function get (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function getJSON (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: function (response) {\r\n                success(JSON.parse(response));\r\n            },\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function post (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'POST'\r\n        });\r\n    }\r\n\r\n    window.Ajax = {\r\n        ajax: ajax,\r\n        get: get,\r\n        getJSON: getJSON,\r\n        post: post\r\n    };\r\n\r\n    function objToParams (obj) {\r\n        var params = '';\r\n        for (var key in obj) {\r\n            var nextParam = key + '=' + encodeURIComponent(obj[key]);\r\n            params += '&' + nextParam;\r\n        }\r\n        return params.slice(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Array.prototype, 'unique', function() {\r\n        var a = this.concat();\r\n        for(var i = 0; i < a.length; ++i)\r\n            for(var j = i + 1; j < a.length; ++j)\r\n                if(a[i] === a[j]) a.splice(j--, 1);\r\n        return a;\r\n    });\r\n\r\n    safeExtend(Array.prototype, 'forEach', function(callback) {\r\n        for (var i = 0; i < this.length; i++)\r\n            callback(this[i], i, this);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(HTMLElement.prototype, 'addClass', function () {\r\n        var oldClassNames, newClassNames;\r\n        for(var i in arguments){\r\n            oldClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            newClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            this.className = oldClassNames.concat(newClassNames).unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'hasClass', function () {\r\n        var queryClassNames, currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n        for(var i in arguments){\r\n            queryClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            for (var index = 0; index < queryClassNames.length; index++) {\r\n                var name = queryClassNames[index];\r\n                if (currentClassNames.indexOf(name) == -1)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'removeClass', function () {\r\n        var index = 0, currentClassNames, removeClassNames;\r\n        var removeEach = function (name) {\r\n            index = currentClassNames.indexOf(name);\r\n            if (index != -1)\r\n                currentClassNames.splice(index, 1);\r\n        };\r\n        for(var i in arguments){\r\n            currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames.forEach(removeEach);\r\n            this.className = currentClassNames.unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'data', function (attr, value) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        var elAttrs = window.__data_cache.get(this) || {};\r\n        if (value !== undefined) {\r\n            elAttrs[attr] = value;\r\n            window.__data_cache.set(this, elAttrs);\r\n        } else {\r\n            if (attr) return elAttrs && elAttrs[attr];\r\n            else return elAttrs;\r\n        }\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'setData', function (data) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        window.__data_cache.set(this, data);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attr', function (name, value) {\r\n        if (value !== undefined)\r\n            this.setAttribute(name, value);\r\n        else if (value === null)\r\n            this.removeAttribute(name);\r\n        else\r\n            return this.getAttribute(name);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attrData', function (name, value) {\r\n        return this.attr('data-' + name, value);\r\n    });\r\n\r\n    safeExtend(Element.prototype, 'matches',\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;\r\n        }\r\n    );\r\n\r\n    safeExtend(HTMLElement.prototype, 'parent', function (query) {\r\n        if (!query) return this.parentElement;\r\n        var current = this.parentElement;\r\n        while (!current.matches(query))\r\n            current = current.parentElement;\r\n        return current;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'height', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.height = value + 'px';\r\n            else\r\n                this.style.height = value;\r\n        } else\r\n            return this.clientHeight;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'width', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.width = value + 'px';\r\n            else\r\n                this.style.width = value;\r\n        } else\r\n            return this.clientWidth;\r\n    });\r\n\r\n    safeExtend(window, 'guid', function () {\r\n        return 'GUID-' + s4() + '-' + s4() + '-' + s4();\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'guid', function () {\r\n        var guid = null, overlap = null;\r\n        do {\r\n            guid = window.guid();\r\n            overlap = document.querySelector('#' + guid);\r\n        } while(overlap);\r\n        this.attr('id', guid);\r\n        return guid;\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16).substring(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Object, 'clone', function (obj) {\r\n        var newObj = {};\r\n        for (var property in obj)\r\n            if (obj.hasOwnProperty(property)) {\r\n                var value = obj[property];\r\n                if (typeof value === 'object')\r\n                    newObj[property] = Object.clone(obj[property]);\r\n                else\r\n                    newObj[property] = obj[property];\r\n            }\r\n        return newObj;\r\n    });\r\n\r\n    safeExtend(Object, 'assign', function(target, varArgs) {\r\n        if (target === null)\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        var to = Object(target);\r\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n            if (nextSource !== null) {\r\n                for (var nextKey in nextSource) {\r\n                    if (hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return to;\r\n    });\r\n\r\n    safeExtend(Object, 'extend', function(options, defaults) {\r\n        return Object.assign({}, defaults, options);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var TreeNode = function (parent, data) {\r\n        this.parent = parent || null;\r\n        this.data = data || {};\r\n        this.children = [];\r\n    };\r\n\r\n    window.TreeNode = TreeNode;\r\n\r\n    TreeNode.prototype.isRoot = function () {\r\n        return !this.parent;\r\n    };\r\n\r\n    TreeNode.prototype.add = function (data) {\r\n        var child = new this.constructor(this, data);\r\n        this.children.push(child);\r\n        return child;\r\n    };\r\n\r\n    TreeNode.prototype.remove = function (index) {\r\n        this.children.slice(index, 1);\r\n        return this;\r\n    };\r\n\r\n    TreeNode.prototype.dfs = function (check) {\r\n        var out = [];\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n            out.concat(this.children[i].dfs(check));\r\n        }\r\n        return out;\r\n    };\r\n\r\n    TreeNode.prototype.bfs = function (check) {\r\n        var out = [], i;\r\n        for (i = 0; i < this.children.length; i++)\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n        for (i = 0; i < this.children.length; i++)\r\n            out.concat(this.children[i].bfs(check));\r\n        return out;\r\n    };\r\n\r\n    TreeNode.extend = function () {\r\n        var _TreeNode = function (parent, data) {\r\n            TreeNode.call(this, parent, data);\r\n        };\r\n        _TreeNode.prototype = Object.create(TreeNode.prototype);\r\n        _TreeNode.prototype.constructor = _TreeNode;\r\n        return new _TreeNode();\r\n    };\r\n})());\r\n","((function() {\r\n    'use strict';\r\n\r\n    var EventHandler = function (isDebug) {\r\n        this.isDebug = !!isDebug;\r\n        this.listeners = {};\r\n    };\r\n\r\n    EventHandler.prototype.trigger = function() {\r\n        var name = arguments[0];\r\n        var listeners = this.listeners[name] || [];\r\n        Array.prototype.splice.call(arguments, 0, 1);\r\n        if (this.isDebug) console.debug(name, arguments);\r\n        for (var i = 0; i < listeners.length; i++)\r\n            listeners[i].apply(null, arguments);\r\n    };\r\n\r\n    EventHandler.prototype.on = function(name, callback) {\r\n        if (!this.listeners[name]) this.listeners[name] = [];\r\n        this.listeners[name].push(callback);\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name) {\r\n        delete this.listeners[name];\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name, callback) {\r\n        if (this.listeners[name]) {\r\n            var array = this.listeners[name];\r\n            if (array.indexOf(callback) > -1) array.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    EventHandler.prototype.reset = function() {\r\n        var own = this;\r\n        Object.keys(this.listeners).forEach(function(key) {\r\n            delete own.listeners[key];\r\n        });\r\n    };\r\n\r\n    window.EventHandler = EventHandler;\r\n})());\r\n","/* jshint loopfunc:true */\r\n\r\n((function(){\r\n    'use strict';\r\n\r\n    var Logger = function (instance) {\r\n        this.handlers = [];\r\n\r\n        this.addHandler(this.level.ALL, function (level, args) {\r\n            if (Logger.prototype.level.DEBUG === level) {\r\n                console.debug.apply(this, args);\r\n            } else if (Logger.prototype.level.INFO === level) {\r\n                console.info.apply(this, args);\r\n            } else if (Logger.prototype.level.WARNING === level) {\r\n                console.warn.apply(this, args);\r\n            } else if (Logger.prototype.level.ERROR === level) {\r\n                console.error.apply(this, args);\r\n            }\r\n        });\r\n    };\r\n\r\n    Logger.prototype.debug = function () {\r\n        this.log(Logger.prototype.level.DEBUG, arguments);\r\n    };\r\n\r\n    Logger.prototype.info = function () {\r\n        this.log(Logger.prototype.level.INFO, arguments);\r\n    };\r\n\r\n    Logger.prototype.warning = function () {\r\n        this.log(Logger.prototype.level.WARNING, arguments);\r\n    };\r\n\r\n    Logger.prototype.error = function () {\r\n        this.log(Logger.prototype.level.ERROR, arguments);\r\n    };\r\n\r\n    Logger.prototype.log = function (level, args) {\r\n        var tmp = level;\r\n        var levelHandlers = this.handlers[tmp] || [];\r\n        while (tmp >= 0) {\r\n            levelHandlers.forEach(function (handler) {\r\n                handler(level, args);\r\n            });\r\n            levelHandlers = this.handlers[--tmp] || [];\r\n        }\r\n    };\r\n\r\n    Logger.prototype.addHandler = function (level, callback) {\r\n        if (!this.handlers[level])\r\n            this.handlers[level] = [];\r\n        this.handlers[level].push(callback);\r\n    };\r\n\r\n    Logger.prototype.removeHandler = function (level, callback) {\r\n        var levelHandlers = this.handlers[level];\r\n        if (levelHandlers) {\r\n            var index = levelHandlers.indexOf(callback);\r\n            if (index > -1)\r\n                levelHandlers.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    Logger.prototype.level = {\r\n        ALL: 0,\r\n        DEBUG: 1,\r\n        INFO: 2,\r\n        WARNING: 3,\r\n        ERROR: 4,\r\n        NONE: 5,\r\n    };\r\n\r\n    window.Logger = Logger;\r\n})());\r\n","(function(){\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        container: {\r\n            selector: '#cobweb'\r\n        }\r\n    };\r\n\r\n    var Cobweb = function (options) {\r\n        this.options = Object.assign({}, defaultOptions, options);\r\n        var instance = this;\r\n\r\n        this.container = document.querySelector(this.options.container.selector);\r\n        if (!this.container)\r\n            throw new Error('Invalid container selector: \\'' +\r\n                this.options.container.selector + '\\'');\r\n        this.container.addClass('cb-container');\r\n        this.container.data('instance', this);\r\n\r\n        this.logger = new Logger(this, true);\r\n        this.events = new EventHandler(true);\r\n        this.modules = new Modules([this], {\r\n            onLoadedAll: function (names) {\r\n                instance.events.trigger('modules.loaded.all', names);\r\n                instance.events.trigger('app.loaded');\r\n            }\r\n        });\r\n    };\r\n\r\n    window.Cobweb = Cobweb;\r\n}());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Modules = function (params, callbacks) {\r\n        callbacks = callbacks || {};\r\n        var modules = Modules.prototype.all;\r\n        try {\r\n            var sortedNames = topologicalSort(modules);\r\n            for (var i = 0; i < sortedNames.length; i++ ) {\r\n                var name = sortedNames[i];\r\n                var module = modules[name];\r\n                try {\r\n                    module.init.apply(this, params);\r\n                    runCallback(callbacks, 'onLoaded', [name, module]);\r\n                } catch (ex) {\r\n                    console.error('Error loading module:', name, ex);\r\n                    runCallback(callbacks, 'onError', [ex, name, module]);\r\n                }\r\n            }\r\n            runCallback(callbacks, 'onLoadedAll', [sortedNames]);\r\n        } catch (ex) {\r\n            console.error('Error loading modules:', ex);\r\n        }\r\n    };\r\n\r\n    Modules.prototype.all = {};\r\n    Modules.prototype.add = function (name, init, dependencies) {\r\n        dependencies = dependencies || [];\r\n\r\n        var dependant = [];\r\n        var dependencyModule, i;\r\n        for (var moduleName in this.all) {\r\n            var module = this.all[moduleName];\r\n            for (i = 0; i < module.dependencies.length; i++)\r\n                if (module.dependencies[i] === name)\r\n                    dependant.push(moduleName);\r\n        }\r\n        for (i = 0; i < dependencies.length; i++) {\r\n            dependencyModule = this.all[dependencies[i]];\r\n            if (dependencyModule) dependencyModule.dependant.push(name);\r\n        }\r\n\r\n        this.all[name] = {\r\n            dependencies: dependencies,\r\n            dependant: dependant,\r\n            init: init\r\n        };\r\n    };\r\n\r\n    window.Modules = Modules;\r\n\r\n    function topologicalSort (modules) {\r\n        var sortedNames = [];\r\n\r\n        var module = null, i = 0;\r\n        for (var name in modules) {\r\n            module = modules[name];\r\n            for (i = 0; i < module.dependencies.length; i++) {\r\n                var depName = module.dependencies[i];\r\n                if (!modules[depName])\r\n                    throw new Error('Missing module: ' + depName);\r\n            }\r\n        }\r\n\r\n        var nextName = null;\r\n        var candidates = getInitialCandidates(modules);\r\n        while (candidates.length > 0) {\r\n            nextName = candidates.splice(0, 1)[0];\r\n            module = modules[nextName];\r\n            if (module) {\r\n                sortedNames.push(nextName);\r\n                for (i = 0; i < module.dependant.length; i++) {\r\n                    var dependantName = module.dependant[i];\r\n                    if (allDependenciesMet(sortedNames, modules[dependantName]))\r\n                        candidates.push(dependantName);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Object.keys(modules).length !== sortedNames.length)\r\n            throw new Error('Dependency cycle!');\r\n\r\n        return sortedNames;\r\n    }\r\n\r\n    function getInitialCandidates (modules) {\r\n        var candidates = [];\r\n        for (var name in modules)\r\n            if (modules[name].dependencies.length === 0)\r\n                candidates.push(name);\r\n        return candidates;\r\n    }\r\n\r\n    function allDependenciesMet (loadedUntilNow, module) {\r\n        for (var i = 0; i < module.dependencies.length; i++)\r\n            if (loadedUntilNow.indexOf(module.dependencies[i]) === -1) return false;\r\n        return true;\r\n    }\r\n\r\n    function runCallback (callbacks, name, params) {\r\n        var callback = callbacks[name];\r\n        var isFunction = typeof callback === 'function';\r\n        if (isFunction) callback.apply(null, params);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-header', function (instance) {\r\n        instance.events.on('pane.create', function (pane) {\r\n            onCreateCallback(pane, instance);\r\n        });\r\n    }, ['pane-types']);\r\n\r\n    function onCreateCallback (pane, instance) {\r\n        var header = createHeader();\r\n        pane.appendChild(header);\r\n    }\r\n\r\n    function createHeader () {\r\n        var div = document.createElement('div');\r\n        div.className = 'pane-header';\r\n        return div;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-types', function (instance) {\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var oldType = oldPane.attrData('pane-type');\r\n            if (oldType) instance.pane.setType(newPane, oldType);\r\n        });\r\n\r\n        instance.pane.types = {};\r\n\r\n        instance.pane.setType = function (pane, name) {\r\n            if (this.types[name]) {\r\n                var typeCallbacks = this.types[name];\r\n                typeCallbacks.onPaneType(pane, instance);\r\n                var paneHeader = pane.querySelector('.pane-header');\r\n                typeCallbacks.onCreateHeader(paneHeader, instance);\r\n                pane.dataset.paneType = name;\r\n            }\r\n        };\r\n    }, ['pane']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane', function (instance) {\r\n        instance.events.on('app.loaded', function () {\r\n            instance.pane.internal = new Pane({\r\n                container: instance.options.container.selector,\r\n                separator: {\r\n                    size: 3\r\n                },\r\n                callbacks: {\r\n                    onPaneCreate: onPaneCreate,\r\n                    onPaneSplit: onPaneSplit,\r\n                    onPaneResize: onPaneResize,\r\n                    //onPaneMerge: onPaneMerge,\r\n                    //onPaneDestroy: onPaneDestroy,\r\n                }\r\n            });\r\n\r\n            var root = instance.pane.internal.container.querySelector('.pane');\r\n            instance.pane.setType(root, 'surface');\r\n        });\r\n\r\n        instance.pane = {};\r\n\r\n        function onPaneCreate (pane) {\r\n            instance.events.trigger('pane.create', pane);\r\n        }\r\n\r\n        function onPaneSplit (origin, newPane) {\r\n            instance.events.trigger('pane.split', origin, newPane);\r\n        }\r\n\r\n        function onPaneResize (pane) {\r\n            instance.events.trigger('pane.resize', pane);\r\n        }\r\n\r\n        function onPaneMerge (merger, toRemove) {\r\n            console.debug('onPaneMerge', merger, toRemove);\r\n        }\r\n\r\n        function onPaneDestroy (pane) {\r\n            console.debug('onPaneDestroy', pane);\r\n        }\r\n    });\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Camera = function (center, rotation, distance) {\r\n        this.center = center || [0, 0, 0];\r\n        this.rotation = rotation || [-0.5, -0.5];\r\n        this.distance = distance || 12;\r\n        this.projection = mat4.create();\r\n    };\r\n\r\n    Camera.prototype.getViewMatrix = function (view) {\r\n        view = view || mat4.create();\r\n        var eye = [0, 0, 0];\r\n        this.getPosition(eye);\r\n        mat4.lookAt(view, eye, this.center, this.getUpDirection());\r\n        return view;\r\n    };\r\n\r\n    Camera.prototype.getPosition = function (eye) {\r\n        eye = eye || vec3.create();\r\n        vec3.set(eye, 0, 0, -this.distance);\r\n        vec3.rotateX(eye, eye, this.rotation[1]);\r\n        vec3.rotateY(eye, eye, -this.rotation[0]);\r\n        return eye;\r\n    };\r\n\r\n    Camera.prototype.getDirection = function (direction) {\r\n        direction = direction || vec3.create();\r\n        var eye = this.getPosition();\r\n        vec3.sub(direction, this.center, eye);\r\n        vec3.normalize(direction, direction);\r\n        return direction;\r\n    };\r\n\r\n    Camera.prototype.getRay = function (ray, canvasCoords, canvasSize) {\r\n        ray = ray || new Math.Ray();\r\n        this.getPosition(ray.start);\r\n        vec3.set(ray.direction, canvasCoords[0] / (canvasSize[0] * 0.5) - 1.0,\r\n            canvasCoords[1] / (canvasSize[1] * 0.5) - 1.0, 1);\r\n        var auxMat = mat4.create();\r\n        mat4.multiply(auxMat, this.projection, this.getViewMatrix());\r\n        mat4.invert(auxMat, auxMat);\r\n        vec3.transformMat4(ray.direction, ray.direction, auxMat);\r\n        vec3.normalize(ray.direction, ray.direction);\r\n        return ray;\r\n    };\r\n\r\n    Camera.prototype.getUpDirection = function (up) {\r\n        up = up || vec3.create();\r\n        var vRotation = this.rotation[1];\r\n        if (vRotation >= Math.PI / 2 &&\r\n            vRotation <= ((Math.PI * 3) / 2))\r\n            vec3.set(up, 0, -1, 0);\r\n        else vec3.set(up, 0, 1, 0);\r\n        return up;\r\n    };\r\n\r\n    window.Math.Camera = Camera;\r\n})());\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tvar defaultOptions = {\r\n\t\tmaxItems: 5,\r\n\t\tmaxDepth: 5,\r\n\t};\r\n\r\n\tvar OctreeNode = function (parent, depth) {\r\n\t\tthis.items = [];\r\n\t\tthis.children = null;\r\n\t\tthis.depth = depth || 0;\r\n\t\tthis.parent = parent || null;\r\n\t\tthis.aabb = { max: [0, 0, 0], min: [0, 0, 0] };\r\n\r\n\t\tthis.root = this;\r\n\t\twhile (this.root.parent !== null)\r\n\t\t\tthis.root = this.root.parent;\r\n\t};\r\n\r\n\tOctreeNode.prototype.getAllItems = function () {\r\n        if (!this.children) return this.items;\r\n        else {\r\n            var allItems = [];\r\n            for (var i = 0; i < this.children.length; i++)\r\n                allItems = allItems.concat(this.children[i].getAllItems());\r\n            return allItems;\r\n        }\r\n\t};\r\n\r\n\tOctreeNode.prototype.addItems = function (items) {\r\n\t\tvar result = false;\r\n\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\tvar item = items[i];\r\n\t\t\tresult |= this.addItem(item);\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tOctreeNode.prototype.addItem = function (item) {\r\n\t\tif (this.contains(item)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < 8; i++)\r\n\t\t\t\t\tif (this.children[i].addItem(item))\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.items.push(item);\r\n\t\t\t\tthis.splitIfNeeded();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tOctreeNode.prototype.splitIfNeeded = function () {\r\n\t\tif (this.root.options.maxItems < this.items.length &&\r\n\t\t\tthis.root.options.maxDepth >= this.depth) {\r\n\t\t\tthis.children = [];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tthis.children[i] = new OctreeNode(this, this.depth + 1);\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t\t\t}\r\n\t\t\twhile (this.items.length > 0) {\r\n\t\t\t\tvar item = this.items.pop();\r\n\t\t\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\t\t\tvar child = this.children[i];\r\n\t\t\t\t\tif (child.addItem(item)) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tOctreeNode.prototype.removeItem = function (item) {\r\n\t\tvar index = this.items.indexOf(item);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.items.splice(index, 1);\r\n\t\t\tthis.mergeIfNeeded();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tOctreeNode.prototype.mergeIfNeeded = function () {\r\n\t\t//TODO: implement\r\n\t};\r\n\r\n\tOctreeNode.prototype.contains = function (item) {\r\n\t\treturn isContained(item, this.aabb);\r\n\t};\r\n\r\n\tOctreeNode.prototype.getCollidingNodes = function (ray) {\r\n\t\tvar nodes = [];\r\n\t\tvar aabb = this.aabb;\r\n\t\tvar collidingPoint = [0, 0, 0];\r\n\t\tif (Math.geo.rayAABBCollision(ray.start, ray.direction,\r\n\t\t\tthis.aabb.min, this.aabb.max, collidingPoint)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\t\tvar child = this.children[i];\r\n\t\t\t\t\tnodes = nodes.concat(child.getCollidingNodes(ray));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnodes.push(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nodes;\r\n\t};\r\n\r\n\tOctreeNode.prototype.getCollidingItems = function (ray) {\r\n\t\tvar items = [];\r\n\t\tthis.getCollidingNodes(ray).forEach(function (node) {\r\n\t\t\titems = items.concat(node.items);\r\n\t\t});\r\n\t\treturn items;\r\n\t};\r\n\r\n\tOctreeNode.prototype.updateDimensions = function (parentAabb, index) {\r\n\t\tvar half = [\r\n\t\t\t(parentAabb.max[0] - parentAabb.min[0]) * 0.5,\r\n\t\t\t(parentAabb.max[1] - parentAabb.min[1]) * 0.5,\r\n\t\t\t(parentAabb.max[2] - parentAabb.min[2]) * 0.5\r\n\t\t];\r\n\t\tvar ref = [!(index & 1), !(index & 2), !(index & 4)];\r\n\t\tthis.aabb.min = [\r\n\t\t\tparentAabb.min[0] + half[0] * ref[0],\r\n\t\t\tparentAabb.min[1] + half[1] * ref[1],\r\n\t\t\tparentAabb.min[2] + half[2] * ref[2]\r\n\t\t];\r\n\t\tthis.aabb.max = [\r\n\t\t\tthis.aabb.min[0] + half[0],\r\n\t\t\tthis.aabb.min[1] + half[1],\r\n\t\t\tthis.aabb.min[2] + half[2]\r\n\t\t];\r\n\t};\r\n\r\n\tvar Octree = function (options) {\r\n\t\tthis.options = Object.assign({}, defaultOptions, options);\r\n\t\tOctreeNode.call(this);\r\n\t};\r\n\r\n\tOctree.prototype = Object.create(OctreeNode.prototype);\r\n\tOctree.prototype.constructor = OctreeNode;\r\n\r\n\tvar _addItems = Octree.prototype.addItems;\r\n\tOctree.prototype.addItems = function (items) {\r\n\t\tthis.growIfNeeded(items);\r\n\t\t_addItems.call(this, items);\r\n\t};\r\n\r\n\tOctree.prototype.updateDimensions = function (newItems) {\r\n\t\tvar allItems = this.getAllItems();\r\n\t\tif (newItems) allItems.push(newItems);\r\n\t\tthis.shrinkIfNeeded(allItems);\r\n\t\tthis.growIfNeeded(allItems);\r\n\t\tif (this.children) {\r\n\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tOctree.prototype.shrinkIfNeeded = function (allItems) {\r\n\t\tconsole.debug('shrinkIfNeeded');\r\n\t};\r\n\r\n\tOctree.prototype.growIfNeeded = function (allItems) {\r\n\t\tupdateRootBounds(allItems, this.aabb);\r\n\t};\r\n\r\n\tMath.Octree = Octree;\r\n\r\n\tfunction isContained (item, aabb) {\r\n\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\tif (item[j] < aabb.min[j]) return false;\r\n\t\t\tif (item[j] > aabb.max[j]) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction updateRootBounds (items, aabb) {\r\n\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\tvar item = items[i];\r\n\t\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\t\tif (item[j] < aabb.min[j]) aabb.min[j] = item[j];\r\n\t\t\t\tif (item[j] > aabb.max[j]) aabb.max[j] = item[j];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Plane = function (point, normal) {\r\n        this.normal = normal || [0, 1, 0];\r\n        this.point = point || vec3.create();\r\n        vec3.normalize(this.normal, this.normal);\r\n    };\r\n\r\n    window.Math.Plane = Plane;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Ray = function (start, direction) {\r\n        this.direction = direction || [0, 0, 1];\r\n        this.start = start || vec3.create();\r\n        vec3.normalize(this.direction, this.direction);\r\n    };\r\n\r\n    Ray.fromPoints = function (a, b) {\r\n        var direction = vec3.create();\r\n        vec3.sub(direction, b, a);\r\n        return new Ray(a, direction);\r\n    };\r\n\r\n    window.Math.Ray = Ray;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n    \r\n    Modules.prototype.add('surface', function (instance) {\r\n        instance.pane.types.surface = {\r\n            onPaneType: onSurfacePaneType,\r\n            onCreateHeader: onCreateSurfaceHeader\r\n        };\r\n\r\n        instance.events.on('pane.resize', function (pane) {\r\n            if (pane.attrData('pane-type') === 'surface')\r\n                updateCanvasSize(instance, pane);\r\n        });\r\n\r\n        window.addEventListener('resize', function (event) {\r\n            var surfaces = instance.pane.internal.container\r\n                .querySelectorAll('.pane canvas');\r\n            for (var i = 0; i < surfaces.length; i++) {\r\n                updateCanvasSize(instance, surfaces[i].parentNode);\r\n            }\r\n        });\r\n\r\n        instance.surface = {};\r\n    }, ['pane-types']);\r\n\r\n    var surfaceIndex = 0;\r\n    function onSurfacePaneType (pane, instance) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.id = 'surface' + (surfaceIndex++);\r\n        canvas.className = 'surface';\r\n        pane.appendChild(canvas);\r\n\r\n        instance.surface.map = instance.surface.map || {};\r\n        instance.surface.map[canvas.id] = {\r\n            camera: new Math.Camera()\r\n        };\r\n\r\n        updateCanvasSize(instance, pane);\r\n\r\n        instance.events.trigger('surface.create', canvas);\r\n    }\r\n\r\n    function onCreateSurfaceHeader (header, instance) {\r\n        var label = document.createElement('label');\r\n        label.innerHTML = 'Surface Pane';\r\n        header.appendChild(label);\r\n    }\r\n\r\n    function updateCanvasSize (instance, pane) {\r\n        var canvas = pane.querySelector('canvas');\r\n        var context = canvas.getContext('2d');\r\n        var data = instance.surface.map[canvas.id];\r\n\r\n        var header = pane.querySelector('.pane-header');\r\n        var headerHeight = header ? header.height() : 0;\r\n\r\n        var width = pane.width(), height = pane.height() - headerHeight;\r\n        data.imgData = context.createImageData(width, height);\r\n        data.buffer = new Uint8Array(width * height * 4);\r\n\r\n        canvas.height = height;\r\n        canvas.width = width;\r\n\r\n        mat4.perspective(data.camera.projection, 45 * DEG2RAD, width / height, 0.1, 1000);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('math-halfEdge-cube', function (instance) {\r\n        function cube () {\r\n            var mesh = new Math.HalfEdgeMesh();\r\n\r\n            var vhandle = [];\r\n            vhandle[0] = [-1, -1,  1];\r\n            vhandle[1] = [ 1, -1,  1];\r\n            vhandle[2] = [ 1,  1,  1];\r\n            vhandle[3] = [-1,  1,  1];\r\n            vhandle[4] = [-1, -1, -1];\r\n            vhandle[5] = [ 1, -1, -1];\r\n            vhandle[6] = [ 1,  1, -1];\r\n            vhandle[7] = [-1,  1, -1];\r\n            mesh.addVertices(vhandle);\r\n\r\n            var face_vhandles = [];\r\n            face_vhandles.push(vhandle[0]);\r\n            face_vhandles.push(vhandle[1]);\r\n            face_vhandles.push(vhandle[2]);\r\n            face_vhandles.push(vhandle[3]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[7]);\r\n            face_vhandles.push(vhandle[6]);\r\n            face_vhandles.push(vhandle[5]);\r\n            face_vhandles.push(vhandle[4]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[1]);\r\n            face_vhandles.push(vhandle[0]);\r\n            face_vhandles.push(vhandle[4]);\r\n            face_vhandles.push(vhandle[5]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[2]);\r\n            face_vhandles.push(vhandle[1]);\r\n            face_vhandles.push(vhandle[5]);\r\n            face_vhandles.push(vhandle[6]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[3]);\r\n            face_vhandles.push(vhandle[2]);\r\n            face_vhandles.push(vhandle[6]);\r\n            face_vhandles.push(vhandle[7]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[0]);\r\n            face_vhandles.push(vhandle[3]);\r\n            face_vhandles.push(vhandle[7]);\r\n            face_vhandles.push(vhandle[4]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            return mesh;\r\n        }\r\n\r\n        Math.HalfEdgeCube = cube;\r\n    }, ['math-halfEdge']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('math-halfEdge', function (instance) {\r\n        Math.HalfEdgeMesh = HalfEdgeMesh;\r\n    });\r\n\r\n    var HalfEdgeMesh = function () {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n\r\n        this.bounds = new Math.Octree();\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.addVertices = function (vertices) {\r\n        if (arguments.length > 1) this.addVertices.apply(this, arguments);\r\n        if (!Array.isArray(vertices)) return;\r\n        this.bounds.addItems(vertices);\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertex = vertices[i];\r\n            var index = this.vertices.indexOf(vertex);\r\n            if (index < 0) {\r\n                var _halfEdge = {};\r\n                _halfEdge.computeNormal = VertexComputeNormal;\r\n                _halfEdge.ownIndex = this.vertices.length;\r\n                _halfEdge.getFaces = VertexGetFaces;\r\n                _halfEdge.outEdges = [];\r\n                vertex._halfEdge = _halfEdge;\r\n                this.vertices.push(vertex);\r\n            } else {\r\n                console.error('addVertices: Adding vertex twice!', vertex);\r\n            }\r\n        }\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.addFace = function (vertices) {\r\n        if (arguments.length > 1) this.addFace.apply(this, arguments);\r\n        if (!Array.isArray(vertices)) return;\r\n        if (vertices.length >= 3) {\r\n            var he1 = buildEdge(vertices[0], vertices[1]);\r\n            var he2 = buildEdge(vertices[1], vertices[2], he1.face);\r\n            he1.next = he2;\r\n            this.halfEdges.push(he1, he2);\r\n            if (vertices.length > 3) {\r\n                var last, prev = he2;\r\n                for (var i = 2; i < vertices.length - 1; i++) {\r\n                    last = buildEdge(vertices[i], vertices[i + 1], he1.face);\r\n                    if (!he2.next) he2.next = last;\r\n                    last.next = prev;\r\n                    this.halfEdges.push(last);\r\n                    prev = last;\r\n                }\r\n                last = buildEdge(vertices[i], vertices[0], he1.face);\r\n                last.next = he1;\r\n                this.halfEdges.push(last);\r\n                prev.next = last;\r\n            }\r\n            this.faces.push(he1.face);\r\n        } else {\r\n            console.error('addFace: 3 or more vertices needed to form a face!');\r\n        }\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.onVertexChange = function (vertices) {\r\n        if (arguments.length > 1) this.onVertexChange.apply(this, arguments);\r\n        if (this.mesh !== null) {\r\n            for (var i = 0; i < vertices.length; i++) {\r\n                var vertex = vertices[i];\r\n                var buffer = this.mesh.vertexBuffers.vertices.data;\r\n                buffer[vertex._halfEdge.ownIndex * 3 + 0] = vertex[0];\r\n                buffer[vertex._halfEdge.ownIndex * 3 + 1] = vertex[1];\r\n                buffer[vertex._halfEdge.ownIndex * 3 + 2] = vertex[2];\r\n            }\r\n        }\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.onVertexChangeIndex = function (indices) {\r\n        if (arguments.length > 1) this.onVertexChangeIndex.apply(this, arguments);\r\n        var vertices = this.vertices;\r\n        this.onVertexChange(indices.map(function (index) {\r\n            return vertices[index];\r\n        }));\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.clear = function () {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.getFaces = function (ray) {\r\n        var uniqueFaces = [], collidingFaces = [];\r\n        var vertices = this.bounds.getCollidingItems(ray);\r\n        vertices.forEach(function (item) {\r\n            item._halfEdge.getFaces().forEach(function (face) {\r\n                if (uniqueFaces.indexOf(face) === -1)\r\n                    uniqueFaces.push(face);\r\n            });\r\n        });\r\n        uniqueFaces.forEach(function (face) {\r\n            var triangles = face.getVerticesTriangulated();\r\n            for (var i = 0; i < triangles.length; i++) {\r\n                var triangle = triangles[i];\r\n                if (Math.geo.rayTriangleCollision(ray.start, ray.direction,\r\n                    triangle[0], triangle[1], triangle[2])) {\r\n                    collidingFaces.push(face);\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        return collidingFaces;\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.getFace = function (ray) {\r\n        var uniqueFaces = this.getFaces(ray);\r\n        uniqueFaces.sort(function (f1, f2) {\r\n            var d1 = vec3.dist(f1.computeCenter(), ray.start);\r\n            var d2 = vec3.dist(f2.computeCenter(), ray.start);\r\n            return d1 - d2;\r\n        });\r\n        return uniqueFaces[0];\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.getMesh = GetMesh;\r\n\r\n    function buildEdge (start, end, face) {\r\n        var edge = {};\r\n        edge.vertex = end;\r\n        edge.face = face ? face : new HalfEdgeFace(edge);\r\n        edge.opposite = findOppositeEdge(start, end) || edge;\r\n        edge.next = null;\r\n        start._halfEdge.outEdges.push(edge);\r\n        return edge;\r\n    }\r\n\r\n    function findOppositeEdge(start, end) {\r\n        var opposites = end._halfEdge.outEdges.filter(function (he) {\r\n            return he.vertex === start;\r\n        });\r\n        return (opposites && opposites[0]) ? opposites[0] : null;\r\n    }\r\n\r\n    function VertexGetFaces () {\r\n        return this.outEdges.map(function (edge) {\r\n            return edge.face;\r\n        });\r\n    }\r\n\r\n    function VertexComputeNormal () {\r\n        var normal = [0, 0, 0];\r\n        this.getFaces().forEach(function (face) {\r\n            vec3.add(normal, normal, face.computeRawNormal());\r\n        });\r\n        vec3.normalize(normal, normal);\r\n        return normal;\r\n    }\r\n\r\n    var HalfEdgeFace = function (halfEdge) {\r\n        this.halfEdge = halfEdge;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getEdges = function () {\r\n        var output = [];\r\n        var he = this.halfEdge;\r\n        while (he.next !== this.halfEdge) {\r\n            output.push(he);\r\n            he = he.next;\r\n        }\r\n        output.push(he);\r\n        return output;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getVertices = function () {\r\n        return this.getEdges().map(function (edge) {\r\n            return edge.vertex;\r\n        });\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getVerticesTriangulated = function () {\r\n        var triangulated = [];\r\n        var vertices = this.getVertices();\r\n        for (var i = 0; i < vertices.length - 2; i++) {\r\n            triangulated.push([vertices[0], vertices[i + 1], vertices[i + 2]]);\r\n        }\r\n        return triangulated;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeRawNormal = function () {\r\n        var normal = [0, 0, 0];\r\n        this.getVerticesTriangulated().forEach(function (triplet) {\r\n            var triangleNormal = computeNormal(triplet[0], triplet[1], triplet[2]);\r\n            vec3.add(normal, normal, triangleNormal);\r\n        });\r\n        return normal;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeNormal = function () {\r\n        var normal = this.computeRawNormal();\r\n        vec3.normalize(normal, normal);\r\n        return normal;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeCenter = function () {\r\n        var vertices = this.getVertices();\r\n        var center = vertices.reduce(function(center, p, i) {\r\n            vec3.add(center, center, p);\r\n            return center;\r\n        }, [0, 0, 0]);\r\n        vec3.scale(center, center, 1 / vertices.length);\r\n        return center;\r\n    };\r\n\r\n    function computeNormal (v1, v2, v3) {\r\n        var tmp1 = vec3.create();\r\n        var tmp2 = vec3.create();\r\n        vec3.sub(tmp1, v2, v1);\r\n        vec3.sub(tmp2, v3, v1);\r\n        vec3.cross(tmp1, tmp1, tmp2);\r\n        return tmp1;\r\n    }\r\n\r\n    function GetMesh (options) {\r\n        options = Object.assign({}, {\r\n            normals: 'vertex',\r\n            wireframe: false\r\n        }, options);\r\n        var buffers = {};\r\n\r\n        buffers.vertices = new Float32Array(this.vertices.length * 3);\r\n        for (var i = 0; i < this.vertices.length; i++) {\r\n            buffers.vertices[i * 3 + 0] = this.vertices[i][0];\r\n            buffers.vertices[i * 3 + 1] = this.vertices[i][1];\r\n            buffers.vertices[i * 3 + 2] = this.vertices[i][2];\r\n        }\r\n\r\n        buffers.normals = new Float32Array(this.vertices.length * 3);\r\n        for (i = 0; i < this.vertices.length; i++) {\r\n            var normal = this.vertices[i]._halfEdge.computeNormal();\r\n            buffers.normals[i * 3 + 0] = normal[0];\r\n            buffers.normals[i * 3 + 1] = normal[1];\r\n            buffers.normals[i * 3 + 2] = normal[2];\r\n        }\r\n\r\n        var triangles = [];\r\n        for (i = 0; i < this.faces.length; i++) {\r\n            var ts = this.faces[i].getVerticesTriangulated();\r\n            for (var j = 0; j < ts.length; j++) {\r\n                triangles.push(ts[j][0]._halfEdge.ownIndex,\r\n                    ts[j][1]._halfEdge.ownIndex, ts[j][2]._halfEdge.ownIndex);\r\n            }\r\n        }\r\n        buffers.triangles = new Uint16Array(triangles);\r\n        return GL.Mesh.load(buffers);\r\n    }\r\n})());\r\n","(function () {\r\n    'use strict';\r\n\r\n    var EPSILON = 0.000001;\r\n\r\n    Math.geo = Math.geo || {};\r\n\r\n    Math.geo.rayTriangleCollision = function (start, direction, v1, v2, v3, result) {\r\n        result = result || [0, 0, 0];\r\n    \tvar triangleNormal = getNormal(v1, v2, v3);\r\n        if (Math.geo.rayPlaneCollision(start, direction, v1, triangleNormal, result)) {\r\n            var bary = getBarycentricCoordinates(v1, v2, v3, result);\r\n        \treturn (bary[0] <= 1 && bary[0] >= 0) &&\r\n                (bary[1] <= 1 && bary[1] >= 0) &&\r\n                (bary[2] <= 1 && bary[2] >= 0);\r\n        }\r\n    \treturn false;\r\n    };\r\n\r\n    Math.geo.rayPlaneCollision = function (start, direction, planePoint, planeNormal, result) {\r\n\t\tvar numer = vec3.dot(planePoint, planeNormal) -\r\n            vec3.dot(planeNormal, start);\r\n\t\tvar denom = vec3.dot(planeNormal, direction);\r\n\t\tif (Math.abs(denom) < EPSILON) return false;\r\n\t\tvar t = numer / denom;\r\n\t\tif (t < 0.0) return false;\r\n\t\tif (result) {\r\n            vec3.scale(result, direction, t);\r\n            vec3.add(result, start, result);\r\n        }\r\n\t\treturn true;\r\n    };\r\n\r\n    Math.geo.rayAABBCollision = function (start, direction, minB, maxB, result) {\r\n        result = result || vec3.create();\r\n\r\n\t\tvar inside = true;\r\n\t\tvar quadrant = new Float32Array(3);\r\n\t\tvar i = 0|0;\r\n\t\tvar whichPlane;\r\n\t\tvar maxT = new Float32Array(3);\r\n\t\tvar candidatePlane = new Float32Array(3);\r\n\r\n\t\t/* Find candidate planes; this loop can be avoided if\r\n\t\trays cast all from the eye(assume perpsective view) */\r\n\t\tfor (i=0; i < 3; ++i)\r\n\t\t\tif(start[i] < minB[i]) {\r\n\t\t\t\tquadrant[i] = 1;\r\n\t\t\t\tcandidatePlane[i] = minB[i];\r\n\t\t\t\tinside = false;\r\n\t\t\t}else if (start[i] > maxB[i]) {\r\n\t\t\t\tquadrant[i] = 0;\r\n\t\t\t\tcandidatePlane[i] = maxB[i];\r\n\t\t\t\tinside = false;\r\n\t\t\t}else\t{\r\n\t\t\t\tquadrant[i] = 2;\r\n\t\t\t}\r\n\r\n\t\t/* Ray origin inside bounding box */\r\n\t\tif(inside)\t{\r\n\t\t\tvec3.copy(result, start);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/* Calculate T distances to candidate planes */\r\n\t\tfor (i = 0; i < 3; ++i)\r\n\t\t\tif (quadrant[i] !== 2 && direction[i] !== 0)\r\n\t\t\t\tmaxT[i] = (candidatePlane[i] - start[i]) / direction[i];\r\n\t\t\telse\r\n\t\t\t\tmaxT[i] = -1;\r\n\r\n\t\t/* Get largest of the maxT's for final choice of intersection */\r\n\t\twhichPlane = 0;\r\n\t\tfor (i = 1; i < 3; i++)\r\n\t\t\tif (maxT[whichPlane] < maxT[i])\r\n\t\t\t\twhichPlane = i;\r\n\r\n\t\t/* Check final candidate actually inside box */\r\n\t\tif (maxT[whichPlane] < 0) return false;\r\n\t\tif (maxT[whichPlane] > Number.MAX_VALUE) return false; //NOT TESTED\r\n\r\n\t\tfor (i = 0; i < 3; ++i)\r\n\t\t\tif (whichPlane != i) {\r\n\t\t\t\tresult[i] = start[i] + maxT[whichPlane] * direction[i];\r\n\t\t\t\tif (result[i] < minB[i] || result[i] > maxB[i])\r\n\t\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tresult[i] = candidatePlane[i];\r\n\t\t\t}\r\n\t\treturn true;\r\n    };\r\n\r\n    function getBarycentricCoordinates (p1, p2, p3, point) {\r\n        var v0 = getVectorFromPoints(p1, p2);\r\n        var v1 = getVectorFromPoints(p1, p3);\r\n        var v2 = getVectorFromPoints(p1, point);\r\n\r\n    \tvar d00 = vec3.dot(v0, v0);\r\n    \tvar d01 = vec3.dot(v0, v1);\r\n    \tvar d11 = vec3.dot(v1, v1);\r\n    \tvar d20 = vec3.dot(v2, v0);\r\n    \tvar d21 = vec3.dot(v2, v1);\r\n    \tvar denom = d00 * d11 - d01 * d01;\r\n\r\n        var result = [(d11 * d20 - d01 * d21) / denom,\r\n            (d00 * d21 - d01 * d20) / denom, 0];\r\n        result[2] = 1 - result[0] - result[1];\r\n    \treturn result;\r\n    }\r\n\r\n    function getNormal (v1, v2, v3) {\r\n        var tmp1 = vec3.create();\r\n        var tmp2 = vec3.create();\r\n        vec3.sub(tmp1, v2, v1);\r\n        vec3.sub(tmp2, v3, v1);\r\n        vec3.cross(tmp1, tmp1, tmp2);\r\n        return tmp1;\r\n    }\r\n\r\n    function getVectorFromPoints (a, b) {\r\n        var output = vec3.create();\r\n        vec3.sub(output, b, a);\r\n        return output;\r\n    }\r\n})();\r\n","((function () {\r\n    'use strict';\r\n\r\n    var originalRotation = null;\r\n    var mouseDownCoords = null;\r\n\r\n    Modules.prototype.add('common-interaction', function (instance) {\r\n        instance.surface.interactions.common = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n                delta /= 2;\r\n\r\n                var data = instance.surface.map[canvas.id];\r\n                data.camera.distance -= delta;\r\n                data.camera.distance = Math.max(data.camera.distance, 0);\r\n\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                if (event.target.dataset.moving) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n                    if (data) {\r\n                        var delta = getCoordsDelta(mouseDownCoords, realCoords);\r\n                        combine(data.camera, originalRotation, delta);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 3) {\r\n                    event.target.dataset.moving = 'true';\r\n                    upNormalMouseDown = vec3.equals(data.camera.getUpDirection(), [0, 1, 0]);\r\n                    originalRotation = data.camera.rotation.slice();\r\n                    mouseDownCoords = realCoords;\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 3) {\r\n                    delete event.target.dataset.moving;\r\n                    var data = instance.surface.map[event.target.id];\r\n                    mouseDownCoords = null;\r\n                }\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n    }, ['surface-interaction']);\r\n\r\n    var upNormalMouseDown = true;\r\n    function combine (surface, originalRotation, delta) {\r\n        if (!originalRotation) return;\r\n        if (!upNormalMouseDown) delta[0] = -delta[0];\r\n\r\n        var rotation = surface.rotation;\r\n        rotation[0] = originalRotation[0] + delta[0] * 0.005;\r\n        rotation[1] = originalRotation[1] + delta[1] * 0.005;\r\n        clampRotations(rotation);\r\n    }\r\n\r\n    function getCoordsDelta (initial, current) {\r\n        if (!initial) return [0, 0];\r\n        return [\r\n            initial[0] - current[0],\r\n            initial[1] - current[1]\r\n        ];\r\n    }\r\n\r\n    function clampRotations (rotations) {\r\n        var pi2 = Math.PI * 2;\r\n        if (rotations[0] < 0) rotations[0] = pi2 + rotations[0];\r\n        if (rotations[0] >= pi2) rotations[0] = rotations[0] - pi2;\r\n        if (rotations[1] < 0) rotations[1] = pi2 + rotations[1];\r\n        if (rotations[1] >= pi2) rotations[1] = rotations[1] - pi2;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-selection', function (instance) {\r\n        instance.surface.interactions.edit.selection = {\r\n            vertices: [],\r\n            edges: [],\r\n            faces: [],\r\n            last: null,\r\n            vertex: function (vertex) {\r\n                vertex.originalPosition = vertex.slice();\r\n                this.vertices.push(vertex);\r\n                this.last = 'vertices';\r\n            },\r\n            edge: function (edge) {\r\n                this.edges.push(edge);\r\n                this.last = 'edges';\r\n            },\r\n            face: function (face) {\r\n                this.faces.push(face);\r\n                this.last = 'faces';\r\n            },\r\n            clear: function () {\r\n                for (var i = 0; i < this.vertices.length; i++)\r\n                    delete this.vertices[i].originalPosition;\r\n                this.vertices = [];\r\n                this.edges = [];\r\n                this.faces = [];\r\n                this.last = null;\r\n            },\r\n            isEmpty: function () {\r\n                return (this.vertices.length === 0) &&\r\n                    (this.edges.length === 0) && (this.faces.length === 0);\r\n            }\r\n        };\r\n\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction', function (instance) {\r\n        instance.surface.interactions.edit = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                if (!this.selection.isEmpty()) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n\n                    var ray = data.camera.getRay(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n                    var cameraDirection = data.camera.getDirection();\r\n                    var face = this.selection.faces[0];\r\n                    var faceCenter = face.computeCenter();\r\n\r\n                    var hitPoint = [0, 0, 0];\r\n                    if (Math.geo.rayPlaneCollision(ray.start, ray.direction, faceCenter, cameraDirection, hitPoint)) {\r\n                        var diff = [0, 0, 0];\r\n                        vec3.sub(diff, hitPoint, faceCenter);\r\n                        face.getVertices().forEach(function (vertex) {\r\n                            vec3.add(vertex, vertex, diff);\r\n                        });\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 1) {\r\n                    var ray = data.camera.getRay(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    var hitPoint = vec3.create();\r\n                    var selection = this.selection;\r\n                    instance.scene.getObjects().forEach(function (node) {\r\n                        selection.clear();\r\n                        var face = node.data.mesh.getFace(ray);\r\n                        if (face) {\r\n                            selection.face(face);\r\n                            node.data.mesh.bounds.updateDimensions();\r\n                        }\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\n            instance.surface.setInteraction(surface, 'edit');\n        });\n\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('object-interaction', function (instance) {\r\n        instance.surface.interactions.object = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 1) {\r\n                    var ray = data.camera.getRayFromCamera(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    var isHit = false, hitPoint = vec3.create();\r\n                    instance.scene.getObjects().forEach(function (node) {\r\n                        isHit = geo.testRayBBox(ray.start, ray.direction, node.data.mesh.bounding, node.data.model, hitPoint);\r\n                        if (isHit) {\r\n                            node.data.selected = true;\r\n                        } else delete node.data.selected;\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-interaction', function (instance) {\r\n        instance.surface.interactions = {};\r\n\r\n        instance.surface.setInteraction = function (surface, name) {\r\n            surface.dataset.interaction = name;\r\n        };\r\n\r\n        instance.surface.getInteractionCallbacks = function (surface) {\r\n            var interactionName = surface.dataset.interaction;\r\n            return instance.surface.interactions[interactionName];\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            surface.oncontextmenu = onContextMenu;\r\n            surface.onmousewheel = onSurfaceEvent;\r\n            surface.onmousemove = onSurfaceEvent;\r\n            surface.onmousedown = onSurfaceEvent;\r\n            surface.onmouseup = onSurfaceEvent;\r\n            surface.onclick = onSurfaceEvent;\r\n        });\r\n\r\n        function onSurfaceEvent (event) {\r\n            var callbacks = instance.surface.getInteractionCallbacks(event.target);\r\n            var keepRunning = runCallback(callbacks, event);\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                runCallback(common, event);\r\n            }\r\n        }\r\n\r\n        function onContextMenu (event) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var initialValue = oldPane.dataset.interaction;\r\n            newPane.dataset.interaction = initialValue;\r\n        });\r\n    }, ['surface']);\r\n\r\n    function runCallback (callbacks, event) {\r\n        var realCoords = getLocalCoordinates(event);\r\n        switch (event.type) {\r\n            case 'mousewheel': return callbacks.onMouseWheel(event, realCoords);\r\n            case 'mousemove': return callbacks.onMouseMove(event, realCoords);\r\n            case 'mousedown': return callbacks.onMouseDown(event, realCoords);\r\n            case 'mouseup': return callbacks.onMouseUp(event, realCoords);\r\n            case 'click': return callbacks.onClick(event, realCoords);\r\n        }\r\n    }\r\n\r\n    function getLocalCoordinates (event) {\r\n        return [event.layerX, event.layerY];\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('render-solid', function (instance) {\r\n        var shader = null;\r\n        var firstSource = null;\r\n        var vertSource = Ajax.get('shader/solid.vert', function (response) {\r\n            if (firstSource) {\r\n                shader = new Shader(response, firstSource);\r\n            } firstSource = response;\r\n        });\r\n        var fragSource = Ajax.get('shader/solid.frag', function (response) {\r\n            if (firstSource) {\r\n                shader = new Shader(firstSource, response);\r\n            } firstSource = response;\r\n        });\r\n\r\n        var grid = {\r\n            type: 'object',\r\n            primitive: instance.graphics.gl.LINES,\r\n            mesh: GL.Mesh.grid({\r\n                lines: 11,\r\n                size: 10\r\n            }),\r\n            model: mat4.create(),\r\n        };\r\n\r\n        instance.surface.renders.solid = function (surface) {\r\n            var lightDirection = vec3.create();\r\n            surface.camera.getPosition(lightDirection);\r\n            vec3.add(lightDirection, lightDirection, [1, 2, 0]);\r\n            vec3.normalize(lightDirection, lightDirection);\r\n            uniforms.u_lightvector = lightDirection;\r\n\r\n            renderObject(surface, grid, shader);\r\n            instance.scene.getObjects().forEach(function (node) {\r\n                renderObject(surface, node.data, shader);\r\n            });\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setRender(surface, 'solid');\r\n        });\r\n    }, ['surface-render']);\r\n\r\n    var uniforms = {\r\n        u_color: [0.7, 0.7, 0.7, 1],\r\n        u_lightvector: null,\r\n        u_model: null,\r\n        u_mvp: mat4.create()\r\n    };\r\n\r\n    var temp = mat4.create();\r\n    function renderObject (surface, obj, shader) {\r\n        surface.camera.getViewMatrix(temp);\r\n        mat4.multiply(temp, surface.camera.projection, temp);\r\n        mat4.multiply(uniforms.u_mvp, temp, obj.model);\r\n\r\n        uniforms.u_color = obj.selected ? [1,0,0,1] : [0.7, 0.7, 0.7, 1];\r\n\r\n        uniforms.u_model = obj.model;\r\n\r\n        if (shader) {\r\n            shader.uniforms(uniforms);\r\n            if (obj.mesh instanceof Math.HalfEdgeMesh) {\r\n                var mesh = obj.mesh.getMesh();\r\n                shader.draw(mesh, obj.primitive);\r\n            } else {\r\n                shader.draw(obj.mesh, obj.primitive);\r\n            }\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-render', function (instance) {\r\n        instance.surface.renders = {};\r\n\r\n        instance.surface.setRender = function (surface, name) {\r\n            surface.dataset.render = name;\r\n        };\r\n\r\n        instance.surface.getRender = function (surface) {\r\n            var renderName = surface.dataset.render;\r\n            return instance.surface.renders[renderName];\r\n        };\r\n\r\n        var panes = document.querySelectorAll('.pane');\r\n        for (var i = 0; i < panes.length; i++) {\r\n            if (panes[i].dataset.paneType == 'surface') {\r\n                var canvas = panes[i].querySelector('canvas');\r\n                canvas.dataset.render = 'solid';\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            newPane.attrData('surface-render', oldPane.attrData('surface-render'));\r\n        });\r\n    }, ['surface']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Graphics = function (instance) {\r\n        this.gl = GL.create({\r\n            height: screen.height,\r\n            width: screen.width\r\n        });\r\n        this.gl.animate();\r\n        this.gl.ondraw = function () {\r\n            var renderTargets = document.querySelectorAll('canvas');\r\n            for (var i = 0; i < renderTargets.length; i++)\r\n                drawRenderTarget(instance, renderTargets[i]);\r\n        };\r\n        this.gl.clearColor(0.349, 0.349, 0.349, 1);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n    };\r\n\r\n    Modules.prototype.add('graphics', function (instance) {\r\n        instance.graphics = new Graphics(instance);\r\n    });\r\n\r\n    function drawRenderTarget (instance, canvas) {\r\n        var data = instance.surface.map[canvas.id];\r\n        var gl = instance.graphics.gl;\r\n\r\n        var width  = canvas.clientWidth, height = canvas.clientHeight;\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.viewport(0, 0, width, height);\r\n\r\n        var render = instance.surface.getRender(canvas);\r\n        if (render) render(data);\r\n\r\n        var context = canvas.getContext('2d');\r\n        if (context) {\r\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data.buffer);\r\n            data.imgData.data.set(data.buffer);\r\n            context.putImageData(data.imgData, 0, 0);\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('scene', function (instance) {\r\n        instance.scene = TreeNode.extend();\r\n\r\n        var cubeSceneNode = {\r\n            type: 'object',\r\n            primitive: instance.graphics.gl.TRIANGLES,\r\n            mesh: Math.HalfEdgeCube(),\r\n            model: mat4.create(),\r\n        };\r\n        instance.scene.add(cubeSceneNode);\r\n        instance.scene.add({\r\n            type: 'light',\r\n            color: [1, 1, 1],\r\n            intensity: 1\r\n        });\r\n\r\n        instance.scene.getObjects = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'object';\r\n            });\r\n        };\r\n\r\n        instance.scene.getLights = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'light';\r\n            });\r\n        };\r\n    }, ['graphics', 'math-halfEdge-cube']);\r\n})());\r\n"]}