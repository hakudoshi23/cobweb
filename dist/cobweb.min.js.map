{"version":3,"sources":["ajax.js","array.js","html.js","obj.js","tree.js","events.js","logger.js","cobweb.js","modules.js","asset/mesh.js","asset/shader.js","math/camera.js","math/octree.js","math/plane.js","math/ray.js","pane/pane-header.js","pane/pane-types.js","pane/panes.js","math/geometry/geometry.js","math/halfEdge/halfedge-cache.js","math/halfEdge/halfedge-cube.js","math/halfEdge/halfedge.js","pane/surface/surface.js","pane/surface/interaction/common-interaction.js","pane/surface/interaction/object-interaction.js","pane/surface/interaction/surface-interaction.js","pane/surface/render/render-solid-cache.js","pane/surface/render/render-solid.js","pane/surface/render/surface-render.js","pane/surface/interaction/edit/edit-interaction-action-move.js","pane/surface/interaction/edit/edit-interaction-render-cache.js","pane/surface/interaction/edit/edit-interaction-render.js","pane/surface/interaction/edit/edit-interaction-select.js","pane/surface/interaction/edit/edit-interaction.js","graphic.js","scene.js"],"names":["ajax","options","Object","assign","defaultAjaxOptions","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","success","response","error","method","params","objToParams","data","urlWithParams","url","open","async","send","get","Ajax","getJSON","JSON","parse","post","obj","key","encodeURIComponent","slice","window","safeExtend","prototype","property","value","Array","a","concat","i","length","j","splice","callback","s4","Math","floor","random","toString","substring","HTMLElement","oldClassNames","newClassNames","arguments","className","trim","replace","split","unique","join","queryClassNames","currentClassNames","index","name","indexOf","removeClassNames","removeEach","forEach","attr","__data_cache","WeakMap","elAttrs","undefined","set","setAttribute","getAttribute","removeAttribute","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","matches","document","ownerDocument","querySelectorAll","item","query","parentElement","current","clientHeight","style","height","clientWidth","width","guid","overlap","querySelector","newObj","hasOwnProperty","clone","target","varArgs","TypeError","to","nextSource","nextKey","call","defaults","TreeNode","parent","children","isRoot","add","child","constructor","push","remove","dfs","check","out","bfs","extend","_TreeNode","create","EventHandler","isDebug","listeners","trigger","console","debug","apply","on","off","array","reset","own","keys","Logger","instance","handlers","addHandler","level","ALL","args","DEBUG","INFO","info","WARNING","warn","ERROR","log","warning","tmp","levelHandlers","handler","removeHandler","NONE","defaultOptions","container","selector","Cobweb","Error","addClass","logger","events","modules","Modules","onLoadedAll","names","topologicalSort","sortedNames","module","dependencies","depName","nextName","candidates","getInitialCandidates","dependant","dependantName","allDependenciesMet","loadedUntilNow","runCallback","callbacks","all","init","ex","dependencyModule","moduleName","buildHalfEdge","objSource","mesh","vertices","line","startsWith","vertex","map","number","parseFloat","HalfEdgeMesh","addVertices","faceVertices","parseInt","addFace","asset","shader","firstSource","Shader","Camera","center","rotation","distance","projection","mat4","getViewMatrix","view","eye","getPosition","lookAt","getUpDirection","vec3","rotateX","rotateY","getDirection","direction","sub","normalize","getRay","ray","canvasCoords","canvasSize","Ray","start","auxMat","multiply","invert","transformMat4","up","vRotation","PI","computeLocalAxis","left","forward","cross","isContained","aabb","min","max","maxItems","maxDepth","padding","OctreeNode","depth","items","root","getAllItems","allItems","addItems","result","addItem","contains","splitIfNeeded","removeItem","removed","mergeIfNeeded","updateDimensions","pop","getCollidingNodes","nodes","collidingPoint","geo","rayAABBCollision","getCollidingItems","node","parentAabb","half","scale","ref","mul","Octree","_addItems","updateBounds","onVertexMove","newItems","fill","Number","MAX_VALUE","copy","Plane","point","normal","fromPoints","b","onCreateCallback","pane","header","createHeader","appendChild","div","createElement","oldPane","newPane","oldType","attrData","setType","types","typeCallbacks","onPaneType","paneHeader","onCreateHeader","dataset","paneType","onPaneCreate","onPaneSplit","origin","onPaneResize","internal","Pane","separator","size","getBarycentricCoordinates","p1","p2","p3","v0","getVectorFromPoints","v1","v2","d00","dot","d01","d11","d20","d21","denom","getNormal","v3","tmp1","tmp2","output","rayFaceCollision","triangles","triangulateFace","triangle","rayTriangleCollision","triangleNormal","rayPlaneCollision","bary","planePoint","planeNormal","numer","abs","t","minB","maxB","whichPlane","inside","quadrant","Float32Array","maxT","candidatePlane","closestPointsBetweenSegments","a0","a1","b0","b1","p_a","p_b","sc","tc","u","subtract","v","w","c","d","e","D","dP","rayPointDistance","aux","len","pointPointDistance","triangulated","computePointsCenter","points","findClosestPointIndex","position","closestIndex","newDistance","findClosestPoint","findClosestFace","faces","centers","face","computeCenter","superConstructor","cachedHalfEdgeMesh","heMesh","cache","meshes","builder","builders","onCreate","onClean","onVertexChange","addBuilder","cube","vhandle","face_vhandles","HalfEdgeCube","buildEdge","end","edge","HalfEdgeFace","opposite","findOppositeEdge","next","_halfEdge","outEdges","opposites","filter","he","VertexGetFaces","VertexComputeNormal","getFaces","computeRawNormal","computeNormal","bounds","halfEdges","isArray","ownIndex","he1","he2","last","prev","clear","halfEdge","getEdges","getVertices","getVerticesTriangulated","triplet","onSurfacePaneType","canvas","id","surfaceIndex","addEventListener","event","focus","surface","camera","updateCanvasSize","onCreateSurfaceHeader","label","innerHTML","context","getContext","headerHeight","imgData","createImageData","buffer","Uint8Array","perspective","DEG2RAD","surfaces","parentNode","combine","originalRotation","delta","upNormalMouseDown","clampRotations","getCoordsDelta","initial","rotations","pi2","mouseDownCoords","interactions","common","onMouseWheel","realCoords","wheelDelta","detail","onMouseMove","moving","onMouseDown","which","equals","onMouseUp","object","isHit","hitPoint","scene","getObjects","testRayBBox","bounding","model","selected","getLocalCoordinates","type","onKeyDown","onKeyUp","onClick","layerX","layerY","onContextMenu","preventDefault","onSurfaceEvent","getInteractionCallbacks","keepRunning","setInteraction","interaction","interactionName","onRender","tabIndex","oncontextmenu","onkeydown","onkeyup","onmousewheel","onmousemove","onmousedown","onmouseup","onclick","initialValue","solidBuilder","halfEdgeMesh","buffers","normals","indices","Uint16Array","GL","Mesh","load","vertexBuffers","dirty","upload","renderObject","primitive","indexBufferName","temp","uniforms","u_mvp","u_model","draw","renderBounds","octree","updateBoundsModel","boundsModel","identity","lerp","translate","solidShader","wireframeShader","colors","wireframe","grid","lines","colorsArray","bufferIndex","createVertexBuffer","axisX","axisZ","renders","solid","lightDirection","u_lightvector","graphics","gl","LINES","setRender","u_color","render","getRender","renderName","panes","initialCoords","vec2","edit","actions","move","lastCoords","selection","objects","selectedObj","originalPosition","isEmpty","currentRay","initialRay","cameraDirection","hitPointInitial","hitPointCurrent","selectionCenter","getCenter","isControlDown","round","sceneObj","getObjectByName","restore","action","wireframeBuilder","verticesBuilder","color","_selected","POINTS","toggleVertex","toggle","selectedVertices","allSelected","includes","toggleFace","arrayName","initObjectIfNeeded","delObjectIfNeeded","edges","objSelection","getFacesFromVertices","addAll","rayVertices","uniqueFaces","closestFace","isMouseDown","isShiftDown","delta2d","setAction","runAction","shiftDown","shiftKey","ctrlKey","callbackName","drawRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","mainRender","readPixels","RGBA","UNSIGNED_BYTE","putImageData","Graphics","screen","animate","ondraw","renderTargets","clearColor","enable","DEPTH_TEST","rootNode","objectCount","lightCount","addObject","TRIANGLES","addLight","getLights"],"mappings":"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","file":"cobweb.min.js","sourcesContent":["((function(){\r\n    'use strict';\r\n\r\n    var defaultAjaxOptions = {\r\n        method: 'GET',\r\n        url: '',\r\n        data: {},\r\n        async: true,\r\n        success: null,\r\n        error: null\r\n    };\r\n\r\n    function ajax (options) {\r\n        options = Object.assign({}, defaultAjaxOptions, options);\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200) {\r\n                    if (options.success) options.success(this.response);\r\n                } else {\r\n                    if (options.error) error.success(this.response);\r\n                }\r\n            }\r\n        };\r\n        if (options.method === 'GET') {\r\n            var params = objToParams(options.data);\r\n            var urlWithParams = options.url + (params ? '?' + params : '');\r\n            xhttp.open(options.method, urlWithParams, options.async);\r\n            xhttp.send();\r\n        } else if (options.method === 'POST') {\r\n            xhttp.open(options.method, options.url, options.async);\r\n            xhttp.send(options.data);\r\n        }\r\n        return xhttp;\r\n    }\r\n\r\n    function get (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function getJSON (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: function (response) {\r\n                success(JSON.parse(response));\r\n            },\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function post (url, data, success) {\r\n        if (!success) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'POST'\r\n        });\r\n    }\r\n\r\n    window.Ajax = {\r\n        ajax: ajax,\r\n        get: get,\r\n        getJSON: getJSON,\r\n        post: post\r\n    };\r\n\r\n    function objToParams (obj) {\r\n        var params = '';\r\n        for (var key in obj) {\r\n            var nextParam = key + '=' + encodeURIComponent(obj[key]);\r\n            params += '&' + nextParam;\r\n        }\r\n        return params.slice(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Array.prototype, 'unique', function() {\r\n        var a = this.concat();\r\n        for(var i = 0; i < a.length; ++i)\r\n            for(var j = i + 1; j < a.length; ++j)\r\n                if(a[i] === a[j]) a.splice(j--, 1);\r\n        return a;\r\n    });\r\n\r\n    safeExtend(Array.prototype, 'forEach', function(callback) {\r\n        for (var i = 0; i < this.length; i++)\r\n            callback(this[i], i, this);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(HTMLElement.prototype, 'addClass', function () {\r\n        var oldClassNames, newClassNames;\r\n        for(var i in arguments){\r\n            oldClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            newClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            this.className = oldClassNames.concat(newClassNames).unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'hasClass', function () {\r\n        var queryClassNames, currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n        for(var i in arguments){\r\n            queryClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            for (var index = 0; index < queryClassNames.length; index++) {\r\n                var name = queryClassNames[index];\r\n                if (currentClassNames.indexOf(name) == -1)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'removeClass', function () {\r\n        var index = 0, currentClassNames, removeClassNames;\r\n        var removeEach = function (name) {\r\n            index = currentClassNames.indexOf(name);\r\n            if (index != -1)\r\n                currentClassNames.splice(index, 1);\r\n        };\r\n        for(var i in arguments){\r\n            currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames.forEach(removeEach);\r\n            this.className = currentClassNames.unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'data', function (attr, value) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        var elAttrs = window.__data_cache.get(this) || {};\r\n        if (value !== undefined) {\r\n            elAttrs[attr] = value;\r\n            window.__data_cache.set(this, elAttrs);\r\n        } else {\r\n            if (attr) return elAttrs && elAttrs[attr];\r\n            else return elAttrs;\r\n        }\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'setData', function (data) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        window.__data_cache.set(this, data);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attr', function (name, value) {\r\n        if (value !== undefined)\r\n            this.setAttribute(name, value);\r\n        else if (value === null)\r\n            this.removeAttribute(name);\r\n        else\r\n            return this.getAttribute(name);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attrData', function (name, value) {\r\n        return this.attr('data-' + name, value);\r\n    });\r\n\r\n    safeExtend(Element.prototype, 'matches',\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;\r\n        }\r\n    );\r\n\r\n    safeExtend(HTMLElement.prototype, 'parent', function (query) {\r\n        if (!query) return this.parentElement;\r\n        var current = this.parentElement;\r\n        while (!current.matches(query))\r\n            current = current.parentElement;\r\n        return current;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'height', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.height = value + 'px';\r\n            else\r\n                this.style.height = value;\r\n        } else\r\n            return this.clientHeight;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'width', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.width = value + 'px';\r\n            else\r\n                this.style.width = value;\r\n        } else\r\n            return this.clientWidth;\r\n    });\r\n\r\n    safeExtend(window, 'guid', function () {\r\n        return 'GUID-' + s4() + '-' + s4() + '-' + s4();\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'guid', function () {\r\n        var guid = null, overlap = null;\r\n        do {\r\n            guid = window.guid();\r\n            overlap = document.querySelector('#' + guid);\r\n        } while(overlap);\r\n        this.attr('id', guid);\r\n        return guid;\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16).substring(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Object, 'clone', function (obj) {\r\n        var newObj = {};\r\n        for (var property in obj)\r\n            if (obj.hasOwnProperty(property)) {\r\n                var value = obj[property];\r\n                if (typeof value === 'object')\r\n                    newObj[property] = Object.clone(obj[property]);\r\n                else\r\n                    newObj[property] = obj[property];\r\n            }\r\n        return newObj;\r\n    });\r\n\r\n    safeExtend(Object, 'assign', function(target, varArgs) {\r\n        if (target === null)\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        var to = Object(target);\r\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n            if (nextSource !== null) {\r\n                for (var nextKey in nextSource) {\r\n                    if (hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return to;\r\n    });\r\n\r\n    safeExtend(Object, 'extend', function(options, defaults) {\r\n        return Object.assign({}, defaults, options);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var TreeNode = function (parent, data) {\r\n        this.parent = parent || null;\r\n        this.data = data || {};\r\n        this.children = [];\r\n    };\r\n\r\n    window.TreeNode = TreeNode;\r\n\r\n    TreeNode.prototype.isRoot = function () {\r\n        return !this.parent;\r\n    };\r\n\r\n    TreeNode.prototype.add = function (data) {\r\n        var child = new this.constructor(this, data);\r\n        this.children.push(child);\r\n        return child;\r\n    };\r\n\r\n    TreeNode.prototype.remove = function (index) {\r\n        this.children.slice(index, 1);\r\n        return this;\r\n    };\r\n\r\n    TreeNode.prototype.dfs = function (check) {\r\n        var out = [];\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n            out.concat(this.children[i].dfs(check));\r\n        }\r\n        return out;\r\n    };\r\n\r\n    TreeNode.prototype.bfs = function (check) {\r\n        var out = [], i;\r\n        for (i = 0; i < this.children.length; i++)\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n        for (i = 0; i < this.children.length; i++)\r\n            out.concat(this.children[i].bfs(check));\r\n        return out;\r\n    };\r\n\r\n    TreeNode.extend = function () {\r\n        var _TreeNode = function (parent, data) {\r\n            TreeNode.call(this, parent, data);\r\n        };\r\n        _TreeNode.prototype = Object.create(TreeNode.prototype);\r\n        _TreeNode.prototype.constructor = _TreeNode;\r\n        return new _TreeNode();\r\n    };\r\n})());\r\n","((function() {\r\n    'use strict';\r\n\r\n    var EventHandler = function (isDebug) {\r\n        this.isDebug = !!isDebug;\r\n        this.listeners = {};\r\n    };\r\n\r\n    EventHandler.prototype.trigger = function() {\r\n        var name = arguments[0];\r\n        var listeners = this.listeners[name] || [];\r\n        Array.prototype.splice.call(arguments, 0, 1);\r\n        if (this.isDebug) console.debug(name, arguments);\r\n        for (var i = 0; i < listeners.length; i++)\r\n            listeners[i].apply(null, arguments);\r\n    };\r\n\r\n    EventHandler.prototype.on = function(name, callback) {\r\n        if (!this.listeners[name]) this.listeners[name] = [];\r\n        this.listeners[name].push(callback);\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name) {\r\n        delete this.listeners[name];\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name, callback) {\r\n        if (this.listeners[name]) {\r\n            var array = this.listeners[name];\r\n            if (array.indexOf(callback) > -1) array.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    EventHandler.prototype.reset = function() {\r\n        var own = this;\r\n        Object.keys(this.listeners).forEach(function(key) {\r\n            delete own.listeners[key];\r\n        });\r\n    };\r\n\r\n    window.EventHandler = EventHandler;\r\n})());\r\n","/* jshint loopfunc:true */\r\n\r\n((function(){\r\n    'use strict';\r\n\r\n    var Logger = function (instance) {\r\n        this.handlers = [];\r\n\r\n        this.addHandler(this.level.ALL, function (level, args) {\r\n            if (Logger.prototype.level.DEBUG === level) {\r\n                console.debug.apply(this, args);\r\n            } else if (Logger.prototype.level.INFO === level) {\r\n                console.info.apply(this, args);\r\n            } else if (Logger.prototype.level.WARNING === level) {\r\n                console.warn.apply(this, args);\r\n            } else if (Logger.prototype.level.ERROR === level) {\r\n                console.error.apply(this, args);\r\n            }\r\n        });\r\n    };\r\n\r\n    Logger.prototype.debug = function () {\r\n        this.log(Logger.prototype.level.DEBUG, arguments);\r\n    };\r\n\r\n    Logger.prototype.info = function () {\r\n        this.log(Logger.prototype.level.INFO, arguments);\r\n    };\r\n\r\n    Logger.prototype.warning = function () {\r\n        this.log(Logger.prototype.level.WARNING, arguments);\r\n    };\r\n\r\n    Logger.prototype.error = function () {\r\n        this.log(Logger.prototype.level.ERROR, arguments);\r\n    };\r\n\r\n    Logger.prototype.log = function (level, args) {\r\n        var tmp = level;\r\n        var levelHandlers = this.handlers[tmp] || [];\r\n        while (tmp >= 0) {\r\n            levelHandlers.forEach(function (handler) {\r\n                handler(level, args);\r\n            });\r\n            levelHandlers = this.handlers[--tmp] || [];\r\n        }\r\n    };\r\n\r\n    Logger.prototype.addHandler = function (level, callback) {\r\n        if (!this.handlers[level])\r\n            this.handlers[level] = [];\r\n        this.handlers[level].push(callback);\r\n    };\r\n\r\n    Logger.prototype.removeHandler = function (level, callback) {\r\n        var levelHandlers = this.handlers[level];\r\n        if (levelHandlers) {\r\n            var index = levelHandlers.indexOf(callback);\r\n            if (index > -1)\r\n                levelHandlers.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    Logger.prototype.level = {\r\n        ALL: 0,\r\n        DEBUG: 1,\r\n        INFO: 2,\r\n        WARNING: 3,\r\n        ERROR: 4,\r\n        NONE: 5,\r\n    };\r\n\r\n    window.Logger = Logger;\r\n})());\r\n","(function(){\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        container: {\r\n            selector: '#cobweb'\r\n        }\r\n    };\r\n\r\n    var Cobweb = function (options) {\r\n        this.options = Object.assign({}, defaultOptions, options);\r\n        var instance = this;\r\n\r\n        this.container = document.querySelector(this.options.container.selector);\r\n        if (!this.container)\r\n            throw new Error('Invalid container selector: \\'' +\r\n                this.options.container.selector + '\\'');\r\n        this.container.addClass('cb-container');\r\n        this.container.data('instance', this);\r\n\r\n        this.logger = new Logger(this, true);\r\n        this.events = new EventHandler(true);\r\n        this.modules = new Modules([this], {\r\n            onLoadedAll: function (names) {\r\n                instance.events.trigger('modules.loaded.all', names);\r\n                instance.events.trigger('app.loaded');\r\n            }\r\n        });\r\n    };\r\n\r\n    window.Cobweb = Cobweb;\r\n}());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Modules = function (params, callbacks) {\r\n        callbacks = callbacks || {};\r\n        var modules = Modules.prototype.all;\r\n        try {\r\n            var sortedNames = topologicalSort(modules);\r\n            for (var i = 0; i < sortedNames.length; i++ ) {\r\n                var name = sortedNames[i];\r\n                var module = modules[name];\r\n                try {\r\n                    module.init.apply(this, params);\r\n                    runCallback(callbacks, 'onLoaded', [name, module]);\r\n                } catch (ex) {\r\n                    console.error('Error loading module:', name, ex);\r\n                    runCallback(callbacks, 'onError', [ex, name, module]);\r\n                }\r\n            }\r\n            runCallback(callbacks, 'onLoadedAll', [sortedNames]);\r\n        } catch (ex) {\r\n            console.error('Error loading modules:', ex);\r\n        }\r\n    };\r\n\r\n    Modules.prototype.all = {};\r\n    Modules.prototype.add = function (name, init, dependencies) {\r\n        dependencies = dependencies || [];\r\n\r\n        var dependant = [];\r\n        var dependencyModule, i;\r\n        for (var moduleName in this.all) {\r\n            var module = this.all[moduleName];\r\n            for (i = 0; i < module.dependencies.length; i++)\r\n                if (module.dependencies[i] === name)\r\n                    dependant.push(moduleName);\r\n        }\r\n        for (i = 0; i < dependencies.length; i++) {\r\n            dependencyModule = this.all[dependencies[i]];\r\n            if (dependencyModule) dependencyModule.dependant.push(name);\r\n        }\r\n\r\n        this.all[name] = {\r\n            dependencies: dependencies,\r\n            dependant: dependant,\r\n            init: init\r\n        };\r\n    };\r\n\r\n    window.Modules = Modules;\r\n\r\n    function topologicalSort (modules) {\r\n        var sortedNames = [];\r\n\r\n        var module = null, i = 0;\r\n        for (var name in modules) {\r\n            module = modules[name];\r\n            for (i = 0; i < module.dependencies.length; i++) {\r\n                var depName = module.dependencies[i];\r\n                if (!modules[depName])\r\n                    throw new Error('Missing module: ' + depName);\r\n            }\r\n        }\r\n\r\n        var nextName = null;\r\n        var candidates = getInitialCandidates(modules);\r\n        while (candidates.length > 0) {\r\n            nextName = candidates.splice(0, 1)[0];\r\n            module = modules[nextName];\r\n            if (module) {\r\n                sortedNames.push(nextName);\r\n                for (i = 0; i < module.dependant.length; i++) {\r\n                    var dependantName = module.dependant[i];\r\n                    if (allDependenciesMet(sortedNames, modules[dependantName]))\r\n                        candidates.push(dependantName);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Object.keys(modules).length !== sortedNames.length)\r\n            throw new Error('Dependency cycle!');\r\n\r\n        return sortedNames;\r\n    }\r\n\r\n    function getInitialCandidates (modules) {\r\n        var candidates = [];\r\n        for (var name in modules)\r\n            if (modules[name].dependencies.length === 0)\r\n                candidates.push(name);\r\n        return candidates;\r\n    }\r\n\r\n    function allDependenciesMet (loadedUntilNow, module) {\r\n        for (var i = 0; i < module.dependencies.length; i++)\r\n            if (loadedUntilNow.indexOf(module.dependencies[i]) === -1) return false;\r\n        return true;\r\n    }\r\n\r\n    function runCallback (callbacks, name, params) {\r\n        var callback = callbacks[name];\r\n        var isFunction = typeof callback === 'function';\r\n        if (isFunction) callback.apply(null, params);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('mesh', function (instance) {\r\n        instance.asset = instance.asset || {};\r\n        instance.asset.mesh = {\r\n            get: function (name, callback) {\r\n                Ajax.get('asset/mesh/' + name + '.obj', function (response) {\r\n                    callback(buildHalfEdge(response));\r\n                });\r\n            }\r\n        };\r\n    });\r\n\r\n    function buildHalfEdge (objSource) {\r\n        var mesh = null;\r\n        var vertices = [];\r\n        var lines = objSource.split(/\\r?\\n/);\r\n        lines.forEach(function (line) {\r\n            if (line.startsWith('v')) {\r\n                var vertex = line.substring(2).split(' ').map(function (number) {\r\n                    return parseFloat(number);\r\n                });\r\n                vertices.push(vertex);\r\n            } else if (line.startsWith('f')) {\r\n                if (mesh === null) {\r\n                    mesh = new Math.HalfEdgeMesh();\r\n                    mesh.addVertices(vertices);\r\n                }\r\n                var faceVertices = line.substring(2).split(' ').map(function (index) {\r\n                    return vertices[parseInt(index) - 1];\r\n                });\r\n                mesh.addFace(faceVertices);\r\n            }\r\n        });\r\n        return mesh;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('shader', function (instance) {\r\n        instance.asset = instance.asset || {};\r\n        instance.asset.shader = {\r\n            get: function (name, callback) {\r\n                var shader = null, firstSource = null;\r\n                Ajax.get('asset/shader/' + name + '.vert', function (response) {\r\n                    if (firstSource) {\r\n                        shader = new Shader(response, firstSource);\r\n                        callback(shader);\r\n                    } firstSource = response;\r\n                });\r\n                Ajax.get('asset/shader/' + name + '.frag', function (response) {\r\n                    if (firstSource) {\r\n                        shader = new Shader(firstSource, response);\r\n                        callback(shader);\r\n                    } firstSource = response;\r\n                });\r\n            }\r\n        };\r\n    });\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Camera = function (center, rotation, distance) {\r\n        this.center = center || [0, 0, 0];\r\n        this.rotation = rotation || [-0.5, 0.5];\r\n        this.distance = distance || 20;\r\n        this.projection = mat4.create();\r\n    };\r\n\r\n    Camera.prototype.getViewMatrix = function (view) {\r\n        view = view || mat4.create();\r\n        var eye = [0, 0, 0];\r\n        this.getPosition(eye);\r\n        mat4.lookAt(view, eye, this.center, this.getUpDirection());\r\n        return view;\r\n    };\r\n\r\n    Camera.prototype.getPosition = function (eye) {\r\n        eye = eye || vec3.create();\r\n        vec3.set(eye, 0, 0, -this.distance);\r\n        vec3.rotateX(eye, eye, this.rotation[1]);\r\n        vec3.rotateY(eye, eye, -this.rotation[0]);\r\n        return eye;\r\n    };\r\n\r\n    Camera.prototype.getDirection = function (direction) {\r\n        direction = direction || vec3.create();\r\n        var eye = this.getPosition();\r\n        vec3.sub(direction, this.center, eye);\r\n        vec3.normalize(direction, direction);\r\n        return direction;\r\n    };\r\n\r\n    Camera.prototype.getRay = function (ray, canvasCoords, canvasSize) {\r\n        ray = ray || new Math.Ray();\r\n        this.getPosition(ray.start);\r\n        vec3.set(ray.direction, canvasCoords[0] / (canvasSize[0] * 0.5) - 1.0,\r\n            canvasCoords[1] / (canvasSize[1] * 0.5) - 1.0, 1);\r\n        var auxMat = mat4.create();\r\n        mat4.multiply(auxMat, this.projection, this.getViewMatrix());\r\n        mat4.invert(auxMat, auxMat);\r\n        vec3.transformMat4(ray.direction, ray.direction, auxMat);\r\n        vec3.normalize(ray.direction, ray.direction);\r\n        return ray;\r\n    };\r\n\r\n    Camera.prototype.getUpDirection = function (up) {\r\n        up = up || vec3.create();\r\n        var vRotation = this.rotation[1];\r\n        if (vRotation >= Math.PI / 2 &&\r\n            vRotation <= ((Math.PI * 3) / 2))\r\n            vec3.set(up, 0, 1, 0);\r\n        else vec3.set(up, 0, -1, 0);\r\n        return up;\r\n    };\r\n\r\n    Camera.prototype.computeLocalAxis = function () {\r\n        var left = [0, 0, 0];\r\n        var up = [0, 0, 0];\r\n\r\n        var forward = this.getDirection();\r\n        vec3.cross(left, forward, [0, 1, 0]);\r\n        vec3.cross(up, forward, left);\r\n\r\n        return {up: up, left: left};\r\n    };\r\n\r\n    window.Math.Camera = Camera;\r\n})());\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tvar defaultOptions = {\r\n\t\tmaxItems: 50,\r\n\t\tmaxDepth: 5,\r\n\t\tpadding: 0.1\r\n\t};\r\n\r\n\tvar OctreeNode = function (parent, depth) {\r\n\t\tthis.items = [];\r\n\t\tthis.children = null;\r\n\t\tthis.depth = depth || 0;\r\n\t\tthis.parent = parent || null;\r\n\t\tthis.aabb = { max: [0, 0, 0], min: [0, 0, 0] };\r\n\r\n\t\tthis.root = this;\r\n\t\twhile (this.root.parent !== null)\r\n\t\t\tthis.root = this.root.parent;\r\n\t};\r\n\r\n\tOctreeNode.prototype.getAllItems = function () {\r\n        if (!this.children) return this.items;\r\n        else {\r\n            var allItems = [];\r\n            for (var i = 0; i < this.children.length; i++)\r\n                allItems = allItems.concat(this.children[i].getAllItems());\r\n            return allItems;\r\n        }\r\n\t};\r\n\r\n\tOctreeNode.prototype.addItems = function (items) {\r\n\t\tvar result = false;\r\n\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\tvar item = items[i];\r\n\t\t\tresult |= this.addItem(item);\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tOctreeNode.prototype.addItem = function (item) {\r\n\t\tif (this.contains(item)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < 8; i++)\r\n\t\t\t\t\tif (this.children[i].addItem(item))\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.items.push(item);\r\n\t\t\t\tthis.splitIfNeeded();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tOctreeNode.prototype.removeItem = function (item) {\r\n\t\tvar removed = false;\r\n\t\tvar index = this.items.indexOf(item);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.items.splice(index, 1);\r\n\t\t\tthis.mergeIfNeeded();\r\n\t\t\tremoved = true;\r\n\t\t} else {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\t\tremoved |= this.children[i].removeItem(item);\r\n\t\t\t\t\tif (removed) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (removed) this.mergeIfNeeded();\r\n\t\treturn removed;\r\n\t};\r\n\r\n\tOctreeNode.prototype.splitIfNeeded = function () {\r\n\t\tif (this.root.options.maxItems < this.items.length &&\r\n\t\t\tthis.root.options.maxDepth >= this.depth) {\r\n\t\t\tthis.children = [];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tthis.children[i] = new OctreeNode(this, this.depth + 1);\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t\t\t}\r\n\t\t\twhile (this.items.length > 0) {\r\n\t\t\t\tvar item = this.items.pop();\r\n\t\t\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\t\t\tvar child = this.children[i];\r\n\t\t\t\t\tif (child.addItem(item)) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tOctreeNode.prototype.mergeIfNeeded = function () {\r\n\t\t//console.debug('mergeIfNeeded');\r\n\t};\r\n\r\n\tOctreeNode.prototype.contains = function (item) {\r\n\t\treturn isContained(item, this.aabb);\r\n\t};\r\n\r\n\tOctreeNode.prototype.getCollidingNodes = function (ray) {\r\n\t\tvar nodes = [];\r\n\t\tvar aabb = this.aabb;\r\n\t\tvar collidingPoint = [0, 0, 0];\r\n\t\tif (Math.geo.rayAABBCollision(ray.start, ray.direction,\r\n\t\t\tthis.aabb.min, this.aabb.max, collidingPoint)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\t\tvar child = this.children[i];\r\n\t\t\t\t\tnodes = nodes.concat(child.getCollidingNodes(ray));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnodes.push(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nodes;\r\n\t};\r\n\r\n\tOctreeNode.prototype.getCollidingItems = function (ray) {\r\n\t\tvar items = [];\r\n\t\tthis.getCollidingNodes(ray).forEach(function (node) {\r\n\t\t\titems = items.concat(node.items);\r\n\t\t});\r\n\t\treturn items;\r\n\t};\r\n\r\n\tOctreeNode.prototype.updateDimensions = function (parentAabb, index) {\r\n\t\tvar half = [0, 0, 0];\r\n\t\tvec3.sub(half, parentAabb.max, parentAabb.min);\r\n\t\tvec3.scale(half, half, 0.5);\r\n\t\tvar ref = [!(index & 1), !(index & 2), !(index & 4)];\r\n\t\tvec3.mul(this.aabb.min, half, ref);\r\n\t\tvec3.add(this.aabb.min, this.aabb.min, parentAabb.min);\r\n\t\tvec3.add(this.aabb.max, this.aabb.min, half);\r\n\t\tif (this.children)\r\n\t\t\tfor (var i = 0; i < this.children.length; i++)\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t};\r\n\r\n\tvar Octree = function (options) {\r\n\t\tthis.options = Object.assign({}, defaultOptions, options);\r\n\t\tOctreeNode.call(this);\r\n\t};\r\n\r\n\tOctree.prototype = Object.create(OctreeNode.prototype);\r\n\tOctree.prototype.constructor = OctreeNode;\r\n\r\n\tvar _addItems = Octree.prototype.addItems;\r\n\tOctree.prototype.addItems = function (items) {\r\n\t\tthis.updateBounds(items);\r\n\t\t_addItems.call(this, items);\r\n\t};\r\n\r\n\tOctree.prototype.onVertexMove = function (item) {\r\n\t\tthis.updateDimensions();\r\n\t\tif (this.removeItem(item)) this.addItem(item);\r\n\t};\r\n\r\n\tOctree.prototype.updateDimensions = function (newItems) {\r\n\t\tvar allItems = this.getAllItems();\r\n\t\tif (newItems) allItems.push(newItems);\r\n\t\tthis.updateBounds(allItems);\r\n\t\tif (this.children) {\r\n\t\t\tfor (var i = 0; i < this.children.length; i++) {\r\n\t\t\t\tthis.children[i].updateDimensions(this.aabb, i);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tOctree.prototype.updateBounds = function (items) {\r\n\t\tvar max = [0, 0, 0].fill(-Number.MAX_VALUE);\r\n\t\tvar min = [0, 0, 0].fill(Number.MAX_VALUE);\r\n\t\tvar padding = this.options.padding;\r\n\t\titems.forEach(function (item) {\r\n\t\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\t\tmin[j] = Math.min(min[j], item[j] - padding);\r\n\t\t\t\tmax[j] = Math.max(max[j], item[j] + padding);\r\n\t\t\t}\r\n\t\t});\r\n\t\tvec3.copy(this.aabb.min, min);\r\n\t\tvec3.copy(this.aabb.max, max);\r\n\t};\r\n\r\n\tMath.Octree = Octree;\r\n\r\n\tfunction isContained (item, aabb) {\r\n\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\tif (item[j] < aabb.min[j]) return false;\r\n\t\t\tif (item[j] > aabb.max[j]) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n})();\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Plane = function (point, normal) {\r\n        this.normal = normal || [0, 1, 0];\r\n        this.point = point || vec3.create();\r\n        vec3.normalize(this.normal, this.normal);\r\n    };\r\n\r\n    window.Math.Plane = Plane;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Ray = function (start, direction) {\r\n        this.direction = direction || [0, 0, 1];\r\n        this.start = start || vec3.create();\r\n        vec3.normalize(this.direction, this.direction);\r\n    };\r\n\r\n    Ray.fromPoints = function (a, b) {\r\n        var direction = vec3.create();\r\n        vec3.sub(direction, b, a);\r\n        return new Ray(a, direction);\r\n    };\r\n\r\n    window.Math.Ray = Ray;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-header', function (instance) {\r\n        instance.events.on('pane.create', function (pane) {\r\n            onCreateCallback(pane, instance);\r\n        });\r\n    }, ['pane-types']);\r\n\r\n    function onCreateCallback (pane, instance) {\r\n        var header = createHeader();\r\n        pane.appendChild(header);\r\n    }\r\n\r\n    function createHeader () {\r\n        var div = document.createElement('div');\r\n        div.className = 'pane-header';\r\n        return div;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-types', function (instance) {\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var oldType = oldPane.attrData('pane-type');\r\n            if (oldType) instance.pane.setType(newPane, oldType);\r\n        });\r\n\r\n        instance.pane.types = {};\r\n\r\n        instance.pane.setType = function (pane, name) {\r\n            if (this.types[name]) {\r\n                var typeCallbacks = this.types[name];\r\n                typeCallbacks.onPaneType(pane, instance);\r\n                var paneHeader = pane.querySelector('.pane-header');\r\n                typeCallbacks.onCreateHeader(paneHeader, instance);\r\n                pane.dataset.paneType = name;\r\n            }\r\n        };\r\n    }, ['pane']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane', function (instance) {\r\n        instance.events.on('app.loaded', function () {\r\n            instance.pane.internal = new Pane({\r\n                container: instance.options.container.selector,\r\n                separator: {\r\n                    size: 3\r\n                },\r\n                callbacks: {\r\n                    onPaneCreate: onPaneCreate,\r\n                    onPaneSplit: onPaneSplit,\r\n                    onPaneResize: onPaneResize,\r\n                    //onPaneMerge: onPaneMerge,\r\n                    //onPaneDestroy: onPaneDestroy,\r\n                }\r\n            });\r\n\r\n            var root = instance.pane.internal.container.querySelector('.pane');\r\n            instance.pane.setType(root, 'surface');\r\n        });\r\n\r\n        instance.pane = {};\r\n\r\n        function onPaneCreate (pane) {\r\n            instance.events.trigger('pane.create', pane);\r\n        }\r\n\r\n        function onPaneSplit (origin, newPane) {\r\n            instance.events.trigger('pane.split', origin, newPane);\r\n        }\r\n\r\n        function onPaneResize (pane) {\r\n            instance.events.trigger('pane.resize', pane);\r\n        }\r\n\r\n        function onPaneMerge (merger, toRemove) {\r\n            console.debug('onPaneMerge', merger, toRemove);\r\n        }\r\n\r\n        function onPaneDestroy (pane) {\r\n            console.debug('onPaneDestroy', pane);\r\n        }\r\n    });\r\n})());\r\n","(function () {\r\n    'use strict';\r\n\r\n    var EPSILON = 0.000001;\r\n\r\n    Math.geo = Math.geo || {};\r\n\r\n    Math.geo.rayFaceCollision = function (start, direction, vertices, result) {\r\n        var triangles = Math.geo.triangulateFace(vertices);\r\n        for (var i = 0; i < triangles.length; i++) {\r\n            var triangle = triangles[i];\r\n            if (Math.geo.rayTriangleCollision(start, direction,\r\n                triangle[0], triangle[1], triangle[2], result))\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Math.geo.rayTriangleCollision = function (start, direction, v1, v2, v3, result) {\r\n        result = result || [0, 0, 0];\r\n    \tvar triangleNormal = getNormal(v1, v2, v3);\r\n        if (Math.geo.rayPlaneCollision(start, direction, v1, triangleNormal, result)) {\r\n            var bary = getBarycentricCoordinates(v1, v2, v3, result);\r\n        \treturn (bary[0] <= 1 && bary[0] >= 0) &&\r\n                (bary[1] <= 1 && bary[1] >= 0) &&\r\n                (bary[2] <= 1 && bary[2] >= 0);\r\n        }\r\n    \treturn false;\r\n    };\r\n\r\n    Math.geo.rayPlaneCollision = function (start, direction, planePoint, planeNormal, result) {\r\n\t\tvar numer = vec3.dot(planePoint, planeNormal) -\r\n            vec3.dot(planeNormal, start);\r\n\t\tvar denom = vec3.dot(planeNormal, direction);\r\n\t\tif (Math.abs(denom) < EPSILON) return false;\r\n\t\tvar t = numer / denom;\r\n\t\tif (t < 0.0) return false;\r\n\t\tif (result) {\r\n            vec3.scale(result, direction, t);\r\n            vec3.add(result, start, result);\r\n        }\r\n\t\treturn true;\r\n    };\r\n\r\n    //TODO: refactor to reduce number of operations\r\n    Math.geo.rayAABBCollision = function (start, direction, minB, maxB, result) {\r\n        result = result || vec3.create();\r\n\r\n\t\tvar inside = true;\r\n\t\tvar quadrant = new Float32Array(3);\r\n\t\tvar i = 0|0;\r\n\t\tvar whichPlane;\r\n\t\tvar maxT = new Float32Array(3);\r\n\t\tvar candidatePlane = new Float32Array(3);\r\n\r\n\t\t/* Find candidate planes; this loop can be avoided if\r\n\t\trays cast all from the eye(assume perpsective view) */\r\n\t\tfor (i=0; i < 3; ++i)\r\n\t\t\tif(start[i] < minB[i]) {\r\n\t\t\t\tquadrant[i] = 1;\r\n\t\t\t\tcandidatePlane[i] = minB[i];\r\n\t\t\t\tinside = false;\r\n\t\t\t}else if (start[i] > maxB[i]) {\r\n\t\t\t\tquadrant[i] = 0;\r\n\t\t\t\tcandidatePlane[i] = maxB[i];\r\n\t\t\t\tinside = false;\r\n\t\t\t}else\t{\r\n\t\t\t\tquadrant[i] = 2;\r\n\t\t\t}\r\n\r\n\t\t/* Ray origin inside bounding box */\r\n\t\tif(inside)\t{\r\n\t\t\tvec3.copy(result, start);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/* Calculate T distances to candidate planes */\r\n\t\tfor (i = 0; i < 3; ++i)\r\n\t\t\tif (quadrant[i] !== 2 && direction[i] !== 0)\r\n\t\t\t\tmaxT[i] = (candidatePlane[i] - start[i]) / direction[i];\r\n\t\t\telse\r\n\t\t\t\tmaxT[i] = -1;\r\n\r\n\t\t/* Get largest of the maxT's for final choice of intersection */\r\n\t\twhichPlane = 0;\r\n\t\tfor (i = 1; i < 3; i++)\r\n\t\t\tif (maxT[whichPlane] < maxT[i])\r\n\t\t\t\twhichPlane = i;\r\n\r\n\t\t/* Check final candidate actually inside box */\r\n\t\tif (maxT[whichPlane] < 0) return false;\r\n\t\tif (maxT[whichPlane] > Number.MAX_VALUE) return false; //NOT TESTED\r\n\r\n\t\tfor (i = 0; i < 3; ++i)\r\n\t\t\tif (whichPlane != i) {\r\n\t\t\t\tresult[i] = start[i] + maxT[whichPlane] * direction[i];\r\n\t\t\t\tif (result[i] < minB[i] || result[i] > maxB[i])\r\n\t\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tresult[i] = candidatePlane[i];\r\n\t\t\t}\r\n\t\treturn true;\r\n    };\r\n\r\n    //TODO: refactor to reduce number of operations\r\n    Math.geo.closestPointsBetweenSegments = function (a0,a1, b0,b1, p_a, p_b) {\r\n\t\tvar u = vec3.subtract( vec3.create(), a1, a0 );\r\n\t\tvar v = vec3.subtract( vec3.create(), b1, b0 );\r\n\t\tvar w = vec3.subtract( vec3.create(), a0, b0 );\r\n\r\n\t\tvar a = vec3.dot(u,u);         // always >= 0\r\n\t\tvar b = vec3.dot(u,v);\r\n\t\tvar c = vec3.dot(v,v);         // always >= 0\r\n\t\tvar d = vec3.dot(u,w);\r\n\t\tvar e = vec3.dot(v,w);\r\n\t\tvar D = a*c - b*b;        // always >= 0\r\n\t\tvar sc, tc;\r\n\r\n\t\t// compute the line parameters of the two closest points\r\n\t\tif (D < EPSILON) {          // the lines are almost parallel\r\n\t\t\tsc = 0.0;\r\n\t\t\ttc = (b>c ? d/b : e/c);    // use the largest denominator\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsc = (b*e - c*d) / D;\r\n\t\t\ttc = (a*e - b*d) / D;\r\n\t\t}\r\n\r\n\t\t// get the difference of the two closest points\r\n\t\tif(p_a)\tvec3.add(p_a, a0, vec3.scale(vec3.create(),u,sc));\r\n\t\tif(p_b)\tvec3.add(p_b, b0, vec3.scale(vec3.create(),v,tc));\r\n\r\n\t\tvar dP = vec3.add( vec3.create(), w, vec3.subtract( vec3.create(), vec3.scale(vec3.create(),u,sc) , vec3.scale(vec3.create(),v,tc)) );  // =  L1(sc) - L2(tc)\r\n\t\treturn vec3.length(dP);   // return the closest distance\r\n\t};\r\n\r\n    Math.geo.rayPointDistance = function (start, direction, point) {\r\n        var aux = [0, 0, 0];\r\n        vec3.sub(aux, point, start);\r\n        vec3.cross(aux, direction, aux);\r\n        return vec3.len(aux);\r\n    };\r\n\r\n    Math.geo.pointPointDistance = function (p1, p2) {\r\n        var aux = [0, 0, 0];\r\n        vec3.sub(aux, p2, p1);\r\n        return vec3.len(aux);\r\n    };\r\n\r\n    Math.geo.triangulateFace = function (vertices) {\r\n        var triangulated = [];\r\n        for (var i = 0; i < vertices.length - 2; i++) {\r\n            triangulated.push([vertices[0], vertices[i + 1], vertices[i + 2]]);\r\n        }\r\n        return triangulated;\r\n    };\r\n\r\n    Math.geo.computePointsCenter = function (points) {\r\n        if (!points || points.length === 0) return null;\r\n        var center = [0, 0, 0];\r\n        points.forEach(function(point) {\r\n            vec3.add(center, center, point);\r\n        });\r\n        vec3.scale(center, center, 1 / points.length);\r\n        return center;\r\n    };\r\n\r\n    Math.geo.findClosestPointIndex = function (position, points) {\r\n        if (!points || !points.length) return null;\r\n        var distance = Math.geo.pointPointDistance(position, points[0]);\r\n        var closestIndex = 0;\r\n        for (var i = 1; i < points.length; i++) {\r\n            var newDistance = Math.geo.pointPointDistance(position, points[i]);\r\n            if (newDistance < distance) {\r\n                distance = newDistance;\r\n                closestIndex = i;\r\n            }\r\n        }\r\n        return closestIndex;\r\n    };\r\n\r\n    Math.geo.findClosestPoint = function (position, points) {\r\n        if (!points || !points.length) return null;\r\n        var index = Math.geo.findClosestPointIndex(position, points);\r\n        return points[index];\r\n    };\r\n\r\n    Math.geo.findClosestFace = function (position, faces) {\r\n        if (!faces || !faces.length) return null;\r\n        var centers = faces.map(function (face) {\r\n            return face.computeCenter();\r\n        });\r\n        var index = Math.geo.findClosestPointIndex(position, centers);\r\n        return faces[index];\r\n    };\r\n\r\n    function getBarycentricCoordinates (p1, p2, p3, point) {\r\n        var v0 = getVectorFromPoints(p1, p2);\r\n        var v1 = getVectorFromPoints(p1, p3);\r\n        var v2 = getVectorFromPoints(p1, point);\r\n\r\n    \tvar d00 = vec3.dot(v0, v0);\r\n    \tvar d01 = vec3.dot(v0, v1);\r\n    \tvar d11 = vec3.dot(v1, v1);\r\n    \tvar d20 = vec3.dot(v2, v0);\r\n    \tvar d21 = vec3.dot(v2, v1);\r\n    \tvar denom = d00 * d11 - d01 * d01;\r\n\r\n        var result = [(d11 * d20 - d01 * d21) / denom,\r\n            (d00 * d21 - d01 * d20) / denom, 0];\r\n        result[2] = 1 - result[0] - result[1];\r\n    \treturn result;\r\n    }\r\n\r\n    function getNormal (v1, v2, v3) {\r\n        var tmp1 = vec3.create();\r\n        var tmp2 = vec3.create();\r\n        vec3.sub(tmp1, v2, v1);\r\n        vec3.sub(tmp2, v3, v1);\r\n        vec3.cross(tmp1, tmp1, tmp2);\r\n        return tmp1;\r\n    }\r\n\r\n    function getVectorFromPoints (a, b) {\r\n        var output = vec3.create();\r\n        vec3.sub(output, b, a);\r\n        return output;\r\n    }\r\n})();\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('halfedge-cache', function (instance) {\r\n        var superConstructor = Math.HalfEdgeMesh;\r\n        var cachedHalfEdgeMesh = function () {\r\n            superConstructor.call(this);\r\n            var heMesh = this;\r\n            this.cache = {\r\n                meshes: {},\r\n                get: function (key) {\r\n                    var e = this.meshes[key];\r\n                    var builder = Math.HalfEdgeMesh.prototype.builders[key];\r\n                    if (!e) {\r\n                        e = builder.onCreate(heMesh);\r\n                        this.meshes[key] = e;\r\n                    }\r\n                    builder.onClean(e);\r\n                    return e;\r\n                },\r\n                onVertexChange: function (vertex) {\r\n                    for (var key in this.meshes) {\r\n                        var e = this.meshes[key];\r\n                        var builder = Math.HalfEdgeMesh.prototype.builders[key];\r\n                        if (builder.onVertexChange)\r\n                            builder.onVertexChange(vertex, e);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        cachedHalfEdgeMesh.prototype = Object.create(Math.HalfEdgeMesh.prototype);\r\n        cachedHalfEdgeMesh.prototype.constructor = cachedHalfEdgeMesh;\r\n\r\n        Math.HalfEdgeMesh = cachedHalfEdgeMesh;\r\n\r\n        Math.HalfEdgeMesh.prototype.builders = {};\r\n        Math.HalfEdgeMesh.prototype.addBuilder = function (key, builder) {\r\n            this.builders[key] = builder;\r\n        };\r\n\r\n    }, ['halfedge']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('halfedge-cube', function (instance) {\r\n        function cube () {\r\n            var mesh = new Math.HalfEdgeMesh();\r\n\r\n            var vhandle = [];\r\n            vhandle[0] = [-1, -1,  1];\r\n            vhandle[1] = [ 1, -1,  1];\r\n            vhandle[2] = [ 1,  1,  1];\r\n            vhandle[3] = [-1,  1,  1];\r\n            vhandle[4] = [-1, -1, -1];\r\n            vhandle[5] = [ 1, -1, -1];\r\n            vhandle[6] = [ 1,  1, -1];\r\n            vhandle[7] = [-1,  1, -1];\r\n            mesh.addVertices(vhandle);\r\n\r\n            var face_vhandles = [];\r\n            face_vhandles.push(vhandle[0]);\r\n            face_vhandles.push(vhandle[1]);\r\n            face_vhandles.push(vhandle[2]);\r\n            face_vhandles.push(vhandle[3]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[7]);\r\n            face_vhandles.push(vhandle[6]);\r\n            face_vhandles.push(vhandle[5]);\r\n            face_vhandles.push(vhandle[4]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[1]);\r\n            face_vhandles.push(vhandle[0]);\r\n            face_vhandles.push(vhandle[4]);\r\n            face_vhandles.push(vhandle[5]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[2]);\r\n            face_vhandles.push(vhandle[1]);\r\n            face_vhandles.push(vhandle[5]);\r\n            face_vhandles.push(vhandle[6]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[3]);\r\n            face_vhandles.push(vhandle[2]);\r\n            face_vhandles.push(vhandle[6]);\r\n            face_vhandles.push(vhandle[7]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            face_vhandles = [];\r\n            face_vhandles.push(vhandle[0]);\r\n            face_vhandles.push(vhandle[3]);\r\n            face_vhandles.push(vhandle[7]);\r\n            face_vhandles.push(vhandle[4]);\r\n            mesh.addFace(face_vhandles);\r\n\r\n            return mesh;\r\n        }\r\n\r\n        Math.HalfEdgeCube = cube;\r\n    }, ['halfedge']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('halfedge', function (instance) {\r\n        Math.HalfEdgeMesh = HalfEdgeMesh;\r\n    });\r\n\r\n    var HalfEdgeMesh = function () {\r\n        this.bounds = new Math.Octree();\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.addVertices = function (vertices) {\r\n        if (arguments.length > 1) this.addVertices.apply(this, arguments);\r\n        if (!Array.isArray(vertices)) return;\r\n        this.bounds.addItems(vertices);\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertex = vertices[i];\r\n            var index = this.vertices.indexOf(vertex);\r\n            if (index < 0) {\r\n                var _halfEdge = {};\r\n                _halfEdge.computeNormal = VertexComputeNormal;\r\n                _halfEdge.ownIndex = this.vertices.length;\r\n                _halfEdge.getFaces = VertexGetFaces;\r\n                _halfEdge.outEdges = [];\r\n                vertex._halfEdge = _halfEdge;\r\n                this.vertices.push(vertex);\r\n            } else {\r\n                console.error('addVertices: Adding vertex twice!', vertex);\r\n            }\r\n        }\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.addFace = function (vertices) {\r\n        if (arguments.length > 1) this.addFace.apply(this, arguments);\r\n        if (!Array.isArray(vertices)) return;\r\n        if (vertices.length >= 3) {\r\n            var he1 = buildEdge(vertices[0], vertices[1]);\r\n            var he2 = buildEdge(vertices[1], vertices[2], he1.face);\r\n            he1.next = he2;\r\n            this.halfEdges.push(he1, he2);\r\n            if (vertices.length >= 3) {\r\n                var last, prev = he2;\r\n                for (var i = 2; i < vertices.length - 1; i++) {\r\n                    last = buildEdge(vertices[i], vertices[i + 1], he1.face);\r\n                    if (!he2.next) he2.next = last;\r\n                    last.next = prev;\r\n                    this.halfEdges.push(last);\r\n                    prev = last;\r\n                }\r\n                last = buildEdge(vertices[i], vertices[0], he1.face);\r\n                last.next = he1;\r\n                this.halfEdges.push(last);\r\n                prev.next = last;\r\n            }\r\n            this.faces.push(he1.face);\r\n        } else {\r\n            console.error('addFace: 3 or more vertices needed to form a face!');\r\n        }\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.onVertexChange = function (vertex) {\r\n        if (this.cache && this.cache.onVertexChange)\r\n            this.cache.onVertexChange(vertex);\r\n        this.bounds.onVertexMove(vertex);\r\n    };\r\n\r\n    HalfEdgeMesh.prototype.clear = function () {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    };\r\n\r\n    function buildEdge (start, end, face) {\r\n        var edge = {};\r\n        edge.vertex = end;\r\n        edge.face = face ? face : new HalfEdgeFace(edge);\r\n        edge.opposite = findOppositeEdge(start, end) || edge;\r\n        edge.next = null;\r\n        start._halfEdge.outEdges.push(edge);\r\n        return edge;\r\n    }\r\n\r\n    function findOppositeEdge(start, end) {\r\n        var opposites = end._halfEdge.outEdges.filter(function (he) {\r\n            return he.vertex === start;\r\n        });\r\n        return (opposites && opposites[0]) ? opposites[0] : null;\r\n    }\r\n\r\n    function VertexGetFaces () {\r\n        return this.outEdges.map(function (edge) {\r\n            return edge.face;\r\n        });\r\n    }\r\n\r\n    function VertexComputeNormal () {\r\n        var normal = [0, 0, 0];\r\n        this.getFaces().forEach(function (face) {\r\n            vec3.add(normal, normal, face.computeRawNormal());\r\n        });\r\n        vec3.normalize(normal, normal);\r\n        return normal;\r\n    }\r\n\r\n    var HalfEdgeFace = function (halfEdge) {\r\n        this.halfEdge = halfEdge;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getEdges = function () {\r\n        var output = [];\r\n        var he = this.halfEdge;\r\n        while (he.next !== this.halfEdge) {\r\n            output.push(he);\r\n            he = he.next;\r\n            if (he === null) {\r\n                var a = 0;\r\n                console.debug(this, a);\r\n            }\r\n        }\r\n        output.push(he);\r\n        return output;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getVertices = function () {\r\n        return this.getEdges().map(function (edge) {\r\n            return edge.vertex;\r\n        });\r\n    };\r\n\r\n    HalfEdgeFace.prototype.getVerticesTriangulated = function () {\r\n        var triangulated = [];\r\n        var vertices = this.getVertices();\r\n        for (var i = 0; i < vertices.length - 2; i++) {\r\n            triangulated.push([vertices[0], vertices[i + 1], vertices[i + 2]]);\r\n        }\r\n        return triangulated;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeRawNormal = function () {\r\n        var normal = [0, 0, 0];\r\n        this.getVerticesTriangulated().forEach(function (triplet) {\r\n            var triangleNormal = computeNormal(triplet[0], triplet[1], triplet[2]);\r\n            vec3.add(normal, normal, triangleNormal);\r\n        });\r\n        return normal;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeNormal = function () {\r\n        var normal = this.computeRawNormal();\r\n        vec3.normalize(normal, normal);\r\n        return normal;\r\n    };\r\n\r\n    HalfEdgeFace.prototype.computeCenter = function () {\r\n        return Math.geo.computePointsCenter(this.getVertices());\r\n    };\r\n\r\n    function computeNormal (v1, v2, v3) {\r\n        var tmp1 = vec3.create();\r\n        var tmp2 = vec3.create();\r\n        vec3.sub(tmp1, v2, v1);\r\n        vec3.sub(tmp2, v3, v1);\r\n        vec3.cross(tmp1, tmp1, tmp2);\r\n        return tmp1;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface', function (instance) {\r\n        instance.pane.types.surface = {\r\n            onPaneType: onSurfacePaneType,\r\n            onCreateHeader: onCreateSurfaceHeader\r\n        };\r\n\r\n        instance.events.on('pane.resize', function (pane) {\r\n            if (pane.attrData('pane-type') === 'surface')\r\n                updateCanvasSize(instance, pane);\r\n        });\r\n\r\n        window.addEventListener('resize', function (event) {\r\n            var surfaces = instance.pane.internal.container\r\n                .querySelectorAll('.pane canvas');\r\n            for (var i = 0; i < surfaces.length; i++) {\r\n                updateCanvasSize(instance, surfaces[i].parentNode);\r\n            }\r\n        });\r\n\r\n        instance.surface = {};\r\n    }, ['pane-types']);\r\n\r\n    var surfaceIndex = 0;\r\n    function onSurfacePaneType (pane, instance) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.id = 'surface' + (surfaceIndex++);\r\n        canvas.addEventListener('mouseover', function (event) {\r\n            event.target.focus();\r\n        });\r\n        canvas.className = 'surface';\r\n        pane.appendChild(canvas);\r\n\r\n        instance.surface.map = instance.surface.map || {};\r\n        instance.surface.map[canvas.id] = {\r\n            camera: new Math.Camera()\r\n        };\r\n\r\n        updateCanvasSize(instance, pane);\r\n\r\n        instance.events.trigger('surface.create', canvas);\r\n    }\r\n\r\n    function onCreateSurfaceHeader (header, instance) {\r\n        var label = document.createElement('label');\r\n        label.innerHTML = 'Surface Pane';\r\n        header.appendChild(label);\r\n    }\r\n\r\n    function updateCanvasSize (instance, pane) {\r\n        var canvas = pane.querySelector('canvas');\r\n        var context = canvas.getContext('2d');\r\n        var data = instance.surface.map[canvas.id];\r\n\r\n        var header = pane.querySelector('.pane-header');\r\n        var headerHeight = header ? header.height() : 0;\r\n\r\n        var width = pane.width(), height = pane.height() - headerHeight;\r\n        data.imgData = context.createImageData(width, height);\r\n        data.buffer = new Uint8Array(width * height * 4);\r\n\r\n        canvas.height = height;\r\n        canvas.width = width;\r\n\r\n        mat4.perspective(data.camera.projection, 45 * DEG2RAD, width / height, 0.1, 1000);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var originalRotation = null;\r\n    var mouseDownCoords = null;\r\n\r\n    Modules.prototype.add('common-interaction', function (instance) {\r\n        instance.surface.interactions.common = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n                delta /= 2;\r\n\r\n                var data = instance.surface.map[canvas.id];\r\n                data.camera.distance -= delta;\r\n                data.camera.distance = Math.max(data.camera.distance, 0);\r\n\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                if (event.target.dataset.moving) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n                    if (data) {\r\n                        var delta = getCoordsDelta(mouseDownCoords, realCoords);\r\n                        combine(data.camera, originalRotation, delta);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 3) {\r\n                    event.target.dataset.moving = 'true';\r\n                    upNormalMouseDown = vec3.equals(data.camera.getUpDirection(), [0, 1, 0]);\r\n                    originalRotation = data.camera.rotation.slice();\r\n                    mouseDownCoords = realCoords;\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 3) {\r\n                    delete event.target.dataset.moving;\r\n                    var data = instance.surface.map[event.target.id];\r\n                    mouseDownCoords = null;\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n    }, ['surface-interaction']);\r\n\r\n    var upNormalMouseDown = true;\r\n    function combine (surface, originalRotation, delta) {\r\n        if (!originalRotation) return;\r\n        if (!upNormalMouseDown) delta[0] = -delta[0];\r\n\r\n        var rotation = surface.rotation;\r\n        rotation[0] = originalRotation[0] + delta[0] * 0.005;\r\n        rotation[1] = originalRotation[1] + delta[1] * 0.005;\r\n        clampRotations(rotation);\r\n    }\r\n\r\n    function getCoordsDelta (initial, current) {\r\n        if (!initial) return [0, 0];\r\n        return [\r\n            initial[0] - current[0],\r\n            current[1] - initial[1]\r\n        ];\r\n    }\r\n\r\n    function clampRotations (rotations) {\r\n        var pi2 = Math.PI * 2;\r\n        if (rotations[0] < 0) rotations[0] = pi2 + rotations[0];\r\n        if (rotations[0] >= pi2) rotations[0] = rotations[0] - pi2;\r\n        if (rotations[1] < 0) rotations[1] = pi2 + rotations[1];\r\n        if (rotations[1] >= pi2) rotations[1] = rotations[1] - pi2;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('object-interaction', function (instance) {\r\n        instance.surface.interactions.object = {\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 1) {\r\n                    var ray = data.camera.getRay(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    var isHit = false, hitPoint = vec3.create();\r\n                    instance.scene.getObjects().forEach(function (node) {\r\n                        isHit = geo.testRayBBox(ray.start, ray.direction, node.data.mesh.bounding, node.data.model, hitPoint);\r\n                        if (isHit) {\r\n                            node.data.selected = true;\r\n                        } else delete node.data.selected;\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-interaction', function (instance) {\r\n        instance.surface.interactions = {};\r\n\r\n        instance.surface.setInteraction = function (surface, name) {\r\n            surface.dataset.interaction = name;\r\n        };\r\n\r\n        instance.surface.getInteractionCallbacks = function (surface) {\r\n            var interactionName = surface.dataset.interaction;\r\n            return instance.surface.interactions[interactionName];\r\n        };\r\n\r\n        instance.surface.onRender = function (canvas, surface) {\r\n            var keepRunning = true;\r\n            var callbacks = instance.surface.getInteractionCallbacks(canvas);\r\n            if (callbacks.onRender) keepRunning = callbacks.onRender(surface);\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                common.onRender(surface);\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            surface.tabIndex = 1000;\r\n\r\n            surface.oncontextmenu = onContextMenu;\r\n\r\n            surface.onkeydown = onSurfaceEvent;\r\n            surface.onkeyup = onSurfaceEvent;\r\n\r\n            surface.onmousewheel = onSurfaceEvent;\r\n            surface.onmousemove = onSurfaceEvent;\r\n            surface.onmousedown = onSurfaceEvent;\r\n            surface.onmouseup = onSurfaceEvent;\r\n            surface.onclick = onSurfaceEvent;\r\n        });\r\n\r\n        function onSurfaceEvent (event) {\r\n            var callbacks = instance.surface.getInteractionCallbacks(event.target);\r\n            var keepRunning = runCallback(callbacks, event);\r\n            if (keepRunning === undefined) keepRunning = true;\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                runCallback(common, event);\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var initialValue = oldPane.dataset.interaction;\r\n            newPane.dataset.interaction = initialValue;\r\n        });\r\n    }, ['surface']);\r\n\r\n    function runCallback (callbacks, event) {\r\n        var realCoords = getLocalCoordinates(event);\r\n        switch (event.type) {\r\n            case 'keydown': if (callbacks.onKeyDown) return callbacks.onKeyDown(event); break;\r\n            case 'keyup': if (callbacks.onKeyUp) return callbacks.onKeyUp(event); break;\r\n\r\n            case 'mousewheel': if (callbacks.onMouseWheel) return callbacks.onMouseWheel(event, realCoords); break;\r\n            case 'mousemove': if (callbacks.onMouseMove) return callbacks.onMouseMove(event, realCoords); break;\r\n            case 'mousedown': if (callbacks.onMouseDown) return callbacks.onMouseDown(event, realCoords); break;\r\n            case 'mouseup': if (callbacks.onMouseUp) return callbacks.onMouseUp(event, realCoords); break;\r\n            case 'click': if (callbacks.onClick) return callbacks.onClick(event, realCoords); break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getLocalCoordinates (event) {\r\n        return [event.layerX, event.layerY];\r\n    }\r\n\r\n    function onContextMenu (event) {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('render-solid-cache', function (instance) {\r\n        Math.HalfEdgeMesh.prototype.addBuilder('render-solid', solidBuilder);\r\n    }, ['halfedge-cache']);\r\n\r\n    var solidBuilder = {\r\n        onCreate: function (halfEdgeMesh) {\r\n            var buffers = {\r\n                vertices: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                normals: new Float32Array(halfEdgeMesh.vertices.length * 3)\r\n            };\r\n\r\n            var indices = [];\r\n            halfEdgeMesh.faces.forEach(function (face) {\r\n                var faceNormal = face.computeNormal();\r\n                face.getVerticesTriangulated().forEach(function (t) {\r\n                    indices.push(t[0]._halfEdge.ownIndex,\r\n                        t[1]._halfEdge.ownIndex, t[2]._halfEdge.ownIndex);\r\n                });\r\n            });\r\n            buffers.triangles = new Uint16Array(indices);\r\n            var mesh = GL.Mesh.load(buffers);\r\n            for (var i = 0; i < halfEdgeMesh.vertices.length; i++)\r\n                this.onVertexChange(halfEdgeMesh.vertices[i], mesh);\r\n\r\n            return mesh;\r\n        },\r\n        onVertexChange: function (vertex, mesh) {\r\n            var buffer = mesh.vertexBuffers;\r\n            var index = vertex._halfEdge.ownIndex;\r\n            for (var j = 0; j < 3; j++)\r\n                buffer.vertices.data[index * 3 + j] = vertex[j];\r\n            buffer.vertices.dirty = true;\r\n            var normal = vertex._halfEdge.computeNormal();\r\n            for (j = 0; j < 3; j++)\r\n                buffer.normals.data[index * 3 + j] = normal[j];\r\n            buffer.normals.dirty = true;\r\n        },\r\n        onClean: function (mesh) {\r\n            if (mesh.vertexBuffers.vertices.dirty) {\r\n                mesh.vertexBuffers.vertices.upload();\r\n                delete mesh.vertexBuffers.vertices.dirty;\r\n            }\r\n            if (mesh.vertexBuffers.normals.dirty) {\r\n                mesh.vertexBuffers.normals.upload();\r\n                delete mesh.vertexBuffers.normals.dirty;\r\n            }\r\n        }\r\n    };\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var solidShader = null;\r\n    var wireframeShader = null;\r\n\r\n    Modules.prototype.add('render-solid', function (instance) {\r\n        instance.asset.shader.get('solid', function (s) {\r\n            solidShader = s;\r\n        });\r\n        instance.asset.shader.get('wireframe', function (s) {\r\n            wireframeShader = s;\r\n        });\r\n\r\n        var bounds = GL.Mesh.load({\r\n            vertices: new Float32Array([\r\n                0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, -0.5, 0.5, -0.5, -0.5, 0.5,\r\n                0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5, -0.5, -0.5, -0.5, -0.5, -0.5,\r\n            ]),\r\n            colors: new Float32Array([\r\n                0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1,\r\n                0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1, 0.6, 0.6, 0.6, 1\r\n            ]),\r\n            wireframe: new Uint16Array([\r\n                0, 1, 1, 3, 3, 2, 2, 0,\r\n                4, 5, 5, 7, 7, 6, 6, 4,\r\n                0, 4, 1, 5, 2, 6, 3, 7\r\n            ])\r\n        });\r\n        var grid = GL.Mesh.grid({lines:17,size:16});\r\n        var colorsArray = [];\r\n        grid.vertexBuffers.vertices.forEach(function (vertex, bufferIndex) {\r\n            colorsArray.push(0.4, 0.4, 0.4, 1);\r\n        });\r\n        grid.createVertexBuffer('colors', 'a_color', 4, new Float32Array(colorsArray));\r\n        var axisX = GL.Mesh.load({\r\n            vertices: new Float32Array([-8, 0.001, 0, 8, 0.001, 0]),\r\n            colors: new Float32Array([1, 0, 0, 1, 1, 0, 0, 1])\r\n        });\r\n        var axisZ = GL.Mesh.load({\r\n            vertices: new Float32Array([0, 0.001, -8, 0, 0.001, 8]),\r\n            colors: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1])\r\n        });\r\n\r\n        instance.surface.renders.solid = function (surface) {\r\n            var lightDirection = vec3.create();\r\n            surface.camera.getPosition(lightDirection);\r\n            vec3.add(lightDirection, lightDirection, [1, 2, 0]);\r\n            vec3.normalize(lightDirection, lightDirection);\r\n            uniforms.u_lightvector = lightDirection;\r\n\r\n            renderObject(surface, grid, wireframeShader, instance.graphics.gl.LINES);\r\n            renderObject(surface, axisX, wireframeShader, instance.graphics.gl.LINES);\r\n            renderObject(surface, axisZ, wireframeShader, instance.graphics.gl.LINES);\r\n            instance.scene.getObjects().forEach(function (node) {\r\n                var mesh = node.data.mesh.cache.get('render-solid');\r\n                renderBounds(surface, wireframeShader, bounds, node.data.mesh.bounds, instance.graphics.gl.LINES);\r\n                renderObject(surface, mesh, solidShader, node.data.primitive, node.data.model);\r\n            });\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setRender(surface, 'solid');\r\n        });\r\n    }, ['surface-render', 'shader', 'render-solid-cache']);\r\n\r\n    var uniforms = {\r\n        u_color: [0.5, 0.5, 0.5, 1],\r\n        u_lightvector: null,\r\n        u_model: null,\r\n        u_mvp: mat4.create()\r\n    };\r\n\r\n    var temp = mat4.create();\r\n    function renderObject (surface, mesh, shader, primitive, model, indexBufferName) {\r\n        model = model || mat4.create();\r\n\r\n        surface.camera.getViewMatrix(temp);\r\n        mat4.multiply(temp, surface.camera.projection, temp);\r\n        mat4.multiply(uniforms.u_mvp, temp, model);\r\n\r\n        uniforms.u_model = model;\r\n\r\n        if (shader) {\r\n            shader.uniforms(uniforms);\r\n            if (mesh instanceof Math.HalfEdgeMesh) {\r\n                if (mesh) shader.draw(mesh, primitive, indexBufferName);\r\n            } else {\r\n                shader.draw(mesh, primitive, indexBufferName);\r\n            }\r\n        }\r\n    }\r\n\r\n    var boundsModel = mat4.create();\r\n    function renderBounds (surface, shader, bounds, octree, primitive) {\r\n        updateBoundsModel(boundsModel, octree);\r\n        renderObject(surface, bounds, shader, primitive, boundsModel, 'wireframe');\r\n        if (octree.children)\r\n            for (var i = 0; i < octree.children.length; i++)\r\n                renderBounds(surface, shader, bounds, octree.children[i], primitive);\r\n    }\r\n\r\n    function updateBoundsModel (model, octree) {\r\n        mat4.identity(model);\r\n        var scale = [0, 0, 0], position = [0, 0, 0];\r\n        vec3.lerp(position, octree.aabb.min, octree.aabb.max, 0.5);\r\n        mat4.translate(model, model, position);\r\n        vec3.sub(scale, octree.aabb.max, octree.aabb.min);\r\n        mat4.scale(model, model, scale);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-render', function (instance) {\r\n        instance.surface.renders = {};\r\n\r\n        instance.surface.setRender = function (surface, name) {\r\n            surface.dataset.render = name;\r\n        };\r\n\r\n        instance.surface.getRender = function (surface) {\r\n            var renderName = surface.dataset.render;\r\n            return instance.surface.renders[renderName];\r\n        };\r\n\r\n        var panes = document.querySelectorAll('.pane');\r\n        for (var i = 0; i < panes.length; i++) {\r\n            if (panes[i].dataset.paneType == 'surface') {\r\n                var canvas = panes[i].querySelector('canvas');\r\n                canvas.dataset.render = 'solid';\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            newPane.attrData('surface-render', oldPane.attrData('surface-render'));\r\n        });\r\n    }, ['surface']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-action', function (instance) {\r\n        var initialCoords = vec2.create();\r\n\r\n        instance.surface.interactions.edit.actions.move = {\r\n            init: function (context, event) {\r\n                vec2.copy(initialCoords, context.lastCoords);\r\n                for (var name in context.selection.objects) {\r\n                    var selectedObj = context.selection.objects[name];\r\n                    for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                        var vertex = selectedObj.vertices[i];\r\n                        vertex.originalPosition = vertex.slice();\r\n                    }\r\n                }\r\n            },\r\n            onMouseMove: function (context, event) {\r\n                if (!context.selection.isEmpty()) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n\r\n                    var currentRay = data.camera.getRay(null, context.lastCoords,\r\n                        [canvas.width, canvas.height]);\r\n                    var initialRay = data.camera.getRay(null, initialCoords,\r\n                        [canvas.width, canvas.height]);\r\n                    var cameraDirection = data.camera.getDirection();\r\n\r\n                    var hitPointInitial = [0, 0, 0], hitPointCurrent = [0, 0, 0];\r\n\r\n                    var selectionCenter = context.selection.getCenter();\r\n                    Math.geo.rayPlaneCollision(currentRay.start, currentRay.direction,\r\n                        selectionCenter, cameraDirection, hitPointCurrent);\r\n                    Math.geo.rayPlaneCollision(initialRay.start, initialRay.direction,\r\n                        selectionCenter, cameraDirection, hitPointInitial);\r\n                    var delta = vec3.sub(vec3.create(), hitPointCurrent, hitPointInitial);\r\n\r\n                    if (context.isControlDown)\r\n                        for (var j = 0; j < 3; j++)\r\n                            delta[j] = Math.round(delta[j]);\r\n\r\n                    for (var name in context.selection.objects) {\r\n                        var hitPoint = [0, 0, 0];\r\n                        var selectedObj = context.selection.objects[name];\r\n                        var sceneObj = instance.scene.getObjectByName(name);\r\n\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            if (vertex.originalPosition) {\r\n                                vec3.add(vertex, vertex.originalPosition, delta);\r\n                                sceneObj.mesh.onVertexChange(vertex);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            onMouseDown: function (context, event) {\r\n                if (event.which === 1 || event.which === 3) {\r\n                    var restore = event.which === 3;\r\n                    for (var name in context.selection.objects) {\r\n                        var selectedObj = context.selection.objects[name];\r\n                        for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                            var vertex = selectedObj.vertices[i];\r\n                            if (vertex.originalPosition) {\r\n                                if (restore) {\r\n                                    vec3.copy(vertex, vertex.originalPosition);\r\n                                    var sceneObj = instance.scene.getObjectByName(name);\r\n                                    sceneObj.mesh.onVertexChange(vertex);\r\n                                }\r\n                                delete vertex.originalPosition;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                context.action = null;\r\n            },\r\n            onMouseUp: function (context, event) {\r\n            }\r\n        };\r\n    }, ['edit-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-render-cache', function (instance) {\r\n        Math.HalfEdgeMesh.prototype.addBuilder('edit-interaction-render-wireframe', wireframeBuilder);\r\n        Math.HalfEdgeMesh.prototype.addBuilder('edit-interaction-render-vertices', verticesBuilder);\r\n    }, ['edit-interaction', 'shader']);\r\n\r\n    var wireframeBuilder = {\r\n        onCreate: function (halfEdgeMesh) {\r\n            var buffers = {\r\n                vertices: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                colors: new Float32Array(halfEdgeMesh.vertices.length * 4)\r\n            };\r\n\r\n            var indices = [];\r\n            halfEdgeMesh.faces.forEach(function (face) {\r\n                face.getVertices().forEach(function (vertex, i, array) {\r\n                    var index = i >= array.length - 1 ? 0 : i + 1;\r\n                    indices.push(vertex._halfEdge.ownIndex);\r\n                    indices.push(array[index]._halfEdge.ownIndex);\r\n                });\r\n            });\r\n            buffers.lines = new Uint16Array(indices);\r\n            var mesh = GL.Mesh.load(buffers);\r\n            for (var i = 0; i < halfEdgeMesh.vertices.length; i++)\r\n                this.onVertexChange(halfEdgeMesh.vertices[i], mesh);\r\n\r\n            return mesh;\r\n        },\r\n        onVertexChange: function (vertex, mesh) {\r\n            var buffer = mesh.vertexBuffers;\r\n            var index = vertex._halfEdge.ownIndex;\r\n            for (var j = 0; j < 3; j++)\r\n                buffer.vertices.data[index * 3 + j] = vertex[j];\r\n            buffer.vertices.dirty = true;\r\n            var color = vertex._selected ? [1, 0.4, 0.1, 1] : [0, 0, 0, 1];\r\n            for (j = 0; j < 4; j++)\r\n                buffer.colors.data[index * 4 + j] = color[j];\r\n            buffer.colors.dirty = true;\r\n        },\r\n        onClean: function (mesh) {\r\n            if (mesh.vertexBuffers.vertices.dirty) {\r\n                mesh.vertexBuffers.vertices.upload();\r\n                delete mesh.vertexBuffers.vertices.dirty;\r\n            }\r\n            if (mesh.vertexBuffers.colors.dirty) {\r\n                mesh.vertexBuffers.colors.upload();\r\n                delete mesh.vertexBuffers.colors.dirty;\r\n            }\r\n        }\r\n    };\r\n\r\n    var verticesBuilder = {\r\n        onCreate: function (halfEdgeMesh) {\r\n            var buffers = {\r\n                vertices: new Float32Array(halfEdgeMesh.vertices.length * 3),\r\n                colors: new Float32Array(halfEdgeMesh.vertices.length * 4)\r\n            };\r\n            \r\n            var mesh = GL.Mesh.load(buffers);\r\n            for (var i = 0; i < halfEdgeMesh.vertices.length; i++)\r\n                this.onVertexChange(halfEdgeMesh.vertices[i], mesh);\r\n\r\n            return mesh;\r\n        },\r\n        onVertexChange: function (vertex, mesh) {\r\n            var buffer = mesh.vertexBuffers;\r\n            var index = vertex._halfEdge.ownIndex;\r\n            for (var j = 0; j < 3; j++)\r\n                buffer.vertices.data[index * 3 + j] = vertex[j];\r\n            buffer.vertices.dirty = true;\r\n            var color = vertex._selected ? [1, 0.4, 0.1, 1] : [0, 0, 0, 1];\r\n            for (j = 0; j < 4; j++)\r\n                buffer.colors.data[index * 4 + j] = color[j];\r\n            buffer.colors.dirty = true;\r\n        },\r\n        onClean: function (mesh) {\r\n            if (mesh.vertexBuffers.vertices.dirty) {\r\n                mesh.vertexBuffers.vertices.upload();\r\n                delete mesh.vertexBuffers.vertices.dirty;\r\n            }\r\n            if (mesh.vertexBuffers.colors.dirty) {\r\n                mesh.vertexBuffers.colors.upload();\r\n                delete mesh.vertexBuffers.colors.dirty;\r\n            }\r\n        }\r\n    };\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var shader = null;\r\n\r\n    Modules.prototype.add('edit-interaction-render', function (instance) {\r\n        instance.asset.shader.get('wireframe', function (s) {\r\n            shader = s;\r\n        });\r\n\r\n        var uniforms = {\r\n            u_mvp: mat4.create()\r\n        };\r\n\r\n        var temp = mat4.create();\r\n        instance.surface.interactions.edit.onRender = function (surface) {\r\n            instance.scene.getObjects().forEach(function (node) {\r\n                var obj = node.data;\r\n\r\n                surface.camera.getViewMatrix(temp);\r\n                mat4.multiply(temp, surface.camera.projection, temp);\r\n                mat4.multiply(uniforms.u_mvp, temp, obj.model);\r\n\r\n                if (shader) {\r\n                    shader.uniforms(uniforms);\r\n                    if (obj.mesh instanceof Math.HalfEdgeMesh) {\r\n                        var wireframe = obj.mesh.cache.get('edit-interaction-render-wireframe');\r\n                        var vertices = obj.mesh.cache.get('edit-interaction-render-vertices');\r\n                        shader.draw(wireframe, instance.graphics.gl.LINES);\r\n                        shader.draw(vertices, instance.graphics.gl.POINTS);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    }, ['edit-interaction', 'shader', 'edit-interaction-render-cache']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction-selection', function (instance) {\r\n        instance.surface.interactions.edit.selection = {\r\n            objects: {},\r\n            addAll: function (object) {\r\n                var result = [];\r\n                var selection = this;\r\n                object.mesh.vertices.forEach(function (vertex) {\r\n                    toggleVertex(selection, object, vertex);\r\n                    result.push(vertex);\r\n                });\r\n                return result;\r\n            },\r\n            add: function (ray, object, position) {\r\n                position = position || [0, 0, 0];\r\n                var selection = this;\r\n\r\n                var result = {\r\n                    vertices: [],\r\n                    edges: [],\r\n                    faces: []\r\n                };\r\n\r\n                var vertices = object.mesh.bounds.getCollidingItems(ray);\r\n                var rayVertices = vertices.filter(function (vertex) {\r\n                    return Math.geo.rayPointDistance(ray.start, ray.direction, vertex) <= 0.05;\r\n                });\r\n                var vertex = Math.geo.findClosestPoint(position, rayVertices);\r\n                if (vertex) {\r\n                    toggleVertex(selection, object, vertex);\r\n                    result.vertices.push(vertex);\r\n                    return result;\r\n                }\r\n\r\n                //TODO: check edge collisions & add to selection\r\n\r\n                var uniqueFaces = getFacesFromVertices(vertices);\r\n                uniqueFaces = uniqueFaces.filter(function (face) {\r\n                    return Math.geo.rayFaceCollision(ray.start, ray.direction,\r\n                        face.getVertices());\r\n                });\r\n                var closestFace = Math.geo.findClosestFace(position, uniqueFaces);\r\n                if (closestFace) {\r\n                    toggleFace(selection, object, closestFace);\r\n                    result.faces.push(closestFace);\r\n                }\r\n\r\n                //TODO: keep only closest element of all 3 types\r\n\r\n                return result;\r\n            },\r\n            getCenter: function () {\r\n                var name = Object.keys(this.objects)[0];\r\n                return Math.geo.computePointsCenter(this.objects[name].vertices);\r\n            },\r\n            clear: function () {\r\n                for (var name in this.objects) {\r\n                    var selectedObj = this.objects[name];\r\n                    var sceneObj = instance.scene.getObjectByName(name);\r\n                    for (var i = 0; i < selectedObj.vertices.length; i++) {\r\n                        var vertex = selectedObj.vertices[i];\r\n                        if (vertex._selected) {\r\n                            delete vertex._selected;\r\n                            sceneObj.mesh.onVertexChange(vertex);\r\n                        }\r\n                    }\r\n                }\r\n                this.objects = {};\r\n            },\r\n            isEmpty: function () {\r\n                return !Object.keys(this.objects).length;\r\n            }\r\n        };\r\n\r\n    }, ['edit-interaction']);\r\n\r\n    function toggleVertex (selection, object, vertex) {\r\n        if (vertex) {\r\n            if (toggle(selection, object, vertex, 'vertices')) {\r\n                vertex._selected = true;\r\n                vertex._halfEdge.getFaces().forEach(function (face) {\r\n                    var selectedVertices = selection.objects[object.name].vertices;\r\n                    var faceVertices = face.getVertices();\r\n                    var allSelected = true;\r\n                    faceVertices.forEach(function (vertex) {\r\n                        allSelected &= selectedVertices.includes(vertex);\r\n                    });\r\n                    if (allSelected && !face._selected)\r\n                        toggleFace(selection, object, face);\r\n                });\r\n            } else delete vertex._selected;\r\n        }\r\n    }\r\n\r\n    function toggleEdge (selection, object, edge) {\r\n        if (edge) {\r\n            if (toggle(selection, object, edge, 'edges')) {\r\n                edge._selected = true;\r\n            } else delete edge._selected;\r\n        }\r\n    }\r\n\r\n    function toggleFace (selection, object, face) {\r\n        if (face) {\r\n            if (toggle(selection, object, face, 'faces')) {\r\n                face._selected = true;\r\n                face.getVertices().forEach(function (vertex) {\r\n                    if (!vertex._selected)\r\n                        toggleVertex(selection, object, vertex);\r\n                });\r\n            } else delete face._selected;\r\n        }\r\n    }\r\n\r\n    function toggle (selection, object, item, arrayName) {\r\n        initObjectIfNeeded(selection, object);\r\n        var array = selection.objects[object.name][arrayName];\r\n        var index = array.indexOf(item);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n            delObjectIfNeeded(selection, object);\r\n            return false;\r\n        } else {\r\n            array.push(item);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function initObjectIfNeeded (selection, object) {\r\n        var name = object.name;\r\n        if (!selection.objects[name]) {\r\n            selection.objects[name] = {\r\n                faces: [],\r\n                edges: [],\r\n                vertices: []\r\n            };\r\n        }\r\n    }\r\n\r\n    function delObjectIfNeeded (selection, object) {\r\n        var name = object.name;\r\n        if (selection.objects[name]) {\r\n            var objSelection = selection.objects[name];\r\n            if (!objSelection.vertices.length &&\r\n                !objSelection.vertices.length &&\r\n                !objSelection.vertices.length)\r\n                delete selection.objects[name];\r\n        }\r\n    }\r\n\r\n    function getEdgesFromVertices (vertices) {\r\n        var edges = [];\r\n        vertices.forEach(function (vertex) {\r\n            vertex._halfEdge.outEdges.forEach(function (edge) {\r\n                if (edges.indexOf(edge) === -1)\r\n                    edges.push(edge);\r\n            });\r\n        });\r\n        return edges;\r\n    }\r\n\r\n    function getFacesFromVertices (vertices) {\r\n        var faces = [];\r\n        vertices.forEach(function (vertex) {\r\n            vertex._halfEdge.getFaces().forEach(function (face) {\r\n                if (faces.indexOf(face) === -1)\r\n                    faces.push(face);\r\n            });\r\n        });\r\n        return faces;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('edit-interaction', function (instance) {\n        var mouseDownCoords = vec2.create();\n\r\n        instance.surface.interactions.edit = {\r\n            actions: {},\r\n            action: null,\n            isMouseDown: false,\n            isShiftDown: false,\n            isControlDown: false,\r\n            lastCoords: [0, 0],\r\n            onMouseMove: function (event, realCoords) {\r\n                vec2.copy(this.lastCoords, realCoords);\r\n                if (this.isMouseDown && !this.action) {\r\n                    var delta2d = vec2.sub(vec2.create(), mouseDownCoords, realCoords);\r\n                    if (vec2.length(delta2d) > 5) this.setAction('move', event);\r\n                }\r\n                this.runAction('onMouseMove', event, realCoords);\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 1) this.isMouseDown = false;\r\n                this.runAction('onMouseUp', event, realCoords);\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                if (!this.action) {\n                    var canvas = event.target;\n                    var data = instance.surface.map[canvas.id];\n\n                    if (event.which === 1) {\n                        this.isMouseDown = true;\n\n                        var ray = data.camera.getRay(null, realCoords,\n                            [canvas.width, canvas.height]);\n\n                        var selection = this.selection;\n                        var shiftDown = this.isShiftDown;\n                        instance.scene.getObjects().forEach(function (node) {\n                            if (!shiftDown) selection.clear();\n                            var result = selection.add(ray, node.data, data.camera.getPosition());\n                            result.vertices.forEach(function (vertex) {\n                                node.data.mesh.cache.onVertexChange(vertex);\n                                vec2.copy(mouseDownCoords, realCoords);\n                            });\n                            result.faces.forEach(function (face) {\n                                face.getVertices().forEach(function (vertex) {\n                                    node.data.mesh.cache.onVertexChange(vertex);\n                                });\n                                vec2.copy(mouseDownCoords, realCoords);\n                            });\n                        });\n                        return false;\n                    }\n                }\n                this.runAction('onMouseDown', event, realCoords);\n                return true;\r\n            },\r\n            onKeyDown: function (event, realCoords) {\r\n                this.isShiftDown = event.shiftKey;\n                this.isShiftDown = event.ctrlKey;\r\n\r\n                if (event.key === 'a') {\r\n                    if (!this.selection.isEmpty()) this.selection.clear();\r\n                    else {\r\n                        var selection = this.selection;\r\n                        instance.scene.getObjects().forEach(function (object) {\r\n                            var result = selection.addAll(object.data);\r\n                            result.forEach(function (vertex) {\r\n                                object.data.mesh.cache.onVertexChange(vertex);\r\n                            });\r\n                        });\r\n                    }\r\n                } else if (event.key === 'g') this.setAction('move', event);\r\n            },\r\n            onKeyUp: function (event, realCoords) {\r\n                this.isShiftDown = event.shiftKey;\r\n                this.isShiftDown = event.ctrlKey;\r\n            },\r\n            setAction: function (name, event) {\r\n                if (name && this.actions[name]) {\r\n                    this.action = name;\r\n                    this.runAction('init', event);\r\n                }\r\n            },\r\n            runAction : function (callbackName, event) {\r\n                if (this.action && this.actions[this.action]) {\r\n                    var callback = this.actions[this.action][callbackName];\r\n                    if (callback) callback(this, event);\r\n                }\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setInteraction(surface, 'edit');\r\n        });\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Graphics = function (instance) {\r\n        this.gl = GL.create({\r\n            height: screen.height,\r\n            width: screen.width\r\n        });\r\n        this.gl.animate();\r\n        this.gl.ondraw = function () {\r\n            var renderTargets = document.querySelectorAll('canvas');\r\n            for (var i = 0; i < renderTargets.length; i++)\r\n                drawRenderTarget(instance, renderTargets[i]);\r\n        };\r\n        this.gl.clearColor(0.349, 0.349, 0.349, 1);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n    };\r\n\r\n    Modules.prototype.add('graphics', function (instance) {\r\n        instance.graphics = new Graphics(instance);\r\n    });\r\n\r\n    function drawRenderTarget (instance, canvas) {\r\n        var data = instance.surface.map[canvas.id];\r\n        var gl = instance.graphics.gl;\r\n\r\n        var width  = canvas.clientWidth, height = canvas.clientHeight;\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.viewport(0, 0, width, height);\r\n\r\n        var mainRender = instance.surface.getRender(canvas);\r\n        if (mainRender) mainRender(data);\r\n        instance.surface.onRender(canvas, data);\r\n\r\n        var context = canvas.getContext('2d');\r\n        if (context) {\r\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data.buffer);\r\n            data.imgData.data.set(data.buffer);\r\n            context.putImageData(data.imgData, 0, 0);\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var objectCount = 0;\r\n    var lightCount = 0;\r\n\r\n    Modules.prototype.add('scene', function (instance) {\r\n        instance.scene = TreeNode.extend();\r\n\r\n        instance.scene.addObject = function (info) {\r\n            if (!info.primitive) info.primitive = instance.graphics.gl.TRIANGLES;\r\n            if (!info.model) info.model = mat4.create();\r\n            if (!info.type) info.type = 'object';\r\n            if (!info.name) info.name = 'object_' + (objectCount++);\r\n            this.add(info);\r\n        };\r\n\r\n        instance.scene.addLight = function (info) {\r\n            if (!info.model) info.position = [0, 0, 0];\r\n            if (!info.color) info.color = [0.5, 0.5, 0.5];\r\n            if (!info.type) info.type = 'light';\r\n            if (!info.name) info.name = 'light_' + (lightCount++);\r\n            this.add(info);\r\n        };\r\n\r\n        instance.scene.getObjectByName = function (name) {\r\n            return getObjectByName(this, name);\r\n        };\r\n\r\n        instance.scene.getObjects = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'object';\r\n            });\r\n        };\r\n\r\n        instance.scene.getLights = function () {\r\n            return this.dfs(function (node) {\r\n                return node.data.type === 'light';\r\n            });\r\n        };\r\n\r\n        instance.asset.mesh.get('cube', function (mesh) {\r\n            instance.scene.addObject({mesh: mesh});\r\n        });\r\n        instance.scene.addLight({position: [0, 10, 5]});\r\n    }, ['graphics', 'halfedge-cube']);\r\n\r\n    function getObjectByName (rootNode, name) {\r\n        for (var i = 0; i < rootNode.children.length; i++) {\r\n            var child = rootNode.children[i];\r\n            if (child.data.name === name) {\r\n                return child.data;\r\n            } else {\r\n                var node = getObjectByName(child, name);\r\n                if (node) return node.data;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n})());\r\n"]}