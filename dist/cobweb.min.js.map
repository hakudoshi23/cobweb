{"version":3,"sources":["ajax.js","array.js","html.js","obj.js","tree.js","events.js","logger.js","cobweb.js","modules.js","pane/pane-header.js","pane/pane-types.js","pane/panes.js","math/plane.js","math/ray.js","pane/surface/surface.js","pane/surface/interaction/common-interaction.js","pane/surface/interaction/object-interaction.js","pane/surface/interaction/surface-interaction.js","pane/surface/render/render-solid.js","pane/surface/render/surface-render.js","graphic.js","scene.js"],"names":["ajax","options","_extend","defaultAjaxOptions","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","success","response","error","method","params","objToParams","data","urlWithParams","url","open","async","send","get","Ajax","getJSON","JSON","parse","post","obj","key","nextParam","encodeURIComponent","slice","defaults","prop","hasOwnProperty","value","window","safeExtend","prototype","property","Array","a","concat","i","length","j","splice","callback","s4","Math","floor","random","toString","substring","HTMLElement","oldClassNames","newClassNames","arguments","className","trim","replace","split","unique","join","queryClassNames","currentClassNames","index","name","indexOf","removeClassNames","removeEach","forEach","attr","__data_cache","WeakMap","elAttrs","undefined","set","setAttribute","getAttribute","removeAttribute","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","matches","document","ownerDocument","querySelectorAll","item","query","parentElement","current","clientHeight","style","height","clientWidth","width","guid","overlap","querySelector","Object","newObj","clone","extend","TreeNode","parent","children","isRoot","add","child","constructor","push","remove","dfs","check","out","bfs","_TreeNode","call","create","EventHandler","isDebug","listeners","trigger","console","debug","apply","on","off","array","reset","own","keys","Logger","instance","handlers","addHandler","level","ALL","args","DEBUG","INFO","info","WARNING","warn","ERROR","log","warning","tmp","levelHandlers","handler","removeHandler","NONE","defaultOptions","container","selector","Cobweb","Error","addClass","logger","events","modules","Modules","onLoadedAll","names","topologicalSort","sortedNames","module","dependencies","depName","nextName","candidates","getInitialCandidates","dependant","dependantName","allDependenciesMet","loadedUntilNow","runCallback","callbacks","isFunction","all","init","ex","dependencyModule","moduleName","onCreateCallback","pane","header","createHeader","append","div","createElement","oldPane","newPane","oldType","attrData","setType","types","typeCallbacks","onPaneType","paneHeader","onCreateHeader","dataset","paneType","onPaneCreate","onPaneSplit","origin","onPaneResize","internal","Pane","separator","size","root","Plane","point","normal","vec3","normalize","Ray","start","direction","fromPoints","b","sub","onSurfacePaneType","canvas","id","surfaceIndex","surface","map","proj","mat4","center","rotation","distance","getViewMatrix","view","eye","getCameraPosition","lookAt","rotateX","rotateY","getCameraDirection","getRayFromCamera","ray","canvasCoords","canvasSize","auxMat","multiply","invert","transformMat4","updateCanvasSize","onCreateSurfaceHeader","label","innerHTML","appendChild","context","getContext","headerHeight","imgData","createImageData","buffer","Uint8Array","perspective","DEG2RAD","addEventListener","event","surfaces","parentNode","combine","target","originalRotation","delta","getCoordsDelta","initial","mouseDownCoords","interactions","common","onMouseWheel","realCoords","max","min","wheelDelta","detail","onMouseMove","moving","onMouseDown","which","hitPoint","cube","scene","hit","geo","testRayBBox","mesh","bounding","model","onMouseUp","onClick","object","setInteraction","getLocalCoordinates","type","coordinates","pageX","pageY","clientX","body","scrollLeft","documentElement","clientY","scrollTop","offsetLeft","offsetTop","onSurfaceEvent","getInteractionCallbacks","keepRunning","interaction","interactionName","onmousewheel","onmousemove","onmousedown","onmouseup","onclick","initialValue","shader","Shader","temp","mvp","uniforms","u_color","u_lightvector","u_model","u_mvp","renders","solid","objs","lightDirection","draw","primitive","setRender","render","getRender","renderName","panes","drawRenderTarget","gl","graphics","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","readPixels","RGBA","UNSIGNED_BYTE","putImageData","Graphics","GL","screen","animate","ondraw","renderTargets","clearColor","enable","DEPTH_TEST","translate","TRIANGLES","Mesh","LINES","grid","lines","color","intensity"],"mappings":"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","file":"cobweb.min.js","sourcesContent":["((function(){\r\n    'use strict';\r\n\r\n    var defaultAjaxOptions = {\r\n        method: 'GET',\r\n        url: '',\r\n        data: {},\r\n        async: true,\r\n        success: null,\r\n        error: null\r\n    };\r\n\r\n    function ajax (options) {\r\n        _extend(options || {}, defaultAjaxOptions);\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200) {\r\n                    if (options.success) options.success(this.response);\r\n                } else {\r\n                    if (options.error) error.success(this.response);\r\n                }\r\n            }\r\n        };\r\n        if (options.method === 'GET') {\r\n            var params = objToParams(options.data);\r\n            var urlWithParams = options.url + (params ? '?' + params : '');\r\n            xhttp.open(options.method, urlWithParams, options.async);\r\n            xhttp.send();\r\n        } else if (options.method === 'POST') {\r\n            xhttp.open(options.method, options.url, options.async);\r\n            xhttp.send(options.data);\r\n        }\r\n        return xhttp;\r\n    }\r\n\r\n    function get (url, data, success) {\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function getJSON (url, data, success) {\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: function (response) {\r\n                success(JSON.parse(response));\r\n            },\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    function post (url, data, success) {\r\n        return Ajax.ajax({\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            method: 'POST'\r\n        });\r\n    }\r\n\r\n    window.Ajax = {\r\n        ajax: ajax,\r\n        get: get,\r\n        getJSON: getJSON,\r\n        post: post\r\n    };\r\n\r\n    function objToParams (obj) {\r\n        var params = '';\r\n        for (var key in obj) {\r\n            var nextParam = key + '=' + encodeURIComponent(obj[key]);\r\n            params += '&' + nextParam;\r\n        }\r\n        return params.slice(1);\r\n    }\r\n\r\n    function _extend(options, defaults) {\r\n        for (var prop in defaults) {\r\n            if (prop && defaults.hasOwnProperty(prop)) {\r\n                var value = defaults[prop];\r\n                if (typeof value === 'object') {\r\n                    if (options[prop]) {\r\n                        _extend(options[prop], value);\r\n                    } else\r\n                        options[prop] = value;\r\n                } else if (typeof options[prop] === 'undefined')\r\n                    options[prop] = value;\r\n            }\r\n        }\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Array.prototype, 'unique', function() {\r\n        var a = this.concat();\r\n        for(var i = 0; i < a.length; ++i)\r\n            for(var j = i + 1; j < a.length; ++j)\r\n                if(a[i] === a[j]) a.splice(j--, 1);\r\n        return a;\r\n    });\r\n\r\n    safeExtend(Array.prototype, 'forEach', function(callback) {\r\n        for (var i = 0; i < this.length; i++)\r\n            callback(this[i], i, this);\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(HTMLElement.prototype, 'addClass', function () {\r\n        var oldClassNames, newClassNames;\r\n        for(var i in arguments){\r\n            oldClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            newClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            this.className = oldClassNames.concat(newClassNames).unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'hasClass', function () {\r\n        var queryClassNames, currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n        for(var i in arguments){\r\n            queryClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            for (var index = 0; index < queryClassNames.length; index++) {\r\n                var name = queryClassNames[index];\r\n                if (currentClassNames.indexOf(name) == -1)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'removeClass', function () {\r\n        var index = 0, currentClassNames, removeClassNames;\r\n        var removeEach = function (name) {\r\n            index = currentClassNames.indexOf(name);\r\n            if (index != -1)\r\n                currentClassNames.splice(index, 1);\r\n        };\r\n        for(var i in arguments){\r\n            currentClassNames = !this.className ? [] : this.className.trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames = !arguments[i] ? [] : arguments[i].trim().replace(/\\s+/g, ' ').split(' ');\r\n            removeClassNames.forEach(removeEach);\r\n            this.className = currentClassNames.unique().join(' ');\r\n        }\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'data', function (attr, value) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        var elAttrs = window.__data_cache.get(this) || {};\r\n        if (value !== undefined) {\r\n            elAttrs[attr] = value;\r\n            window.__data_cache.set(this, elAttrs);\r\n        } else {\r\n            if (attr) return elAttrs && elAttrs[attr];\r\n            else return elAttrs;\r\n        }\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'setData', function (data) {\r\n        if (!window.__data_cache) window.__data_cache = new WeakMap();\r\n        window.__data_cache.set(this, data);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attr', function (name, value) {\r\n        if (value !== undefined)\r\n            this.setAttribute(name, value);\r\n        else if (value === null)\r\n            this.removeAttribute(name);\r\n        else\r\n            return this.getAttribute(name);\r\n        return this;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'attrData', function (name, value) {\r\n        return this.attr('data-' + name, value);\r\n    });\r\n\r\n    safeExtend(Element.prototype, 'matches',\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;\r\n        }\r\n    );\r\n\r\n    safeExtend(HTMLElement.prototype, 'parent', function (query) {\r\n        if (!query) return this.parentElement;\r\n        var current = this.parentElement;\r\n        while (!current.matches(query))\r\n            current = current.parentElement;\r\n        return current;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'height', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.height = value + 'px';\r\n            else\r\n                this.style.height = value;\r\n        } else\r\n            return this.clientHeight;\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'width', function () {\r\n        if (arguments.length == 1) {\r\n            var value = arguments[0];\r\n            if (typeof value === 'number')\r\n                this.style.width = value + 'px';\r\n            else\r\n                this.style.width = value;\r\n        } else\r\n            return this.clientWidth;\r\n    });\r\n\r\n    safeExtend(window, 'guid', function () {\r\n        return 'GUID-' + s4() + '-' + s4() + '-' + s4();\r\n    });\r\n\r\n    safeExtend(HTMLElement.prototype, 'guid', function () {\r\n        var guid = null, overlap = null;\r\n        do {\r\n            guid = window.guid();\r\n            overlap = document.querySelector('#' + guid);\r\n        } while(overlap);\r\n        this.attr('id', guid);\r\n        return guid;\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16).substring(1);\r\n    }\r\n})());\r\n","((function(){\r\n    'use strict';\r\n\r\n    safeExtend(Object, 'clone', function (obj) {\r\n        var newObj = {};\r\n        for (var property in obj)\r\n            if (obj.hasOwnProperty(property)) {\r\n                var value = obj[property];\r\n                if (typeof value === 'object')\r\n                    newObj[property] = Object.clone(obj[property]);\r\n                else\r\n                    newObj[property] = obj[property];\r\n            }\r\n        return newObj;\r\n    });\r\n\r\n    function safeExtend(prototype, property, value) {\r\n        if(!prototype[property]) prototype[property] = value;\r\n    }\r\n\r\n    window.extend = _extend;\r\n\r\n    function _extend(options, defaults) {\r\n        for (var prop in defaults) {\r\n            if (prop && defaults.hasOwnProperty(prop)) {\r\n                var value = defaults[prop];\r\n                if (typeof value === 'object') {\r\n                    if (options[prop]) {\r\n                        _extend(options[prop], value);\r\n                    } else\r\n                        options[prop] = value;\r\n                } else if (typeof options[prop] === 'undefined')\r\n                    options[prop] = value;\r\n            }\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var TreeNode = function (parent, data) {\r\n        this.data = data || {};\r\n        this.parent = parent;\r\n        this.children = [];\r\n    };\r\n\r\n    window.TreeNode = TreeNode;\r\n\r\n    TreeNode.prototype.isRoot = function () {\r\n        return !this.parent;\r\n    };\r\n\r\n    TreeNode.prototype.add = function (data) {\r\n        var child = new this.constructor(this, data);\r\n        this.children.push(child);\r\n        return child;\r\n    };\r\n\r\n    TreeNode.prototype.remove = function (index) {\r\n        this.children.slice(index, 1);\r\n        return this;\r\n    };\r\n\r\n    TreeNode.prototype.dfs = function (check) {\r\n        var out = [];\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n            out.concat(this.children[i].dfs(check));\r\n        }\r\n        return out;\r\n    };\r\n\r\n    TreeNode.prototype.bfs = function (check) {\r\n        var out = [], i;\r\n        for (i = 0; i < this.children.length; i++)\r\n            if (!check || (check && check(this.children[i])))\r\n                out.push(this.children[i]);\r\n        for (i = 0; i < this.children.length; i++)\r\n            out.concat(this.children[i].bfs(check));\r\n        return out;\r\n    };\r\n\r\n    TreeNode.extend = function (defaults) {\r\n        var _TreeNode = function (parent, data) {\r\n            TreeNode.call(this, parent, data);\r\n        };\r\n        _TreeNode.prototype = Object.create(TreeNode.prototype);\r\n        _TreeNode.prototype.constructor = _TreeNode;\r\n        extend(_TreeNode.prototype, defaults);\r\n        return new _TreeNode(null);\r\n    };\r\n})());\r\n","((function() {\r\n    'use strict';\r\n\r\n    var EventHandler = function (isDebug) {\r\n        this.isDebug = !!isDebug;\r\n        this.listeners = {};\r\n    };\r\n\r\n    EventHandler.prototype.trigger = function() {\r\n        var name = arguments[0];\r\n        var listeners = this.listeners[name] || [];\r\n        Array.prototype.splice.call(arguments, 0, 1);\r\n        if (this.isDebug) console.debug(name, arguments);\r\n        for (var i = 0; i < listeners.length; i++)\r\n            listeners[i].apply(null, arguments);\r\n    };\r\n\r\n    EventHandler.prototype.on = function(name, callback) {\r\n        if (!this.listeners[name]) this.listeners[name] = [];\r\n        this.listeners[name].push(callback);\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name) {\r\n        delete this.listeners[name];\r\n    };\r\n\r\n    EventHandler.prototype.off = function(name, callback) {\r\n        if (this.listeners[name]) {\r\n            var array = this.listeners[name];\r\n            if (array.indexOf(callback) > -1) array.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    EventHandler.prototype.reset = function() {\r\n        var own = this;\r\n        Object.keys(this.listeners).forEach(function(key) {\r\n            delete own.listeners[key];\r\n        });\r\n    };\r\n\r\n    window.EventHandler = EventHandler;\r\n})());\r\n","/* jshint loopfunc:true */\r\n\r\n((function(){\r\n    'use strict';\r\n\r\n    var Logger = function (instance) {\r\n        this.handlers = [];\r\n\r\n        this.addHandler(this.level.ALL, function (level, args) {\r\n            if (Logger.prototype.level.DEBUG === level) {\r\n                console.debug.apply(this, args);\r\n            } else if (Logger.prototype.level.INFO === level) {\r\n                console.info.apply(this, args);\r\n            } else if (Logger.prototype.level.WARNING === level) {\r\n                console.warn.apply(this, args);\r\n            } else if (Logger.prototype.level.ERROR === level) {\r\n                console.error.apply(this, args);\r\n            }\r\n        });\r\n    };\r\n\r\n    Logger.prototype.debug = function () {\r\n        this.log(Logger.prototype.level.DEBUG, arguments);\r\n    };\r\n\r\n    Logger.prototype.info = function () {\r\n        this.log(Logger.prototype.level.INFO, arguments);\r\n    };\r\n\r\n    Logger.prototype.warning = function () {\r\n        this.log(Logger.prototype.level.WARNING, arguments);\r\n    };\r\n\r\n    Logger.prototype.error = function () {\r\n        this.log(Logger.prototype.level.ERROR, arguments);\r\n    };\r\n\r\n    Logger.prototype.log = function (level, args) {\r\n        var tmp = level;\r\n        var levelHandlers = this.handlers[tmp] || [];\r\n        while (tmp >= 0) {\r\n            levelHandlers.forEach(function (handler) {\r\n                handler(level, args);\r\n            });\r\n            levelHandlers = this.handlers[--tmp] || [];\r\n        }\r\n    };\r\n\r\n    Logger.prototype.addHandler = function (level, callback) {\r\n        if (!this.handlers[level])\r\n            this.handlers[level] = [];\r\n        this.handlers[level].push(callback);\r\n    };\r\n\r\n    Logger.prototype.removeHandler = function (level, callback) {\r\n        var levelHandlers = this.handlers[level];\r\n        if (levelHandlers) {\r\n            var index = levelHandlers.indexOf(callback);\r\n            if (index > -1)\r\n                levelHandlers.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    Logger.prototype.level = {\r\n        ALL: 0,\r\n        DEBUG: 1,\r\n        INFO: 2,\r\n        WARNING: 3,\r\n        ERROR: 4,\r\n        NONE: 5,\r\n    };\r\n\r\n    window.Logger = Logger;\r\n})());\r\n","(function(){\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        container: {\r\n            selector: '#cobweb',\r\n            className: 'cb-container'\r\n        }\r\n    };\r\n\r\n    var Cobweb = function (options) {\r\n        var instance = this;\r\n\r\n        this.options = options || {};\r\n        extend(this.options, defaultOptions);\r\n\r\n        this.container = document.querySelector(this.options.container.selector);\r\n        if (!this.container)\r\n            throw new Error('Invalid container selector: \\'' +\r\n                this.options.container.selector + '\\'');\r\n        this.container.addClass(this.options.container.className);\r\n        this.container.data('instance', this);\r\n\r\n        this.logger = new Logger(this, true);\r\n        this.events = new EventHandler(true);\r\n        this.modules = new Modules([this], {\r\n            onLoadedAll: function (names) {\r\n                instance.events.trigger('modules.loaded.all', names);\r\n                instance.events.trigger('app.loaded');\r\n            }\r\n        });\r\n    };\r\n\r\n    window.Cobweb = Cobweb;\r\n}());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Modules = function (params, callbacks) {\r\n        callbacks = callbacks || {};\r\n        var modules = Modules.prototype.all;\r\n        try {\r\n            var sortedNames = topologicalSort(modules);\r\n            for (var i = 0; i < sortedNames.length; i++ ) {\r\n                var name = sortedNames[i];\r\n                var module = modules[name];\r\n                try {\r\n                    module.init.apply(this, params);\r\n                    runCallback(callbacks, 'onLoaded', [name, module]);\r\n                } catch (ex) {\r\n                    console.error('Error loading module:', name, ex);\r\n                    runCallback(callbacks, 'onError', [ex, name, module]);\r\n                }\r\n            }\r\n            runCallback(callbacks, 'onLoadedAll', [sortedNames]);\r\n        } catch (ex) {\r\n            console.error('Error loading modules:', ex);\r\n        }\r\n    };\r\n\r\n    Modules.prototype.all = {};\r\n    Modules.prototype.add = function (name, init, dependencies) {\r\n        dependencies = dependencies || [];\r\n\r\n        var dependant = [];\r\n        var dependencyModule, i;\r\n        for (var moduleName in this.all) {\r\n            var module = this.all[moduleName];\r\n            for (i = 0; i < module.dependencies.length; i++)\r\n                if (module.dependencies[i] === name)\r\n                    dependant.push(moduleName);\r\n        }\r\n        for (i = 0; i < dependencies.length; i++) {\r\n            dependencyModule = this.all[dependencies[i]];\r\n            if (dependencyModule) dependencyModule.dependant.push(name);\r\n        }\r\n\r\n        this.all[name] = {\r\n            dependencies: dependencies,\r\n            dependant: dependant,\r\n            init: init\r\n        };\r\n    };\r\n\r\n    window.Modules = Modules;\r\n\r\n    function topologicalSort (modules) {\r\n        var sortedNames = [];\r\n\r\n        var module = null, i = 0;\r\n        for (var name in modules) {\r\n            module = modules[name];\r\n            for (i = 0; i < module.dependencies.length; i++) {\r\n                var depName = module.dependencies[i];\r\n                if (!modules[depName])\r\n                    throw new Error('Missing module: ' + depName);\r\n            }\r\n        }\r\n\r\n        var nextName = null;\r\n        var candidates = getInitialCandidates(modules);\r\n        while (candidates.length > 0) {\r\n            nextName = candidates.splice(0, 1)[0];\r\n            module = modules[nextName];\r\n            if (module) {\r\n                sortedNames.push(nextName);\r\n                for (i = 0; i < module.dependant.length; i++) {\r\n                    var dependantName = module.dependant[i];\r\n                    if (allDependenciesMet(sortedNames, modules[dependantName]))\r\n                        candidates.push(dependantName);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Object.keys(modules).length !== sortedNames.length)\r\n            throw new Error('Dependency cycle!');\r\n\r\n        return sortedNames;\r\n    }\r\n\r\n    function getInitialCandidates (modules) {\r\n        var candidates = [];\r\n        for (var name in modules)\r\n            if (modules[name].dependencies.length === 0)\r\n                candidates.push(name);\r\n        return candidates;\r\n    }\r\n\r\n    function allDependenciesMet (loadedUntilNow, module) {\r\n        for (var i = 0; i < module.dependencies.length; i++)\r\n            if (loadedUntilNow.indexOf(module.dependencies[i]) === -1) return false;\r\n        return true;\r\n    }\r\n\r\n    function runCallback (callbacks, name, params) {\r\n        var callback = callbacks[name];\r\n        var isFunction = typeof callback === 'function';\r\n        if (isFunction) callback.apply(null, params);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-header', function (instance) {\r\n        instance.events.on('pane.create', function (pane) {\r\n            onCreateCallback(pane, instance);\r\n        });\r\n    }, ['pane-types']);\r\n\r\n    function onCreateCallback (pane, instance) {\r\n        var header = createHeader();\r\n        pane.append(header);\r\n    }\r\n\r\n    function createHeader () {\r\n        var div = document.createElement('div');\r\n        div.className = 'pane-header';\r\n        return div;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane-types', function (instance) {\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var oldType = oldPane.attrData('pane-type');\r\n            if (oldType) instance.pane.setType(newPane, oldType);\r\n        });\r\n\r\n        instance.pane.types = {};\r\n\r\n        instance.pane.setType = function (pane, name) {\r\n            if (this.types[name]) {\r\n                var typeCallbacks = this.types[name];\r\n                typeCallbacks.onPaneType(pane, instance);\r\n                var paneHeader = pane.querySelector('.pane-header');\r\n                typeCallbacks.onCreateHeader(paneHeader, instance);\r\n                pane.dataset.paneType = name;\r\n            }\r\n        };\r\n    }, ['pane']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('pane', function (instance) {\r\n        instance.events.on('app.loaded', function () {\r\n            instance.pane.internal = new Pane({\r\n                container: instance.options.container.selector,\r\n                separator: {\r\n                    size: 3\r\n                },\r\n                callbacks: {\r\n                    onPaneCreate: onPaneCreate,\r\n                    onPaneSplit: onPaneSplit,\r\n                    onPaneResize: onPaneResize,\r\n                    //onPaneMerge: onPaneMerge,\r\n                    //onPaneDestroy: onPaneDestroy,\r\n                }\r\n            });\r\n\r\n            var root = instance.pane.internal.container.querySelector('.pane');\r\n            instance.pane.setType(root, 'surface');\r\n        });\r\n\r\n        instance.pane = {};\r\n\r\n        function onPaneCreate (pane) {\r\n            instance.events.trigger('pane.create', pane);\r\n        }\r\n\r\n        function onPaneSplit (origin, newPane) {\r\n            instance.events.trigger('pane.split', origin, newPane);\r\n        }\r\n\r\n        function onPaneResize (pane) {\r\n            instance.events.trigger('pane.resize', pane);\r\n        }\r\n\r\n        function onPaneMerge (merger, toRemove) {\r\n            console.debug('onPaneMerge', merger, toRemove);\r\n        }\r\n\r\n        function onPaneDestroy (pane) {\r\n            console.debug('onPaneDestroy', pane);\r\n        }\r\n    });\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    window.Math = window.Math || {};\r\n\r\n    var Plane = function (point, normal) {\r\n        this.normal = normal || [0, 1, 0];\r\n        this.point = point || vec3.create();\r\n        vec3.normalize(this.normal, this.normal);\r\n    };\r\n\r\n    window.Math.Plane = Plane;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    window.Math = window.Math || {};\r\n\r\n    var Ray = function (start, direction) {\r\n        this.direction = direction || [0, 0, 1];\r\n        this.start = start || vec3.create();\r\n        vec3.normalize(this.direction, this.direction);\r\n    };\r\n\r\n    Ray.fromPoints = function (a, b) {\r\n        var direction = vec3.create();\r\n        vec3.sub(direction, b, a);\r\n        return new Ray(a, direction);\r\n    };\r\n\r\n    window.Math.Ray = Ray;\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var surfaceIndex = 0;\r\n\r\n    Modules.prototype.add('surface', function (instance) {\r\n        instance.pane.types.surface = {\r\n            onPaneType: onSurfacePaneType,\r\n            onCreateHeader: onCreateSurfaceHeader\r\n        };\r\n\r\n        instance.events.on('pane.resize', function (pane) {\r\n            if (pane.attrData('pane-type') === 'surface')\r\n                updateCanvasSize(instance, pane);\r\n        });\r\n\r\n        window.addEventListener('resize', function (event) {\r\n            var surfaces = instance.pane.internal.container\r\n                .querySelectorAll('.pane canvas');\r\n            for (var i = 0; i < surfaces.length; i++) {\r\n                updateCanvasSize(instance, surfaces[i].parentNode);\r\n            }\r\n        });\r\n\r\n        instance.surface = {};\r\n    }, ['pane-types']);\r\n\r\n    function onSurfacePaneType (pane, instance) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.id = 'surface' + (surfaceIndex++);\r\n        canvas.className = 'surface';\r\n        pane.append(canvas);\r\n\r\n        instance.surface.map = instance.surface.map || {};\r\n        instance.surface.map[canvas.id] = {};\r\n        instance.surface.map[canvas.id].surface = {\r\n            proj: mat4.create(),\r\n            center: [0, 0, 0],\r\n            rotation: [0, 0],\r\n            distance: 10,\r\n            getViewMatrix: function (view) {\r\n                view = view || mat4.create();\r\n                var eye = [0, 0, 0];\r\n                this.getCameraPosition(eye);\r\n                mat4.lookAt(view, eye, this.center, [0, -1, 0]);\r\n                return view;\r\n            },\r\n            getCameraPosition: function (eye) {\r\n                eye = eye || vec3.create();\r\n                vec3.set(eye, 0, 0, -this.distance);\r\n                vec3.rotateX(eye, eye, -this.rotation[1]);\r\n                vec3.rotateY(eye, eye, this.rotation[0]);\r\n                return eye;\r\n            },\r\n            getCameraDirection: function (direction) {\r\n                direction = direction || vec3.create();\r\n                var eye = this.getCameraPosition();\r\n                vec3.sub(direction, this.center, eye);\r\n                vec3.normalize(direction, direction);\r\n                return direction;\r\n            },\r\n            getRayFromCamera: function (ray, canvasCoords, canvasSize) {\r\n                ray = ray || new Math.Ray();\r\n                this.getCameraPosition(ray.start);\r\n                vec3.set(ray.direction, canvasCoords[0] / (canvasSize[0] * 0.5) - 1.0,\r\n                    canvasCoords[1] / (canvasSize[1] * 0.5) - 1.0, 1);\r\n                var auxMat = mat4.create();\r\n                mat4.multiply(auxMat, this.proj, this.getViewMatrix());\r\n                mat4.invert(auxMat, auxMat);\r\n                vec3.transformMat4(ray.direction, ray.direction, auxMat);\r\n                return ray;\r\n            }\r\n        };\r\n\r\n        updateCanvasSize(instance, pane);\r\n\r\n        instance.events.trigger('surface.create', canvas);\r\n    }\r\n\r\n    function onCreateSurfaceHeader (header, instance) {\r\n        var label = document.createElement('label');\r\n        label.innerHTML = 'Surface Pane';\r\n        header.appendChild(label);\r\n    }\r\n\r\n    function updateCanvasSize (instance, pane) {\r\n        var canvas = pane.querySelector('canvas');\r\n        var context = canvas.getContext('2d');\r\n        var data = instance.surface.map[canvas.id];\r\n\r\n        var header = pane.querySelector('.pane-header');\r\n        var headerHeight = header ? header.height() : 0;\r\n\r\n        var width = pane.width(), height = pane.height() - headerHeight;\r\n        data.imgData = context.createImageData(width, height);\r\n        data.buffer = new Uint8Array(width * height * 4);\r\n\r\n        canvas.height = height;\r\n        canvas.width = width;\r\n\r\n        mat4.perspective(data.surface.proj, 45 * DEG2RAD, width / height, 0.1, 1000);\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var originalRotation = null;\r\n    var mouseDownCoords = null;\r\n\r\n    Modules.prototype.add('common-interaction', function (instance) {\r\n        instance.surface.interactions.common = {\n            onMouseWheel: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n\r\n                var data = instance.surface.map[canvas.id];\r\n                data.surface.distance -= delta;\r\n\r\n                return true;\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                if (event.target.dataset.moving) {\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n                    if (data) {\r\n                        var delta = getCoordsDelta(mouseDownCoords, realCoords);\r\n                        combine(data.surface.rotation, originalRotation, delta);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                var canvas = event.target;\r\n                var data = instance.surface.map[canvas.id];\r\n                if (event.which === 2) {\r\n                    event.target.dataset.moving = 'true';\r\n                    originalRotation = data.surface.rotation.slice();\r\n                    mouseDownCoords = realCoords;\r\n                } else if (event.which === 1) {\r\n                    var surface = data.surface;\r\n\r\n                    var ray = surface.getRayFromCamera(null, realCoords,\r\n                        [canvas.width, canvas.height]);\r\n\r\n                    /* @Refactor this is testing code, this shouldn't be here */\r\n                    var hitPoint = vec3.create();\r\n                    var cube = instance.scene.root.children[0];\r\n                    var hit = geo.testRayBBox(ray.start, ray.direction, cube.data.mesh.bounding, cube.data.model, hitPoint);\r\n                    console.debug(hit, hitPoint);\r\n                }\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                if (event.which === 2) {\r\n                    delete event.target.dataset.moving;\r\n                    var canvas = event.target;\r\n                    var data = instance.surface.map[canvas.id];\r\n                    var delta = getCoordsDelta(mouseDownCoords, realCoords);\r\n                    combine(data.surface.rotation, originalRotation, delta);\r\n                    mouseDownCoords = null;\r\n                }\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n    }, ['surface-interaction']);\r\n\r\n    function combine (target, originalRotation, delta) {\r\n        if (!originalRotation) return;\r\n        target[0] = originalRotation[0] + delta[0] * 0.005;\r\n        target[1] = originalRotation[1] + delta[1] * 0.005;\r\n    }\r\n\r\n    function getCoordsDelta (initial, current) {\r\n        if (!initial) return [0, 0];\r\n        return [\r\n            initial[0] - current[0],\r\n            initial[1] - current[1]\r\n        ];\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('object-interaction', function (instance) {\r\n        instance.surface.interactions.object = {\r\n            onMouseWheel: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseMove: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseDown: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onMouseUp: function (event, realCoords) {\r\n                return true;\r\n            },\r\n            onClick: function (event, realCoords) {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setInteraction(surface, 'object');\r\n        });\r\n\r\n    }, ['surface-interaction']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-interaction', function (instance) {\r\n        instance.surface.interactions = {};\r\n\r\n        instance.surface.setInteraction = function (surface, name) {\r\n            surface.dataset.interaction = name;\r\n        };\r\n\r\n        instance.surface.getInteractionCallbacks = function (surface) {\r\n            var interactionName = surface.dataset.interaction;\r\n            return instance.surface.interactions[interactionName];\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            surface.onmousewheel = onSurfaceEvent;\r\n            surface.onmousemove = onSurfaceEvent;\r\n            surface.onmousedown = onSurfaceEvent;\r\n            surface.onmouseup = onSurfaceEvent;\r\n            surface.onclick = onSurfaceEvent;\r\n        });\r\n\r\n        function onSurfaceEvent (event) {\r\n            var callbacks = instance.surface.getInteractionCallbacks(event.target);\r\n            var keepRunning = runCallback(callbacks, event);\r\n            if (keepRunning) {\r\n                var common = instance.surface.interactions.common;\r\n                runCallback(common, event);\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            var initialValue = oldPane.dataset.interaction;\r\n            newPane.dataset.interaction = initialValue;\r\n        });\r\n    }, ['surface']);\r\n\r\n    function runCallback (callbacks, event) {\r\n        var realCoords = getLocalCoordinates(event);\r\n        switch (event.type) {\r\n            case 'mousewheel': return callbacks.onMouseWheel(event, realCoords);\r\n            case 'mousemove': return callbacks.onMouseMove(event, realCoords);\r\n            case 'mousedown': return callbacks.onMouseDown(event, realCoords);\r\n            case 'mouseup': return callbacks.onMouseUp(event, realCoords);\r\n            case 'click': return callbacks.onClick(event, realCoords);\r\n        }\r\n    }\r\n\r\n    function getLocalCoordinates (event) {\r\n        var coordinates;\r\n        if (event.pageX || event.pageY) {\r\n            coordinates = [event.pageX, event.pageY];\r\n        } else {\r\n            coordinates = [\r\n                event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft,\r\n                event.clientY + document.body.scrollTop + document.documentElement.scrollTop\r\n            ];\r\n        }\r\n        coordinates[0] -= event.target.offsetLeft;\r\n        coordinates[1] -= event.target.offsetTop;\r\n        return coordinates;\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('render-solid', function (instance) {\r\n        var shader = new Shader(\r\n            'precision highp float;' +\r\n            'attribute vec3 a_vertex;' +\r\n            'attribute vec3 a_normal;' +\r\n            'varying vec3 v_normal;' +\r\n            'uniform mat4 u_mvp;' +\r\n            'uniform mat4 u_model;' +\r\n            'void main() {' +\r\n            '    v_normal = (u_model * vec4(a_normal,0.0)).xyz;' +\r\n            '    gl_Position = u_mvp * vec4(a_vertex,1.0);' +\r\n            '}',\r\n            'precision highp float;' +\r\n            'varying vec3 v_normal;' +\r\n            'uniform vec3 u_lightvector;' +\r\n            'uniform vec4 u_color;' +\r\n            'void main() {' +\r\n            '  vec3 N = normalize(v_normal);' +\r\n            '  vec4 ambient = vec4(0.4, 0.4, 0.4, 1);' +\r\n            '  gl_FragColor = ambient + u_color * max(0.0, dot(u_lightvector,N));' +\r\n            '}'\r\n        );\r\n\r\n        var temp = mat4.create();\r\n        var mvp = mat4.create();\r\n\r\n        var uniforms = {\r\n            u_color: [0.7, 0.7, 0.7, 1],\r\n            u_lightvector: null,\r\n            u_model: null,\r\n            u_mvp: mvp\r\n        };\r\n\r\n        instance.surface.renders.solid = function (surface) {\r\n            var objs = instance.scene.root.dfs();\r\n            for (var i = 0; i < objs.length; i++) {\r\n                var obj = objs[i].data;\r\n                if (obj.type === 'object') {\r\n                    var lightDirection = vec3.create();\r\n                    surface.getCameraPosition(lightDirection);\r\n                    vec3.add(lightDirection, lightDirection, [1, 2, 0]);\r\n                    vec3.normalize(lightDirection, lightDirection);\r\n                    uniforms.u_lightvector = lightDirection;\r\n\r\n                    surface.getViewMatrix(temp);\r\n        \t\t\tmat4.multiply(temp, surface.proj, temp);\r\n        \t\t\tmat4.multiply(mvp, temp, obj.model);\r\n\r\n        \t\t\tuniforms.u_model = obj.model;\r\n        \t\t\tshader.uniforms(uniforms).draw(obj.mesh, obj.primitive);\r\n                }\r\n            }\r\n        };\r\n\r\n        instance.events.on('surface.create', function (surface) {\r\n            instance.surface.setRender(surface, 'solid');\r\n        });\r\n    }, ['surface-render']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('surface-render', function (instance) {\r\n        instance.surface.renders = {};\r\n\r\n        instance.surface.setRender = function (surface, name) {\r\n            surface.dataset.render = name;\r\n        };\r\n\r\n        instance.surface.getRender = function (surface) {\r\n            var renderName = surface.dataset.render;\r\n            return instance.surface.renders[renderName];\r\n        };\r\n\r\n        var panes = document.querySelectorAll('.pane');\r\n        for (var i = 0; i < panes.length; i++) {\r\n            if (panes[i].dataset.paneType == 'surface') {\r\n                var canvas = panes[i].querySelector('canvas');\r\n                canvas.dataset.render = 'solid';\r\n            }\r\n        }\r\n\r\n        instance.events.on('pane.split', function (oldPane, newPane) {\r\n            newPane.attrData('surface-render', oldPane.attrData('surface-render'));\r\n        });\r\n    }, ['surface']);\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    var Graphics = function (instance) {\r\n        this.gl = GL.create({\r\n            height: screen.height,\r\n            width: screen.width\r\n        });\r\n        this.gl.animate();\r\n        this.gl.ondraw = function () {\r\n            var renderTargets = document.querySelectorAll('canvas');\r\n            for (var i = 0; i < renderTargets.length; i++)\r\n                drawRenderTarget(instance, renderTargets[i]);\r\n        };\r\n        this.gl.clearColor(0.349, 0.349, 0.349, 1);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n    };\r\n\r\n    Modules.prototype.add('graphics', function (instance) {\r\n        instance.graphics = new Graphics(instance);\r\n    });\r\n\r\n    function drawRenderTarget (instance, canvas) {\r\n        var data = instance.surface.map[canvas.id];\r\n        var gl = instance.graphics.gl;\r\n\r\n        var width  = canvas.clientWidth, height = canvas.clientHeight;\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.viewport(0, 0, width, height);\r\n\r\n        var render = instance.surface.getRender(canvas);\r\n        if (render) render(data.surface);\r\n\r\n        var context = canvas.getContext('2d');\r\n        if (context) {\r\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data.buffer);\r\n            data.imgData.data.set(data.buffer);\r\n            context.putImageData(data.imgData, 0, 0);\r\n        }\r\n    }\r\n})());\r\n","((function () {\r\n    'use strict';\r\n\r\n    Modules.prototype.add('scene', function (instance) {\r\n        instance.scene = {\r\n            root: TreeNode.extend({})\r\n        };\r\n\r\n        var model = mat4.create();\r\n        mat4.translate(model, model, [1, 1, 0]);\r\n\r\n        instance.scene.root.add({\r\n            type: 'object',\r\n            primitive: instance.graphics.gl.TRIANGLES,\r\n            mesh: GL.Mesh.cube(),\r\n            model: model,\r\n        });\r\n        instance.scene.root.add({\r\n            type: 'object',\r\n            primitive: instance.graphics.gl.LINES,\r\n            mesh: GL.Mesh.grid({\r\n                lines: 17,\r\n                size: 8\r\n            }),\r\n            model: mat4.create(),\r\n        });\r\n        instance.scene.root.add({\r\n            type: 'ligth',\r\n            color: [1, 1, 1],\r\n            intensity: 1\r\n        });\r\n    }, ['graphics']);\r\n})());\r\n"]}