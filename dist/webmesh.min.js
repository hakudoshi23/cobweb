"use strict";!function(){function e(e,t,n){e[t]||(e[t]=n)}e(Array.prototype,"unique",function(){for(var e=this.concat(),t=0;t<e.length;++t)for(var n=t+1;n<e.length;++n)e[t]===e[n]&&e.splice(n--,1);return e}),e(HTMLElement.prototype,"addClass",function(){for(var e in arguments){var t=this.className?this.className.trim().replace(/\s+/g," ").split(" "):[],n=arguments[e]?arguments[e].trim().replace(/\s+/g," ").split(" "):[];this.className=t.concat(n).unique().join(" ")}}),e(HTMLElement.prototype,"height",function(){return this.getBoundingClientRect().height}),e(HTMLElement.prototype,"width",function(){return this.getBoundingClientRect().width})}(),function(){window.EventHandler=function(){this.listeners={},this.trigger=function(){for(var e=arguments[0],t=this.listeners[e]||[],n=0;n<t.length;n++)Array.prototype.splice.call(arguments,0,1),t[n].apply(null,arguments)},this.on=function(e,t){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t)},this.off=function(e){delete this.listeners[e]},this.off=function(e,t){if(this.listeners[e]){var n=this.listeners[e];n.indexOf(t)>-1&&n.splice(index,1)}}}}(),function(){function e(t,n){for(var i in n)if(n.hasOwnProperty(i)){var o=n[i];"object"==typeof o?e(t[i],n[i]):t[i]=n[i]}}var t=function(n){this.options={container:{selector:"#webmesh",className:"wm-container"},menu:{className:"wm-menu"},logger:{className:"wm-logger"}},n&&"object"==typeof n&&e(this.options,n),this.container=document.querySelector(this.options.container.selector),this.container.addClass(this.options.container.className),this.gl=GL.create({height:container.height(),width:container.width()}),this.container.append(this.gl.canvas),this.events=new EventHandler,t.prototype.enablePlugins(this),this.events.on("resize",function(e){e.gl.canvas.height=e.container.height(),e.gl.canvas.width=e.container.width()});var i=this;window.addEventListener("resize",function(e){i.events.trigger("resize",i)})};t.prototype.plugins={},t.prototype.enablePlugins=function(e){for(var n in t.prototype.plugins)e[n]=new t.prototype.plugins[n](e)},window.WebMesh=t}(),function(){WebMesh.prototype.plugins.logger=function(e){var t=document.createElement("DIV");t.addClass(e.options.logger.className),e.container.append(t);var n=document.createElement("DIV");n.innerHTML="Lorem ipsum...",n.addClass("info"),t.append(n),this.info=function(e){n.innerHTML=e},e.events.on("logger.info",this.info)}}(),function(){WebMesh.prototype.plugins.menu=function(e){var t=document.createElement("DIV");t.addClass(e.options.menu.className),e.container.append(t);var n=document.createElement("UL");t.append(n),this.items={File:[{"Load...":function(){console.log("item click!")}}],"Alert!":function(){e.events.trigger("logger.info","LOOK AT ME! O_O"),window.setTimeout(function(){e.events.trigger("logger.info","STAPH!")},2e3)},Help:[{"About WebMesh":function(){console.log("About what?!")}}]},this.update=function(){for(var e in this.items){var t=document.createElement("LI");t.innerHTML=e,t.addClass(e);var i=this.items[e];"function"==typeof i&&(t.onclick=i),n.append(t)}},this.update()}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
