"use strict";!function(){function e(e,t,n){e[t]||(e[t]=n)}e(Array.prototype,"unique",function(){for(var e=this.concat(),t=0;t<e.length;++t)for(var n=t+1;n<e.length;++n)e[t]===e[n]&&e.splice(n--,1);return e}),e(HTMLElement.prototype,"addClass",function(){for(var e in arguments){var t=this.className?this.className.trim().replace(/\s+/g," ").split(" "):[],n=arguments[e]?arguments[e].trim().replace(/\s+/g," ").split(" "):[];this.className=t.concat(n).unique().join(" ")}}),e(HTMLElement.prototype,"height",function(){return this.getBoundingClientRect().height}),e(HTMLElement.prototype,"width",function(){return this.getBoundingClientRect().width})}(),function(){window.EventHandler=function(){this.listeners={},this.trigger=function(){for(var e=arguments[0],t=arguments[1]||null,n=this.listeners[e]||[],i=0;i<n.length;i++){Array.prototype.splice.call(arguments,0,2);var s=this.listeners[e][i];s.apply(t,arguments)}},this.on=function(e,t){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t)},this.off=function(e){delete this.listeners[e]},this.off=function(e,t){if(this.listeners[e]){var n=this.listeners[e];n.indexOf(t)>-1&&n.splice(index,1)}}}}(),function(){function e(t,n){for(var i in n)if(n.hasOwnProperty(i)){var s=n[i];"object"==typeof s?e(t[i],n[i]):t[i]=n[i]}}window.WebMesh=function(t){this.options={container:{selector:"#webmesh",className:"wm-container"},menu:{className:"wm-menu"},logger:{className:"wm-logger"}},t&&"object"==typeof t&&e(this.options,t),this.container=document.querySelector(this.options.container.selector),this.container.addClass(this.options.container.className),this.gl=GL.create({height:container.height(),width:container.width()}),this.container.append(this.gl.canvas),this.events=new EventHandler,WebMesh.prototype.enablePlugins(this),window.addEventListener("resize",function(e){this.gl.canvas.height=this.container.height(),this.gl.canvas.width=this.container.width(),this.events.trigger("resize")})}}(),function(){WebMesh.prototype.plugins={},WebMesh.prototype.enablePlugins=function(e){for(var t in WebMesh.prototype.plugins)e[t]=new WebMesh.prototype.plugins[t](e)}}(),function(){WebMesh.prototype.plugins.logger=function(e){var t=document.createElement("DIV");t.addClass(e.options.logger.className),e.container.append(t);var n=document.createElement("DIV");n.innerHTML="Lorem ipsum...",n.addClass("info"),t.append(n),this.info=function(e){n.innerHTML=e},e.events.on("logger.info",this.info)}}(),function(){WebMesh.prototype.plugins.menu=function(e){var t=document.createElement("DIV");t.addClass(e.options.menu.className),e.container.append(t);var n=document.createElement("UL");t.append(n),this.items={File:[{"Load...":function(){console.log("item click!")}}],"Alert!":function(){e.events.trigger("logger.info",null,"LOOK AT ME! O_O"),window.setTimeout(function(){e.events.trigger("logger.info",null,"STAPH!")},2e3)},Help:[{"About WebMesh":function(){console.log("About what?!")}}]},this.update=function(){for(var e in this.items){var t=document.createElement("LI");t.innerHTML=e,t.addClass(e);var i=this.items[e];"function"==typeof i&&(t.onclick=i),n.append(t)}},this.update()}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
