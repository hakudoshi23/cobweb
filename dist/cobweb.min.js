"use strict";!function(){function t(t,e,n){t[e]||(t[e]=n)}t(Array.prototype,"unique",function(){for(var t=this.concat(),e=0;e<t.length;++e)for(var n=e+1;n<t.length;++n)t[e]===t[n]&&t.splice(n--,1);return t}),t(HTMLElement.prototype,"addClass",function(){for(var t in arguments){var e=this.className?this.className.trim().replace(/\s+/g," ").split(" "):[],n=arguments[t]?arguments[t].trim().replace(/\s+/g," ").split(" "):[];this.className=e.concat(n).unique().join(" ")}}),t(HTMLElement.prototype,"height",function(){return this.getBoundingClientRect().height}),t(HTMLElement.prototype,"width",function(){return this.getBoundingClientRect().width})}(),function(){var t=function(){this.listeners={}};t.prototype.trigger=function(){for(var t=arguments[0],e=this.listeners[t]||[],n=0;n<e.length;n++)Array.prototype.splice.call(arguments,0,1),e[n].apply(null,arguments)},t.prototype.on=function(t,e){this.listeners[t]||(this.listeners[t]=[]),this.listeners[t].push(e)},t.prototype.off=function(t){delete this.listeners[t]},t.prototype.off=function(t,e){if(this.listeners[t]){var n=this.listeners[t];n.indexOf(e)>-1&&n.splice(index,1)}},window.EventHandler=t}(),function(){function t(e,n){for(var i in n)if(n.hasOwnProperty(i)){var o=n[i];"object"==typeof o?t(e[i],n[i]):e[i]=n[i]}}var e=function(n){this.options={container:{selector:"#cobweb",className:"cb-container"},menu:{className:"cb-menu"},logger:{className:"cb-logger"}},n&&"object"==typeof n&&t(this.options,n),this.container=document.querySelector(this.options.container.selector),this.container.addClass(this.options.container.className),this.gl=GL.create({height:container.height(),width:container.width()}),this.container.append(this.gl.canvas),this.events=new EventHandler,e.prototype.enablePlugins(this),this.events.on("resize",function(t){t.gl.canvas.height=t.container.height(),t.gl.canvas.width=t.container.width()});var i=this;window.addEventListener("resize",function(t){i.events.trigger("resize",i)})};e.prototype.plugins={},e.prototype.enablePlugins=function(t){for(var n in e.prototype.plugins)t[n]=new e.prototype.plugins[n](t)},window.Cobweb=e}(),function(){var t=function(t){var e=document.createElement("DIV");e.addClass(t.options.logger.className),t.container.append(e);var n=document.createElement("DIV");n.innerHTML="Lorem ipsum...",n.addClass("info"),e.append(n),this.info=function(t){n.innerHTML=t},t.events.on("logger.info",this.info)};Cobweb.prototype.plugins.logger=t}(),function(){var t=function(t){this.container=document.createElement("DIV"),this.container.addClass(t.options.menu.className),t.container.append(this.container);var e=document.createElement("UL");e.addClass("main-menu"),this.container.append(e),this.items={File:[{"Load...":function(){console.log("item click!")}}],"Alert!":function(){t.events.trigger("logger.info","LOOK AT ME! O_O"),window.setTimeout(function(){t.events.trigger("logger.info","STAPH!")},2e3)},Help:[{"About WebMesh":function(){console.log("About what?!")}}]},this.update()};t.prototype.update=function(){for(var t in this.items){var e=document.createElement("LI");e.innerHTML=t,e.addClass(t);var n=this.items[t];"function"==typeof n&&(e.onclick=n);var i=this.container.querySelector(".main-menu");i.append(e)}},Cobweb.prototype.plugins.menu=t}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
